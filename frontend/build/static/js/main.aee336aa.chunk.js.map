{"version":3,"sources":["constants.js","utils/url.js","components/Header/Header.jsx","components/UI/Menu/Menu.jsx","components/MenuAdmin/MenuAdmin.jsx","components/UI/Table/Table.jsx","components/UI/Pagination/Pagination.jsx","components/UI/TableWithPagination/TableWithPagination.jsx","components/UI/Tooltip/Tooltip.jsx","components/UI/LongText/LongText.jsx","components/UI/Input/Input.jsx","utils/validation.js","API.js","components/Index/Index.jsx","components/Club/Club.jsx","components/Clubs/Clubs.jsx","components/Operators/Operators.jsx","components/Clients/Clients.jsx","components/Client/Client.jsx","components/Breadcrumbs/Breadcrumbs.jsx","AdminRoutes.jsx","components/MenuAgent/MenuAgent.jsx","components/IndexAgent/IndexAgent.jsx","AgentRoutes.jsx","components/MenuOperator/MenuOperator.jsx","components/IndexOperator/IndexOperator.jsx","components/Login/Login.jsx","components/Root/Root.jsx","components/Popup/popups/AddAgent.jsx","components/Popup/popups/AddClub.jsx","components/Popup/popups/AddPromo.jsx","components/Popup/popups/AddOperator.jsx","components/Popup/popups/ActionConfirm.jsx","components/Popup/popups/SmsConfirm.jsx","components/Popup/popups/Alert.jsx","components/Popup/popups/EditName.jsx","components/Popup/popups/EditUser.jsx","components/Popup/Popup.jsx","App.jsx","serviceWorker.js","index.js"],"names":["PAGE_URL","index","login","root","clients","client","club","clubs","operators","schemas","Agent","name","regexp","titles","clubRemoved","clubsAll","clubAllRemoved","parseURL","url","clubId","test","substr","page","find","setPageTitle","arguments","length","undefined","document","location","pathname","title","Header","this","props","history","listen","_this$props","role","avatar","avaClass","cn","concat","header__avatar_operator","header__avatar_agent","header__avatar_admin","react_default","a","createElement","className","Link","to","onClick","onLogout","PureComponent","Menu","_ref","children","MenuAdmin","UI_Menu_Menu","NavLink","exact","activeClassName","match","params","id","Table","cls","idName","map","cell","i","key","Row","_ref2","Pagination","onChange","_this","onClickPrev","currentPage","onClickNext","pagesCount","pageCount","labels","leftInterval","middleRow","rightInterval","rightEdge","push","forEach","value","_this2","pages","getLabels","prevCls","pagination__arrow","pagination__arrow_left","pagination__arrow_disabled","nextCls","pagination__arrow_right","pagination__page","pagination__page_active","TableWithPagination","state","rowsPerPage","onChangePage","setState","filterByPage","items","start","end","slice","filteredData","data","UI_Table_Table","header","item","mappingFn","UI_Pagination_Pagination","Math","ceil","defaultProps","Tooltip","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","style","marginLeft","leftOffset","text","LongText","Input","input","comparingValue","compareWith","_validate","type","isValid","error","console","validate","validationType","onBlur","isActivated","errorIsHidden","onFocus","shouldShowError","defaultValue","classNames","input__error","input__success","icon","mask","react_input_mask_default","alwaysShowMask","inputRef","el","placeholder","ref","API","hasRoot","method","createUser","changeUserStatus","getAgents","removeAgent","getClients","getClient","createClient","removeClient","clientIsExist","createClub","getClubs","getClub","changeClubStatus","getOperators","removeOperator","createPromotion","changeClubName","changeClientName","changeUser","request","_callee","response","body","_args","regenerator_default","wrap","_context","prev","next","headers","Headers","Content-Type","JSON","stringify","fetch","sent","json","t0","abrupt","isOk","status","message","code","sessionStorage","clear","stop","_callee2","_context2","_callee3","user","_context3","_callee4","logPass","_context4","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","is_exist","_callee12","_context12","_callee13","_args13","_context13","_callee14","_context14","_callee15","_context15","_callee16","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","promo","_context23","_callee24","_context24","_callee25","_context25","_callee26","password","_context26","src_API","blockClub","removeClub","activateClub","blockUser","removeUser","activateUser","Index","showPopup","openPopup","callback","updateAgents","onChangeInput","search","filterBySearch","users","filter","includes","toggleLock","action","button","content","_callback","asyncToGenerator","mark","apply","editAgent","_callback2","_x","_x2","agent","UI_LongText_LongText","clubsCount","moment","created","format","UI_Tooltip_Tooltip","filteredAgents","UI_Input_Input","UI_TableWithPagination_TableWithPagination","description","Club","fetchClub","onAddPromo","editClub","newName","objectSpread","updateClubs","promotions","buttons","width","address","clientsCount","Boolean","headerRemoved","Clubs","lastColumn","removed","ownerName","agentId","owner","goBack","Operators","fetchOps","onAddOperator","ops","op","operator","updateOperators","editOperator","newOp","updatedOperators","_callback3","updatedList","clubName","opsWithFilter","Clients","tableId","fetchClients","phone","creator","editClient","updateClients","newClient","updatedClients","downloadClients","date","table","TableExport","getElementById","ignoreCols","formats","exportButtons","filename","sheetname","getExportData","xlsx","csv","export2file","mimeType","fileExtension","filteredClients","Component","Client","fetchClient","clientId","Breadcrumbs","getLinks","links","clubsRemoved","clubsAllRemoved","getClubOwner","setClubId","link","AdminRoutes","fetchData","Promise","all","fetchClubs","fetchAgents","then","responses","agents","counters","updatedAgents","agentsNames","updatedClubs","selectedClubId","setClubName","_args2","newClub","hasAuth","Route","path","component","render","components_Breadcrumbs_Breadcrumbs","assign","components_Index_Index","Switch","components_Clubs_Clubs","components_Club_Club","components_Operators_Operators","components_Clients_Clients","components_Client_Client","MenuAgent","IndexAgent","filteredClubs","AgentRoutes","selectedClubName","components_IndexAgent_IndexAgent","MenuOperator","IndexOperator","_this$setState","defineProperty","onPromoSelect","_ref3","label","promoId","promoName","isFormValid","nameIsValid","phoneIsValid","onSubmit","register","sendCode","_ref5","_response$data$info","_response$data$info2","_name","promotion","info","components_MenuOperator_MenuOperator","options","unshift","selectedOption","react_select_esm","classNamePrefix","isSearchable","disabled","Login","loginIsValid","passwordIsValid","e","res","errorMessage","preventDefault","onLogin","login-panel__error_show","Root","checkIfRootExist","repeatPasswordIsValid","createAccount","repeatPassword","AddAgent","addAgent","close","AddClub","addressIsValid","addClub","AddPromo","onChangeTextarea","target","desc","addPromo","AddOperator","addOperator","RemoveConfirm","onAccept","_this$props$data","dangerouslySetInnerHTML","__html","SmsConfirm","setTimeout","Alert","EditName","EditUser","Popup","preventClosing","stopPropagation","onPressEsc","isOpen","addEventListener","getElementsByTagName","overflow","removeEventListener","open","popups_AddAgent","popups_Alert","popups_AddClub","popups_AddPromo","popups_AddOperator","ActionConfirm","popups_SmsConfirm","popups_EditName","popups_EditUser","cantClose","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","App","popupIsOpen","popupName","popupData","secondPopupIsOpen","secondPopupName","secondPopupData","userName","userRole","userClub","userAvatar","saveUser","setItem","closePopup","popupNumber","logout","storedData","getItem","parse","routesByRole","components_IndexOperator_IndexOperator","src_AgentRoutes","src_AdminRoutes","Redirect","BrowserRouter","components_Login_Login","Fragment","components_Header_Header","components_Popup_Popup","window","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aee336aa.chunk.js","sourcesContent":["export const PAGE_URL = {\n  index: '/',\n  login: '/login',\n  root: '/root',\n  clients: '/clients',\n  client: '/client',\n  club: '/club',\n  clubs: '/clubs',\n  operators: '/operators',\n}","const schemas = {\n  Agent: [\n    { name: 'login', regexp: /^\\/login$/ },\n    { name: 'index', regexp: /^\\/$/ },\n    { name: 'club', regexp: /^\\/club\\/.{24}$/ },\n    { name: 'clubs', regexp: /^\\/clubs\\/.{24}$/ },\n    { name: 'clubsRemoved', regexp: /^\\/clubs\\/.{24}\\/removed$/ },\n    { name: 'clubsAll', regexp: /^\\/clubs\\/all$/ },\n    { name: 'clubsAllRemoved', regexp: /^\\/clubs\\/removed$/ },\n    { name: 'clients', regexp: /^\\/club\\/.{24}\\/clients$/ },\n    { name: 'client', regexp: /^\\/club\\/.{24}\\/clients\\/.{24}$/ },\n    { name: 'operators', regexp: /^\\/club\\/.{24}\\/operators$/ },\n  ]\n}\n\nconst titles = {\n  index: 'SlotAdmin',\n  login: 'SlotAdmin | Вход',\n  club: 'SlotAdmin | Клуб',\n  clubs: 'SlotAdmin | Клубы',\n  clubRemoved: 'SlotAdmin | Удаленные клубы',\n  clubsAll: 'SlotAdmin | Клубы',\n  clubAllRemoved: 'SlotAdmin | Удаленные клубы',\n  clients: 'SlotAdmin | Клиенты',\n  client: 'SlotAdmin | Клиент',\n  operators: 'SlotAdmin | Операторы',\n}\n\nexport const parseURL = (url) => {\n  let clubId = null;\n  if (/^\\/club\\//.test(url)) {\n    clubId = url.substr(6, 24);\n  }\n  const page = schemas.Agent.find(page => page.regexp.test(url)) || {};\n  return { page: page.name, clubId, url };\n}\n\nexport const setPageTitle = (url = document.location.pathname) => {\n  const { page } = parseURL(url);\n  const title = titles[page] || titles.index;\n  document.title = title\n}","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nimport { setPageTitle } from '../../utils/url';\n\nclass Header extends PureComponent {\n\n  componentWillMount() {\n    setPageTitle();\n    this.props.history.listen((location) => {\n      setPageTitle(location.pathname);\n    });\n  }\n\n  render() {\n    const {role, avatar} = this.props;\n    const avaClass = cn(\n      'header__avatar',\n      `header__avatar_${avatar}`,\n      {\n        'header__avatar_operator': role === 'operator',\n        'header__avatar_agent': role === 'agent',\n        'header__avatar_admin': role === 'root',\n      }\n    );\n    return (\n      <div className=\"header\">\n        <div className=\"header__content\">\n          <Link to={'/'} className=\"header__logo\">\n            <div className=\"header__pic\" />\n            <div className=\"header__title\">SlotAdmin<span>Система учета клиентов</span></div>\n          </Link>\n          <div className=\"header__user\">\n            <span className=\"header__username\">{this.props.name}</span>\n            <div className={avaClass}/>\n            <div className=\"header__exit\" onClick={this.props.onLogout}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  role: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onLogout: PropTypes.func.isRequired,\n  avatar: PropTypes.number.isRequired,\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Menu.scss';\n\nfunction Menu({children}) {\n  return (\n    <div className=\"menu\">\n      <div className=\"menu__content\">{children}</div>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  \n};\n\nexport default Menu;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAdmin extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-agent\"><span>Агенты</span></NavLink>\n        <NavLink exact to={`${PAGE_URL.clubs}/all`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-client\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-client menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-promo\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-promo menu-tab_disabled\"><span>Акции</span></a>\n        }\n        \n      </Menu>\n    );\n  }\n}\n\nexport default MenuAdmin;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Table.scss';\n\nconst TableHeader = ({ children }) => {\n  return (\n    <thead>\n      <tr className=\"table__header\">\n        {\n          children.map((cell, i) => <th key={i}>{cell}</th>)\n        }\n      </tr>\n    </thead>\n  );\n}\n\nconst TableRow = ({ children, key }) => {\n  return (\n    <tr className=\"table__row\">\n      {\n        children.map(cell => <td key={key}>{cell}</td>)\n      }\n    </tr>\n  );\n}\n\nclass Table extends PureComponent {\n\n  static Header = TableHeader;\n\n  static Row = TableRow;\n\n  render() {\n    const cls = cn(['table', this.props.className]);\n    return (\n      <table className={cls} id={this.props.idName}>\n        {this.props.children}\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  className: PropTypes.string,\n  idName: PropTypes.string,\n};\n\nexport default Table;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Pagination.scss';\n\nclass Pagination extends PureComponent {\n\n  getLabels(pageCount, currentPage) {\n    const labels = [];\n    const getLeftEdge = () => 1;\n\n    const getLeftInterval = () => {\n      if (pageCount > 2) {\n        return currentPage > 4 ? '...' : 2;\n      }\n      return null;\n    };\n\n    const getRightEdge = () => (pageCount > 1 ? pageCount : null);\n\n    const getRightInterval = () => {\n      if (pageCount > 3) {\n        return currentPage < pageCount - 3 ? '...' : pageCount - 1;\n      }\n      return null;\n    };\n\n    const getMiddleRow = () => {\n      if (pageCount > 4) {\n        if (currentPage === pageCount) return [pageCount - 2];\n        if (currentPage === 1 || currentPage === 2) return [3];\n        if (currentPage === 3 && pageCount !== 5) return [3, 4];\n        if (currentPage === 3) return [3];\n        if (currentPage === pageCount - 1) return [currentPage - 1];\n        if (currentPage === pageCount - 2) return [currentPage - 1, currentPage];\n        return [currentPage - 1, currentPage, currentPage + 1];\n      }\n      return null;\n    };\n\n    const leftEdge = getLeftEdge();\n    const leftInterval = getLeftInterval();\n    const middleRow = getMiddleRow();\n    const rightInterval = getRightInterval();\n    const rightEdge = getRightEdge();\n    labels.push(leftEdge);\n    if (leftInterval) {\n      labels.push(leftInterval);\n    }\n    if (middleRow) {\n      middleRow.forEach(value => labels.push(value));\n    }\n    if (rightInterval) {\n      labels.push(rightInterval);\n    }\n    if (rightEdge) {\n      labels.push(rightEdge);\n    }\n    return labels;\n  }\n\n\n  onChange = (page) => () => {\n    this.props.onChange(page);\n  }\n\n  onClickPrev = () => {\n    if (this.props.currentPage > 1) {\n      this.props.onChange(this.props.currentPage - 1);\n    }\n  }\n\n  onClickNext = () => {\n    if (this.props.currentPage < this.props.pagesCount) {\n      this.props.onChange(this.props.currentPage + 1);\n    }\n  }\n\n  render() {\n    const pages = this.getLabels(this.props.pagesCount, this.props.currentPage);\n    const prevCls = cn({\n      'pagination__arrow': true,\n      'pagination__arrow_left': true,\n      'pagination__arrow_disabled': this.props.currentPage === 1,\n    });\n    const nextCls = cn({\n      'pagination__arrow': true,\n      'pagination__arrow_right': true,\n      'pagination__arrow_disabled': this.props.currentPage === this.props.pagesCount,\n    });\n\n    return (\n      <div className=\"pagination\">\n        <div onClick={this.onClickPrev} className={prevCls}/>\n        {\n          pages.map((page, i) => {\n            const cls = cn({\n              'pagination__page': true,\n              'pagination__page_active': page === this.props.currentPage,\n            });\n            return (\n              <div\n                className={cls}\n                key={i}\n                onClick={this.onChange(page)}>\n                  {page}\n              </div>\n            );\n          })\n        }\n        <div onClick={this.onClickNext} className={nextCls}/>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  pagesCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '../Table/Table';\nimport Pagination from '../Pagination/Pagination';\n\nclass TableWithPagination extends PureComponent {\n\n  static defaultProps = {\n    className: '',\n    idName: '',\n    data: [],\n  }\n\n  state = {\n    currentPage: 1,\n    rowsPerPage: 10,\n  };\n\n  componentWillReceiveProps() {\n    this.setState({currentPage: 1})\n  }\n\n  onChangePage = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  filterByPage = (items) => {\n    const start = (this.state.currentPage - 1) * this.state.rowsPerPage;\n    const end = start + this.state.rowsPerPage;\n    return items.slice(start, end)\n  }\n\n  render() {\n    const filteredData = this.filterByPage(this.props.data);\n    return (\n      <div>\n        <Table className={this.props.className} idName={this.props.idName}>\n          <Table.Header>{this.props.header}</Table.Header>\n          <tbody>\n          {\n            filteredData.map((item, i) => (\n              <Table.Row key={item.id || i}>\n                {this.props.mappingFn(item, i)}\n              </Table.Row>\n            ))\n          }\n          </tbody>\n        </Table>\n        {\n          this.props.data.length > this.state.rowsPerPage &&\n          <Pagination\n            pagesCount={Math.ceil(this.props.data.length / this.state.rowsPerPage)}\n            currentPage={this.state.currentPage}\n            onChange={this.onChangePage}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nTableWithPagination.propTypes = {\n  className: PropTypes.string,\n  idName: PropTypes.string,\n  header: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mappingFn: PropTypes.func.isRequired,\n  data: PropTypes.array,\n};\n\nexport default TableWithPagination;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Tooltip.scss';\n\nclass Tooltip extends PureComponent {\n  static defaultProps = {\n    leftOffset: '-5px'\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"tooltip\">\n        {this.props.children}\n        <div className=\"tooltip__content\" style={{marginLeft: this.props.leftOffset}}>{this.props.text}</div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired,\n  leftOffset: PropTypes.string,\n};\n\nexport default Tooltip;","import React from 'react';\nimport './LongText.scss';\n\nfunction LongText({ children }) {\n  return (\n    <div className=\"long-text\" title={children}>{children}</div>\n  );\n}\n\nexport default LongText;\n\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport InputMask from 'react-input-mask';\nimport './Input.scss';\n\nimport { validate } from '../../../utils/validation';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    name: 'input',\n    type: 'text',\n    value: '',\n    defaultValue: '',\n    placeholder: '',\n    onChange: () => { },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: false,\n      error: '',\n      isActivated: false,\n      errorIsHidden: true,\n    };\n  }\n  \n  componentDidMount() {\n    this.input.value = this.props.defaultValue;\n  }\n\n  onChange = () => {\n    const value = this.input.value;\n    const comparingValue = this.props.compareWith;\n    let {isValid, error} = validate(value, this.props.validationType);\n    if (comparingValue) {\n      if (value !== comparingValue) {\n        isValid = false;\n        error = 'Поля не совпадают';\n      }\n    }\n    this.setState({ isValid, error });\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      isValid,\n    })\n  }\n\n  onBlur = () => {\n    this.setState({isActivated: true, errorIsHidden: true});\n  }\n\n  onFocus = () => {\n    if (this.state.isActivated) {\n      this.setState({ errorIsHidden: false });\n    } else {\n      this.onChange();\n    }\n  }\n\n  shouldShowError = () => {\n    return !!this.props.validationType && !this.state.isValid && !this.state.errorIsHidden\n  }\n\n  render() {\n    this.props.compareWith && this.onChange();\n    const cn = classNames(\n      'input',\n      {'input__error': !this.state.isValid && this.state.isActivated},\n      { 'input__success': this.state.isValid && this.state.isActivated},\n    );\n    return (\n      <div className={this.props.icon ? `input-wrapper input-wrapper_${this.props.icon}`: null}>\n      {\n        this.props.mask ?\n        <InputMask\n          className={cn}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          value={this.props.value}\n          mask={this.props.mask}\n          alwaysShowMask\n          inputRef={(el) => { this.input = el }}\n        />\n      \n      :<input\n        className={cn}\n        type={this.props.type}\n        name={this.props.name}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        value={this.props.value}\n        placeholder={this.props.placeholder}\n        ref={(el) => {this.input = el}}\n      />\n      }\n        {this.shouldShowError() && <div className=\"input__message\">{this.state.error}</div>}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  validationType: PropTypes.string,\n  compareWith: PropTypes.string,\n  defaultValue: PropTypes.string,\n};\n\nexport default Input;","export function validate (value, type) {\n  if (!type) return true;\n  if (type === 'login') {\n    const regexp = /^(?=.*[A-Za-z0-9]$)[A-Za-z][\\_A-Za-z\\d.-]{3,20}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Длина логина 4-20 символов. Можно использовать латинские буквы, цифры, тире, подчеркивание и точку' };\n  } else if (type === 'password') {\n    const regexp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,14}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Длина пароля 8-14 символов. Пароль должен содеражать заглавную и строчную буквы и цифру' };\n  } else if (type === 'required') {\n    if (value.length) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Заполните поле' };\n  } else if (type === 'phone') {\n    const regexp = /^\\+7 \\([0-9]{3}\\) [0-9]{3} - [0-9]{2} - [0-9]{2}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Введите корректный номер телефона' };\n  }\n  console.error('Unknown validation type');\n}","import { PAGE_URL } from './constants';\n\nconst API = {\n  hasRoot: {\n    method: 'GET',\n    url: '/api/root',\n  },\n  createUser: {\n    method: 'POST',\n    url: '/api/user',\n  },\n  login: {\n    method: 'POST',\n    url: '/api/login',\n  },\n  changeUserStatus: {\n    method: 'PUT',\n    url: '/api/user',\n  },\n  getAgents: {\n    method: 'GET',\n    url: '/api/agents',\n  },\n  removeAgent: {\n    method: 'DELETE',\n    url: '/api/agent/',\n  },\n  getClients: {\n    method: 'GET',\n    url: '/api/clients/',\n  },\n  getClient: {\n    method: 'GET',\n    url: '/api/client/',\n  },\n  createClient: {\n    method: 'POST',\n    url: '/api/client',\n  },\n  removeClient: {\n    method: 'PUT',\n    url: '/api/client',\n  },\n  clientIsExist: {\n    method: 'POST',\n    url: '/api/client/is_exist',\n  },\n  createClub: {\n    method: 'POST',\n    url: '/api/club',\n  },\n  getClubs: {\n    method: 'GET',\n    url: '/api/clubs/',\n  },\n  getClub: {\n    method: 'GET',\n    url: '/api/club/',\n  },\n  changeClubStatus: {\n    method: 'PUT',\n    url: '/api/club',\n  },\n  getOperators: {\n    method: 'GET',\n    url: '/api/operators/',\n  },\n  removeOperator: {\n    method: 'DELETE',\n    url: '/api/operator/',\n  },\n  createPromotion: {\n    method: 'POST',\n    url: '/api/promotion/',\n  },\n  changeClubName: {\n    method: 'PUT',\n    url: '/api/club/name',\n  },\n  changeClientName: {\n    method: 'PUT',\n    url: '/api/client/name',\n  },\n  changeUser: {\n    method: 'PUT',\n    url: '/api/user/update',\n  },\n};\n\nasync function request(url, method = 'GET', data) {\n  const params = {\n    method,\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n  };\n  if (data) {\n    params.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, params);\n  let body;\n  try {\n    body = await response.json();\n  } catch {\n    console.error('request has been finished with error');\n    return { isOk: false, data: {}};\n  }\n  if (response.status !== 200) {\n    console.error(body.message);\n    if (body.code === 4) {\n      sessionStorage.clear();\n      document.location = PAGE_URL.login;\n    }\n    return { isOk: false, data: body };\n  }\n  return { isOk: true, data: body };\n}\n\nasync function hasRoot() {\n  const response = await request(API.hasRoot.url);\n  return response.data;\n}\n\nasync function createUser(user) {\n  const response = await request(API.createUser.url, API.createUser.method, user);\n  return response;\n}\n\nasync function login(logPass) {\n  const response = await request(API.login.url, API.login.method, logPass);\n  return response;\n}\n\nasync function getAgents() {\n  const response = await request(API.getAgents.url);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeAgent(id) {\n  const response = await request(API.removeAgent.url + id, API.removeAgent.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function getClients(id) {\n  const response = await request(API.getClients.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClient(id) {\n  const response = await request(API.getClient.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function createClient(client) {\n  const response = await request(API.createClient.url, API.createClient.method, client);\n  return response;\n}\n\nasync function removeClient(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.removeClient.url, API.removeClient.method, params);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function clientIsExist(client) {\n  const response = await request(API.clientIsExist.url, API.clientIsExist.method, client);\n  return response.data.is_exist;\n}\n\nasync function createClub(club) {\n  const response = await request(API.createClub.url, API.createClub.method, club);\n  return response;\n}\n\nasync function getClubs(id = '', status) {\n  const response = await request(`${API.getClubs.url}${id}${status ? '/' + status : ''}`);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClub(id) {\n  const response = await request(API.getClub.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockClub(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeClub(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function activateClub(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockUser(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeUser(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function activateUser(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getOperators(clubId) {\n  const response = await request(API.getOperators.url + clubId);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeOperator(id) {\n  const response = await request(API.removeOperator.url + id, API.removeOperator.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function createPromotion(clubId, promo) {\n  const response = await request(API.createPromotion.url + clubId, API.createPromotion.method, promo);\n  return response;\n}\n\nasync function changeClubName(id, name) {\n  const body = { id, name };\n  const response = await request(API.changeClubName.url, API.changeClubName.method, body);\n  return response.data;\n}\n\nasync function changeClientName(id, name) {\n  const body = { id, name };\n  const response = await request(API.changeClientName.url, API.changeClientName.method, body);\n  return response.data;\n}\n\nasync function changeUser(id, login, password) {\n  const body = { id, login, password };\n  const response = await request(API.changeUser.url, API.changeUser.method, body);\n  return response;\n}\n\nexport default {\n  hasRoot,\n  createUser,\n  login,\n  getAgents,\n  removeAgent,\n  getClients,\n  getClient,\n  createClient,\n  removeClient,\n  clientIsExist,\n  createClub,\n  getClubs,\n  getClub,\n  blockClub,\n  removeClub,\n  activateClub,\n  blockUser,\n  removeUser,\n  activateUser,\n  getOperators,\n  removeOperator,\n  createPromotion,\n  changeClubName,\n  changeClientName,\n  changeUser,\n};","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Index.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Агент', 'Количество клубов', 'Дата создания', ''];\n\nclass Index extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateAgents();\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-agent', { callback: this.props.updateAgents});\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (users) => {\n    return users.filter(user => user.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status, login) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка агента',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} агента? <br/><b>${login}</b></div>`,\n      callback: async () => {\n        let agent;\n        if (status === 'active') {\n          agent = await API.blockUser(id);\n        } else {\n          agent = await API.activateUser(id);\n        }\n        this.props.updateAgents();\n      }\n    });\n  }\n\n  editAgent = (id, name) => () => {\n    this.props.openPopup('edit-user', {\n      title: 'Редактировать агента',\n      login: name,\n      callback: async (login, password) => {\n        const response = await API.changeUser(id, login, password);\n        if (response.isOk) {\n          this.props.openPopup('alert', {\n            type: 'success',\n            title: 'Агент изменен',\n            text: 'Изменения успешно сохранены'\n          });\n          this.props.updateAgents();\n        } else {\n          let error = 'Произошла ошибка';\n          if (response.data.code === 6) {\n            error = 'Такой логин уже зарегистрирован';\n          }\n          this.props.openPopup('alert', {\n            type: 'error',\n            title: 'Ошибка',\n            text: error,\n          });\n        }\n      }\n    });\n  }\n\n  mappingFn = (agent, i) => {\n    const avaClass = cn(`header__avatar_${agent.avatar}`, 'header__avatar_min', 'header__avatar_agent');\n    return [\n      i + 1,\n      <div className={avaClass}>\n        <Link to={`${PAGE_URL.clubs}/${agent.id}`}><LongText>{agent.login}</LongText></Link>\n      </div>,\n      agent.clubsCount,\n      moment(agent.created).format('DD.MM.YYYY HH:mm:ss'),\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editAgent(agent.id, agent.login)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={agent.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(agent.id, agent.status, agent.login)} className={`button-lock ${agent.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.props.removeAgent(agent.id, agent.login)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    ]\n  }\n\n  render() {\n    const filteredAgents = this.filterBySearch(this.props.users);\n    return (\n      <div className=\"page page_index\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление агентами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени агента\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Добавить агента</span>\n          </button>\n        </div>\n        {\n          this.props.users.length\n          ? <TableWithPagination\n              className=\"agents\"\n              header={header}\n              mappingFn={this.mappingFn}\n              data={filteredAgents}\n            />\n          : <div className=\"empty-table\">Список агентов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Index;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './Club.scss';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\n\nconst header = ['#', 'Акция', 'Описание', 'Дата добавления'];\n\nconst mappingFn = (promo, i) => [\n  i + 1,\n  <LongText>{promo.name}</LongText>,\n  <LongText>{promo.description}</LongText>,\n  moment(promo.created).format('DD.MM.YYYY HH:mm:ss')\n]\n\nclass Club extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      club: {\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClub();\n  }\n\n  fetchClub = async () => {\n    const id = this.props.match.params.id;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onAddPromo = () => {\n    this.props.openPopup('add-promo', { id: this.state.club.id, callback: this.fetchClub});\n  }\n\n  removeClub = (id) => () => {\n    this.props.removeClub(id)();\n    this.props.history.push('/');\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.setState({\n          club: {\n            ...this.state.club,\n            name: newName,\n          }\n        });\n        this.props.updateClubs(club)\n      }\n    });\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const buttons = (\n      <div>\n        <Tooltip text='Изменить' leftOffset='5px'>\n          <div onClick={this.editClub(this.state.club.id, this.state.club.name)} className=\"button-edit button-edit_big\" />\n        </Tooltip>\n        <Tooltip text='Удалить' leftOffset='12px'>\n          <div onClick={this.removeClub(this.state.club.id)} className=\"button-remove button-remove_big\" />\n        </Tooltip>\n      </div>\n    );\n    return (\n      <div className=\"page page_club\">\n        <div className=\"unit-header unit-header_club\">\n          <div className=\"long-text\" style={{width: '80%'}}>Клуб - {this.state.club.name}</div>\n          <div className=\"unit-header__remove\">\n          {\n            this.state.club.status === 'removed'\n            ? <div className=\"removed-text\">Удален</div>\n            : buttons\n          }\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_club\">\n            <div className=\"unit-info__name\">Название клуба</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.club.name}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Адрес</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.club.address}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Количество клиентов</div>\n            <div className=\"unit-info__text\">{this.state.club.clientsCount}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.club.created).format('DD.MM.YYYY HH:mm:ss')}</div>\n          </div>\n        </div>\n        {Boolean(this.state.club.promotions.length) &&\n          <TableWithPagination \n            className=\"clubs\"\n            header={header}\n            mappingFn={mappingFn}\n            data={this.state.club.promotions}\n          />\n        }\n        {this.state.club.status !== 'removed' &&\n          <div className=\"button-wrapper\">\n            <button className=\"button\" type=\"button\" onClick={this.onAddPromo}>\n              <span className=\"button_add\">Создать акцию</span>\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nClub.propTypes = {\n\n};\n\nexport default Club;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport moment from 'moment';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Агент клуба', 'Дата создания', ''];\nconst headerRemoved = ['#', 'Клуб', 'Количество клиентов', 'Агент клуба', 'Дата создания', 'Дата удаления'];\n\nclass Clubs extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      status: 'active',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateClubs();\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.state.status !== props.status) {\n      this.props.updateClubs(null, props.status);\n      this.setState({status: props.status})\n    }\n  }\n\n  getClubs() {\n    const id = this.props.match.params.agentId;\n    if (!id) {\n      return this.props.clubs.filter(club => club.name.includes(this.state.search))\n    }\n    return this.props.clubs.filter(club => club.owner === id && club.name.includes(this.state.search) )\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  toggleLock = (id, status, name) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка клуба',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        let club;\n        if (status === 'active') {\n          club = await API.blockClub(id);\n        } else {\n          club = await API.activateClub(id);\n        }\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  mappingFn = (club, i) => {\n    let lastColumn = (\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editClub(club.id, club.name)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(club.id, club.status, club.name)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    );\n    if (this.props.status === 'removed') {\n      lastColumn = <div>{moment(club.removed).format('DD.MM.YYYY HH:mm:ss')}</div>;\n    }\n    const avaClass = cn(`header__avatar_${club.ownerName.avatar}`, 'header__avatar_min', 'header__avatar_agent');\n    return [\n      i + 1,\n      <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}><LongText>{club.name}</LongText></Link>,\n      club.clientsCount,\n      <div className={avaClass}><LongText>{club.ownerName.login}</LongText></div>,\n      moment(club.created).format('DD.MM.YYYY HH:mm:ss'),\n      lastColumn\n    ]\n  }\n\n  render() {\n    const clubs = this.getClubs();\n    const agentId = this.props.match.params.agentId;\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          {this.props.status === 'removed'\n            ? <div className=\"search-block__title search-block__title_red\">Удаленные клубы</div>\n            : <div className=\"search-block__title\">Управление клубами</div>\n          }\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          {\n            this.props.status !== 'removed'\n            ? <Link to={`${agentId ? agentId + '/' : ''}removed`}><button className=\"button button_remove button_red\">удаленные клубы</button></Link>\n            : <button onClick={this.props.history.goBack} className=\"button button_gray\">Вернуться назад</button>\n          }\n        </div>\n        {this.props.status === 'removed' && <div className=\"crossline\" />}\n        {\n          clubs.length\n            ? <TableWithPagination\n                className=\"clubsall\"\n                header={this.props.status === 'removed' ? headerRemoved : header}\n                mappingFn={this.mappingFn}\n                data={clubs}\n              />\n            : <div className=\"empty-table\">Список клубов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nClubs.propTypes = {\n  \n};\n\nexport default Clubs;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport moment from 'moment';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport LongText from '../UI/LongText/LongText';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\n\nconst header = ['#', 'Оператор', 'Клуб', 'Дата регистрации', ''];\n\nclass Operators extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      operators: [],\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.fetchOps();\n  }\n\n  fetchOps = async () => {\n    const clubId = this.props.match.params.id;\n    const operators = await API.getOperators(clubId);\n    if (operators) {\n      this.setState({ operators });\n    }\n  }\n\n  onAddOperator = () => {\n    const id = this.props.match.params.id;\n    this.props.openPopup('add-operator', { id, callback: this.fetchOps });\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value, currentPage: 1 });\n  }\n\n  filterBySearch = (ops) => {\n    return ops.filter(op => op.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status, login) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка оператора',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} оператора? <br/><b>${login}</b></div>`,\n      callback: async () => {\n        let operator;\n        if (status === 'active') {\n          operator = await API.blockUser(id);\n        } else {\n          operator = await API.activateUser(id);\n        }\n        if (operator) {\n          this.updateOperators(operator);\n        }\n      }\n    });\n  }\n\n  editOperator = (id, name) => () => {\n    this.props.openPopup('edit-user', {\n      title: 'Редактировать оператора',\n      login: name,\n      callback: async (login, password) => {\n        const response = await API.changeUser(id, login, password);\n        if (response.isOk) {\n          this.props.openPopup('alert', {\n            type: 'success',\n            title: 'Оператор изменен',\n            text: 'Изменения успешно сохранены'\n          });\n          this.updateOperators(response.data);\n        } else {\n          let error = 'Произошла ошибка';\n          if (response.data.code === 6) {\n            error = 'Такой логин уже зарегистрирован';\n          }\n          this.props.openPopup('alert', {\n            type: 'error',\n            title: 'Ошибка',\n            text: error,\n          });\n        }\n      }\n    });\n  }\n\n  updateOperators = (newOp) => {\n    const updatedOperators = this.state.operators.map(operator => operator.id === newOp.id ? {...operator, ...newOp} : operator);\n    this.setState({ operators: updatedOperators });\n  }\n\n  removeOperator = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление оператора',\n      content: `<div>Вы действительно хотите удалить оператора? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeOperator(id);\n        if (isRemoved) {\n          const updatedList = this.state.operators.filter(op => op.id !== id);\n          this.setState({ operators: updatedList });\n        }\n      }\n    });\n  }\n\n  mappingFn = (operator, i) => {\n    const avaClass = cn(`header__avatar_${operator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <div className={avaClass}><LongText>{operator.login}</LongText></div>,\n      <LongText>{operator.clubName}</LongText>,\n      moment(operator.created).format('DD.MM.YYYY HH:mm:ss'),\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editOperator(operator.id, operator.login)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={operator.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(operator.id, operator.status, operator.login)} className={`button-lock ${operator.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.removeOperator(operator.id, operator.login)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    ]\n  }\n\n  render() {\n    const opsWithFilter = this.filterBySearch(this.state.operators);\n    return (\n      <div className=\"page page_operators\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление операторами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени оператора\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.onAddOperator}>\n            <span className=\"button_add\">Добавить оператора</span>\n          </button>\n        </div>\n        {\n          this.state.operators.length\n            ? <TableWithPagination\n                className=\"clubs\"\n                header={header}\n                mappingFn={this.mappingFn}\n                data={opsWithFilter}\n              />\n            : <div className=\"empty-table\">Для клуба нет назначенных операторов</div>\n        }\n      </div>\n    );\n  }\n}\n\nOperators.propTypes = {\n  \n};\n\nexport default Operators;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport TableExport from 'tableexport';\nimport cn from 'classnames';\nimport './Clients.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Имя клиента', 'Телефон', 'Акции', 'Добавил', 'Дата регистрации', ''];\nconst headerRemoved = ['#', 'Имя клиента', 'Телефон', 'Акции', 'Добавил', 'Дата регистрации', 'Дата удаления'];\n\nclass Clients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: [],\n      search: '',\n      status: 'active',\n    };\n  }\n\n  tableId = 'datatable'\n\n  componentWillMount() {\n    this.fetchClients();\n  }\n\n  fetchClients = async () => {\n    const clubId = this.props.match.params.id;\n    const clients = await API.getClients(clubId);\n    if (clients) {\n      const status = clients[0] ? clients[0].status : 'active';\n      this.setState({clients, status});\n    }\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (clients) => {\n    return clients.filter(client => client.name.includes(this.state.search) || client.phone.includes(this.state.search) || client.creator.login.includes(this.state.search));\n  }\n\n  editClient = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клиента',\n      input: {\n        name: 'Имя клиента',\n        placeholder: 'Введите имя клиента',\n        value: name,\n        icon: 'login',\n      },\n      callback: async (newName) => {\n        const client = await API.changeClientName(id, newName);\n        this.updateClients(client);\n      }\n    });\n  }\n\n  updateClients = (newClient) => {\n    const updatedClients = this.state.clients.map(client => client.id === newClient.id ? newClient : client);\n    this.setState({ clients: updatedClients });\n  }\n\n  removeClient = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клиента',\n      content: `<div>Вы действительно хотите удалить клиента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClient(id);\n        if (isRemoved) {\n          const updatedClients = this.state.clients.filter(client => client.id !== id);\n          this.setState({ clients: updatedClients });\n        }\n      }\n    });\n  }\n\n  mappingFn = (client, i) => {\n    let lastColumn = (\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editClient(client.id, client.name)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.removeClient(client.id, client.name)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    );\n    if (this.state.status === 'removed') {\n      lastColumn = <div>{moment(client.removed).format('DD.MM.YYYY HH:mm:ss')}</div>;\n    }\n    const avaClass = cn(`header__avatar_${client.creator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}/${client.id}`}><LongText>{client.name}</LongText></Link>,\n      client.phone,\n      client.promotions.length,\n      <div className={avaClass}><LongText>{client.creator.login}</LongText></div>,\n      moment(client.created).format('DD.MM.YYYY HH:mm:ss'),\n      lastColumn\n    ]\n  };\n\n  downloadClients = (type) => () => {\n    const date = moment().format('YYYY.MM.DD-HH_mm');\n    const table = TableExport(document.getElementById(this.tableId),\n      {\n        ignoreCols: [0, 6],\n        formats: [\"xls\", \"xlsx\", \"csv\"],\n        exportButtons: false,\n        filename: `clients_${date}`,\n        sheetname: \"clients\",\n      }\n    );\n    let data = table.getExportData();\n    data = type === 'xls' ? data[this.tableId].xlsx : data[this.tableId].csv;\n    table.export2file(data.data, data.mimeType, data.filename, data.fileExtension);\n  }\n\n  render() {\n    const filteredClients = this.filterBySearch(this.state.clients);\n    return (\n      <div className=\"page page_clients\">\n        <div className=\"search-block\">\n          {this.state.status === 'removed'\n            ? <div className=\"search-block__title search-block__title_red\">Удаленные клиенты {this.props.clubName}</div>\n            : <div className=\"search-block__title\"><LongText>Список Клиентов {this.props.clubName}</LongText></div>\n          }\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <div>\n            <button className=\"button-file button-file__xls\" onClick={this.downloadClients('xls')}></button>\n            <button className=\"button-file button-file__csv\" onClick={this.downloadClients('csv')}></button>\n          </div>\n        </div>\n        {this.state.status === 'removed' && <div className=\"crossline\" />}\n        {\n          this.state.clients.length\n            ? <TableWithPagination\n                className=\"clients\"\n                idName={this.tableId}\n                header={this.state.status === 'removed' ? headerRemoved : header}\n                mappingFn={this.mappingFn}\n                data={filteredClients}\n              />\n            : <div className=\"empty-table\">В клубе нет клиентов</div>\n        }\n      </div>\n    );\n  }\n}\n\nClients.propTypes = {\n  clubName: PropTypes.string.isRequired,\n};\n\nexport default Clients;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport cn from 'classnames';\nimport './Client.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport API from '../../API';\nimport LongText from '../UI/LongText/LongText';\n\nconst header = ['#', 'Акция', 'Добавил', 'Дата'];\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: {\n        creator: {\n          login: '',\n          avatar: 0,\n        },\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClient();\n  }\n\n  fetchClient = async () => {\n    const id = this.props.match.params.clientId;\n    const client = await API.getClient(id);\n    if (client) {\n      this.setState({ client });\n    }\n  }\n\n  removeClient = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клиента',\n      content: `<div>Вы действительно хотите удалить клиента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClient(id);\n        if (isRemoved) {\n          this.props.history.goBack();\n        }\n      }\n    });\n  }\n\n  editClient = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клиента',\n      input: {\n        name: 'Имя клиента',\n        placeholder: 'Введите имя клиента',\n        icon: 'login',\n        value: name,\n      },\n      callback: async (newName) => {\n        const client = await API.changeClientName(id, newName);\n        this.setState({\n          client: {\n            ...this.state.client,\n            name: newName,\n          }\n        });\n      }\n    });\n  }\n\n  mappingFn = (promo, i) => {\n    const avaClass = cn(`header__avatar_${promo.creator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <LongText>{promo.name}</LongText>,\n      <div className={avaClass}><LongText>{promo.creator.login}</LongText></div>,\n      moment(promo.date).format('DD.MM.YYYY HH:mm:ss')\n    ]\n  }\n\n  render() {\n    const buttons = (\n      <div>\n        <Tooltip text='Изменить' leftOffset='5px'>\n          <div onClick={this.editClient(this.state.client.id, this.state.client.name)} className=\"button-edit button-edit_big\" />\n        </Tooltip>\n        <Tooltip text='Удалить' leftOffset='12px'>\n          <div onClick={this.removeClient(this.state.client.id, this.state.client.name)} className=\"button-remove button-remove_big\" />\n        </Tooltip>\n      </div>\n    );\n    return (\n      <div className=\"page page_client\">\n        <div className=\"unit-header unit-header_client\">\n          <div className=\"long-text\" style={{ width: '80%' }}>Клиент - {this.state.client.name}</div>\n          <div className=\"unit-header__remove\">\n          {\n            this.state.client.status === 'removed'\n            ? <div className=\"removed-text\">Удален</div>\n            : buttons\n          }\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_username\">\n            <div className=\"unit-info__name\">Имя</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.client.name}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Телефон</div>\n            <div className=\"unit-info__text\">{this.state.client.phone}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Добавил</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.client.creator.login}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.client.created).format('DD.MM.YYYY HH:mm:ss')}</div>\n          </div>\n        </div>\n        \n        {Boolean(this.state.client.promotions.length) &&\n          <TableWithPagination\n            className=\"clubs\"\n            header={header}\n            mappingFn={this.mappingFn}\n            data={this.state.client.promotions}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nClient.propTypes = {\n  \n};\n\nexport default Client;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom'\nimport './Breadcrumbs.scss';\n\nimport { parseURL } from '../../utils/url';\n\nclass Breadcrumbs extends PureComponent {\n\n  getLinks = ({page, clubId, url}) => {\n    const clubName = this.props.clubName;\n    const links = {\n      index: { text: 'Главная', url: '/' },\n      club: (id) => ({ text: `Клуб ${clubName}`, url: `/club/${id}/clients` }),\n      clubs: { text: `Клубы агента`, url },\n      clubsRemoved: { text: `Удаленные клубы агента`, url },\n      clubsAll: { text: `Клубы`, url },\n      clubsAllRemoved: { text: `Удаленные клубы`, url },\n      operators: (id) => ({ text: 'Управление операторами', url }),\n      clients: (id) => ({ text: 'Управление клиентами', url: `/club/${id}/clients` }),\n      client: (id) => ({ text: 'Клиент', url }),\n      promo: { text: `Акции клуба`, url },\n      agent: (clubId) => {\n        const agentId = this.props.getClubOwner(clubId);\n        return { text: `Клубы агента`, url: `/clubs/${agentId}` }\n      },\n    };\n\n    if (page === 'index') {\n      return [links.index];\n    }\n    if (page === 'clubsAll') {\n      return [links.index, links.clubsAll];\n    }\n    if (page === 'clubsAllRemoved') {\n      return [links.index, links.clubsAllRemoved];\n    }\n    if (page ==='clubs') {\n      return [links.index, links.clubs];\n    }\n    if (page === 'clubsRemoved') {\n      return [links.index, links.clubsRemoved];\n    }\n    if (page === 'club') {\n      return [links.index, links.club(clubId), links.promo];\n    }\n    if (page === 'operators') {\n      return [links.index, links.club(clubId), links.operators(clubId)];\n    }\n    if (page === 'clients' && this.props.user === 'agent') {\n      return [links.index, links.club(clubId)];\n    }\n    if (page === 'clients' && this.props.user === 'admin') {\n      return [links.index, links.agent(clubId), links.club(clubId)];\n    }\n    if (page === 'client') {\n      return [links.index, links.club(clubId), links.client(clubId)];\n    }\n    return [];\n  }\n\n  render() {\n    const currentPage = parseURL(document.location.pathname);\n    const links = this.getLinks(currentPage);\n    if (currentPage.clubId) {\n      this.props.setClubId(currentPage.clubId);\n    }\n    return (\n      <div className=\"breadcrumbs\">\n        {\n          links.map((link, i) => <NavLink exact to={link.url} key={i} className=\"breadcrumb\" activeClassName=\"breadcrumb_active\">{link.text}</NavLink>)\n        }\n      </div>\n    );\n  }\n}\n\nBreadcrumbs.propTypes = {\n  setClubId: PropTypes.func.isRequired,\n  clubName: PropTypes.string.isRequired,\n  user: PropTypes.oneOf(['admin', 'agent']),\n  getClubOwner: PropTypes.func,\n}\n\nexport default Breadcrumbs;","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport MenuAdmin from './components/MenuAdmin/MenuAdmin';\nimport Index from './components/Index/Index';\nimport Club from './components/Club/Club';\nimport Clubs from './components/Clubs/Clubs';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AdminRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agents: [],\n      clubs: [],\n      selectedClubId: null,\n      clubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchData();\n    }\n  }\n\n  fetchData = (status = 'active') => {\n    Promise.all([this.fetchClubs('all', status), this.fetchAgents()]).then((responses) => {\n      const clubs = responses[0];\n      const agents = responses[1];\n      const counters = {};\n      clubs.forEach(club => {\n        counters[club.owner] = counters[club.owner] ? counters[club.owner] + 1 : 1;\n      });\n      const updatedAgents = agents.map(agent => ({ ...agent, clubsCount: counters[agent.id] || 0 }));\n      const agentsNames = {};\n      agents.forEach(agent => {\n        agentsNames[agent.id] = {login: agent.login, avatar: agent.avatar};\n      });\n      const updatedClubs = clubs.map(club => ({...club, ownerName: agentsNames[club.owner]}));\n      this.setState({ agents: updatedAgents, clubs: updatedClubs }, () => {\n        if (this.state.selectedClubId) {\n          this.setClubName();\n        }\n      });\n    });\n  }\n\n  fetchAgents = async () => {\n    const agents = await API.getAgents();\n    return agents;\n  }\n\n  fetchClubs = async (id = 'all', status) => {\n    const clubs = await API.getClubs(id, status);\n    return clubs;\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({ clubName: club.name ? `(${club.name.substr(0, 50)})` : ''});\n  }\n\n  updateClubs = (newClub, status) => {\n    if (!newClub) {\n      this.fetchData(status);\n      return;\n    };\n    const updatedClubs = this.state.clubs.map(club => club.id === newClub.id ? {...club, ...newClub} : club);\n    this.setState({ clubs: updatedClubs }, this.setClubName);\n  }\n\n  updateAgents = () => {\n    this.fetchData();\n  }\n\n  removeClub = (id, name) => async () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n        }\n      }\n    });\n  }\n\n  removeAgent = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление агента',\n      content: `<div>Вы действительно хотите удалить агента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeAgent(id);\n        if (isRemoved) {\n          const updatedAgents = this.state.agents.filter(agent => agent.id !== id);\n          this.setState({ agents: updatedAgents });\n        }\n      }\n    });\n  }\n\n  getClubOwner = (clubId) => {\n    const club = this.state.clubs.find( club => club.id === clubId);\n    return club ? club.owner : null;\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAdmin} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.clubName} user=\"admin\" getClubOwner={this.getClubOwner}/>} />\n        <Route path={PAGE_URL.index} exact render={(props) => <Index {...props} openPopup={this.props.openPopup} users={this.state.agents} updateAgents={this.updateAgents} removeAgent={this.removeAgent}/>} />\n        <Switch>\n          <Route path={`${PAGE_URL.clubs}/all`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"active\"/>} />\n          <Route path={`${PAGE_URL.clubs}/removed`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"removed\"/>} />\n          <Route path={`${PAGE_URL.clubs}/:agentId/removed`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"removed\"/>} />\n          <Route path={`${PAGE_URL.clubs}/:agentId`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"active\"/>} />\n        </Switch>\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub} updateClubs={this.updateClubs}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup} clubName={this.state.clubName}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup} />} />\n      </div>\n    );\n  }\n}\n\nAdminRoutes.propTypes = {\n\n};\n\nexport default AdminRoutes;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAgent extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-client\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-client menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-promo\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-promo menu-tab_disabled\"><span>Акции</span></a>\n        }\n      </Menu>\n    );\n  }\n}\n\nexport default MenuAgent;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../Clubs/Clubs.scss';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport LongText from '../UI/LongText/LongText';\nimport { PAGE_URL } from '../../constants';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Дата регистрации', ''];\n\nclass IndexAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateClubs();\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-club', {callback: this.props.updateClubs});\n  }\n\n  onChangeInput = ({value}) => {\n    this.setState({search: value});\n  }\n\n  filterBySearch = (clubs) => {\n    return clubs.filter( club => club.name.includes(this.state.search) );\n  }\n\n  toggleLock = (id, status, name) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка клуба',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        let club;\n        if (status === 'active') {\n          club = await API.blockClub(id);\n        } else {\n          club = await API.activateClub(id);\n        }\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  mappingFn = (club, i) => [\n    i + 1,\n    <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}><LongText>{club.name}</LongText></Link>,\n    club.clientsCount,\n    moment(club.created).format('DD.MM.YYYY HH:mm:ss'),\n    <div>\n      <Tooltip text='Изменить' leftOffset=\"-10px\">\n        <div onClick={this.editClub(club.id, club.name)} className=\"button-edit\" />\n      </Tooltip>\n      <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n        <div onClick={this.toggleLock(club.id, club.status, club.name)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`} />\n      </Tooltip>\n      <Tooltip text='Удалить'>\n        <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\" />\n      </Tooltip>\n    </div>\n  ]\n\n  render() {\n    const filteredClubs = this.filterBySearch(this.props.clubs);\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление клубами</div>\n          <div className=\"search-block__input\">\n            <Input \n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput}/>\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Создать клуб</span>\n          </button>\n        </div>\n        {\n          this.props.clubs.length\n          ? <TableWithPagination\n              className=\"clubs\"\n              header={header}\n              mappingFn={this.mappingFn}\n              data={filteredClubs}\n            />\n            : <div className=\"empty-table\">Нет доступных клубов</div>\n        }\n      </div>\n    );\n  }\n}\n\nIndexAgent.propTypes = {\n\n};\n\nexport default IndexAgent;","import React, { PureComponent } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MenuAgent from './components/MenuAgent/MenuAgent';\nimport IndexAgent from './components/IndexAgent/IndexAgent';\nimport Club from './components/Club/Club';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AgentRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clubs: [],\n      selectedClubId: null,\n      selectedClubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClubs();\n    }\n  }\n\n  fetchClubs = async () => {\n    const clubs = await API.getClubs();\n    if (clubs) {\n      this.setState({ clubs }, this.setClubName);\n    }\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({\n      selectedClubName: club.name ? `(${club.name.substr(0, 50)})` : '',\n    });\n  }\n\n  updateClubs = (newClub) => {\n    if (!newClub) {\n      this.fetchClubs();\n      return;\n    };\n    const updatedClubs = this.state.clubs.map( club => club.id === newClub.id ? newClub : club);\n    this.setState({ clubs: updatedClubs }, this.setClubName);\n  }\n\n  removeClub = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAgent} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.selectedClubName} user=\"agent\"/>}/>\n        <Route path={PAGE_URL.index} exact render={(props) => <IndexAgent {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub}/>} />\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub} updateClubs={this.updateClubs}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup} clubName={this.state.selectedClubName}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup}/>} />\n      </div>\n    );\n  }\n}\n\nAgentRoutes.propTypes = {\n  \n};\n\nexport default AgentRoutes;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './MenuOperator.scss';\n\nimport Menu from '../UI/Menu/Menu';\n\nclass MenuOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <Menu><span className=\"menu-operator__text\">Добавить клиента</span></Menu>\n    );\n  }\n}\n\nMenuOperator.propTypes = {\n  \n};\n\nexport default MenuOperator;","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport './IndexOperator.scss';\n\nimport Input from '../UI/Input/Input';\nimport MenuOperator from '../MenuOperator/MenuOperator';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nclass IndexOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promoName: 'Без акции',\n      promoId: '',\n      club: {\n        name: 'Клуб',\n        promotions: [],\n        status: '',\n      },\n      name: '',\n      nameIsValid: '',\n      phone: '',\n      phoneIsValid: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClub();\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  fetchClub = async () => {\n    const id = this.props.club;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onPromoSelect = ({value, label}) => {\n    this.setState({\n      promoId: value,\n      promoName: label,\n    })\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && this.state.phoneIsValid;\n  }\n\n  onSubmit = async () => {\n    const isExist = await API.clientIsExist({ phone: this.state.phone });\n    if (isExist) {\n      this.register();\n    } else {\n      this.sendCode();\n    }\n    \n  }\n\n  sendCode = () => {\n    this.props.openPopup('sms-confirm', { phone: this.state.phone, callback: this.register });\n  }\n\n  register = async (code) => {\n    const response = await API.createClient({\n      name: this.state.name,\n      phone: this.state.phone,\n      promotion: {\n        id: this.state.promoId,\n        name: this.state.promoName,\n      },\n      code,\n    });\n    if (response.isOk) {\n      if (response.data.status === 'promoted') {\n        this.props.openPopup('alert', { type: 'success', text: `Клиент <b>${this.state.name}</b> добавлен к акции <b>${this.state.promoName}</b>` });\n      } else {\n        this.props.openPopup('alert', { type: 'success', text: `Клиент <b>${this.state.name}</b> успешно зарегистрирован` });\n      }\n    } else {\n      let text = 'Произошла ошибка';\n      let title = 'Ошибка';\n      let type = 'error';\n      if (response.data.code === 7) {\n        const { name, phone, created } = response.data.info;\n        title = 'Клиент уже зарегистрирован';\n        text = `Имя клиента - <b>${name}</b><br/>Номер телефона - <b>${phone}</b><br/>Дата регистрации - <b>${moment(created).format('DD.MM.YYYY HH:mm')}</b>`;\n        type = 'info';\n      } else if (response.data.code === 8) {\n        const { name, date } = response.data.info;\n        title = 'Клиент участвовал сегодня в этой акции';\n        text = `Название акции - <b>${name}</b><br/>Дата добавления - <b>${moment(date).format('DD.MM.YYYY HH:mm')}</b>`;\n        type = 'info';\n      }\n      this.props.openPopup('alert', { type, title, text });\n    }\n  }\n\n  render() {\n    if (!this.state.club.status) {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n        </div>\n      );\n    }\n    if (this.state.club.status !== 'active') {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n          <div className=\"operator-index__content\">\n            <div className=\"block-alert\">Клуб заблокирован!</div>\n          </div>\n        </div>\n      );\n    }\n\n    const options = this.state.club.promotions.map(promo => ({ value: promo.id, label: promo.name }));\n    options.unshift({ value: '', label: 'Без акции' });\n    const selectedOption = { value: this.state.promoId, label: this.state.promoName };\n    return (\n      <div className=\"page-container operator-index\">\n        <MenuOperator />\n        <div className=\"operator-index__content\">\n          <div className=\"pic\" />\n          <div className=\"inputs-wrapper\">\n            <div className=\"operator-index__title\">Заполните данные клиента</div>\n            <label className=\"label\">\n              <div>Имя</div>\n              <Input\n                name=\"name\"\n                icon=\"login\"\n                type=\"name\"\n                placeholder=\"Введите имя\"\n                validationType=\"required\"\n                value={this.state.name}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Телефон</div>\n              <Input\n                name=\"phone\"\n                icon=\"phone\"\n                mask=\"+7 (999) 999 - 99 - 99\"\n                placeholder=\"Введите телефон\"\n                validationType=\"phone\"\n                value={this.state.phone}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Акция</div>\n              <Select\n                className=\"select\"\n                classNamePrefix=\"select\"\n                isSearchable={false}\n                value={selectedOption}\n                onChange={this.onPromoSelect}\n                options={options}\n              />\n            </label>\n            <button className=\"button\" onClick={this.onSubmit} disabled={!this.isFormValid()}>Отправить</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndexOperator;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport './Login.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\nimport { setPageTitle } from '../../utils/url';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      errorMessage: '',\n    };\n  }\n\n  componentWillMount() {\n    setPageTitle();\n    if (this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid;\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n    const res = await API.login({\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (res.isOk) {\n      this.props.onLogin(res.data);\n      this.props.history.push(PAGE_URL.index);\n    } else {\n      let errorMessage = 'Ошибка авторизации';\n      if (res.data.code === 3) {\n        errorMessage = 'Неверный логин или пароль';\n      } else if (res.data.code === 9) {\n        errorMessage = 'Аккаунт заблокирован';\n      }\n      this.setState({ errorMessage });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-wrapper\">\n          <div className=\"login-block\">\n            <form className=\"login-panel\" onSubmit={this.login}>\n              <div className=\"header-block\">\n                <div className=\"header-block__logo\" />\n                <div className=\"header-block__title\">SlotAdmin<span>Система учета клиентов</span></div>\n              </div>\n              <div className=\"login-panel__header\">Вход в систему учета клиентов</div>\n              <label className=\"label\">\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  icon=\"login\"\n                  placeholder=\"Введите логин\"\n                  validationType=\"required\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label className=\"label\">\n                <div>Пароль</div>\n                <Input\n                  name=\"password\"\n                  icon=\"password\"\n                  type=\"password\"\n                  placeholder=\"Введите пароль\"\n                  validationType=\"required\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <div className={classNames('login-panel__error', { 'login-panel__error_show': this.state.errorMessage})}>\n                {this.state.errorMessage}\n              </div>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>Вход</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { PureComponent } from 'react';\nimport './Root.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Root extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  componentWillMount() {\n    this.checkIfRootExist();\n  }\n\n  checkIfRootExist = async () => {\n    const response = await API.hasRoot();\n    if (response.hasRoot) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({name, value, isValid}) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  createAccount = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'root',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.history.push(PAGE_URL.login);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"root-page\">\n        <div className=\"root-wrapper\">\n          <div className=\"root-block\">\n            <form className=\"root-panel\" onSubmit={this.createAccount}>\n              <div className=\"root-panel__header\">Создание администратора системы</div>\n              <label>\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  placeholder=\"Логин\"\n                  validationType=\"required\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Пароль</div>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Пароль\"\n                  validationType=\"required\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Повтор пароля</div>\n                <Input\n                  type=\"password\"\n                  name=\"repeatPassword\"\n                  placeholder=\"Пароль\"\n                  validationType=\"required\"\n                  value={this.state.repeatPassword}\n                  compareWith={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>create</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Root;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addAgent = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'agent',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', {type: 'success', text: `Агент <b>${this.state.login}</b> успешно добавлен`});\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить агента</div>\n        <form onSubmit={this.addAgent}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddAgent;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddClub extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      address: '',\n      addressIsValid: false,\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && \n      this.state.addressIsValid && \n      this.state.loginIsValid && \n      this.state.passwordIsValid && \n      this.state.repeatPasswordIsValid;\n  }\n\n  addClub = async (e) => {\n    e.preventDefault();\n    const response = await API.createClub({\n      name: this.state.name,\n      address: this.state.address,\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Клуб <b>${this.state.name}</b> успешно создан` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-club\">\n        <div className=\"popup-content__title\">Создать клуб</div>\n        <form onSubmit={this.addClub}>\n          <label className=\"label\">\n            <div>Название клуба</div>\n            <Input\n              name=\"name\"\n              icon=\"club\"\n              placeholder=\"Введите название\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Адрес</div>\n            <Input\n              name=\"address\"\n              icon=\"location\"\n              placeholder=\"Введите адрес\"\n              validationType=\"required\"\n              value={this.state.address}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <br/>\n          <br/>\n          <div className=\"popup-content__title\">Создать оператора клуба</div>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Создать</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddClub;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddPromo extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      desc: '',\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  onChangeTextarea = ({ target }) => {\n    this.setState({desc: target.value});\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid;\n  }\n\n  addPromo = async (e) => {\n    e.preventDefault();\n    const clubId = this.props.data.id;\n    const response = await API.createPromotion(clubId, {\n      name: this.state.name,\n      description: this.state.desc,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Акция <b>${this.state.name}</b> успешно добавлена` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      this.props.openPopup('alert', { type: 'error', text: response.data.message });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Создать акцию</div>\n        <form onSubmit={this.addPromo}>\n          <label className=\"label\">\n            <div>Название</div>\n            <Input\n              name=\"name\"\n              icon=\"promo\"\n              placeholder=\"Введите название\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Описание</div>\n            <div className=\"textarea-icon textarea-icon__text\">\n              <textarea\n                className=\"textarea\"\n                name=\"desc\"\n                placeholder=\"Введите описание\"\n                value={this.state.desc}\n                onChange={this.onChangeTextarea}\n              />\n            </div>\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPromo;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addOperator = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'operator',\n      login: this.state.login,\n      password: this.state.password,\n      clubId: this.props.data.id,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Оператор <b>${this.state.login}</b> успешно добавлен` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить оператора</div>\n        <form onSubmit={this.addOperator}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddOperator;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RemoveConfirm extends PureComponent {\n\n  onAccept = () => {\n    this.props.data.callback();\n    this.props.close();\n  }\n\n  render() {\n    const { title, content, button } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        {content &&\n          <div className=\"popup_alert__alert\">\n            <span className=\"popup_confirm__remove-content\" dangerouslySetInnerHTML={{ __html: content }} />\n          </div>\n        }\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>{button || 'Удалить'}</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRemoveConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n    button: PropTypes.string,\n  })\n};\n\nexport default RemoveConfirm;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SmsConfirm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '3951',\n    };\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.code);\n    setTimeout(() => this.props.close(1), 100);\n  }\n\n  onChangeInput = ({target}) => {\n    this.setState({code: target.value});\n  }\n\n  render() {\n    const { phone } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\">SMS отправлено</div>\n        <div className=\"popup_confirm__content\">\n          Сообщение отправлено на номер\n          <div className=\"popup_confirm__phone\">{phone}</div>\n          <div className=\"popup_confirm__code\">\n            <span>Код подтверждения</span>\n            <input className=\"input\" value={this.state.code} onChange={this.onChangeInput} />\n          </div>\n        </div>\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>Подтвердить</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSmsConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    phone: PropTypes.string.isRequired,\n  })\n};\n\nexport default SmsConfirm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends Component {\n  static defaultProps = {\n    data: {\n      type: 'success',\n      text: 'success',\n      title: '',\n    }\n  }\n\n  render() {\n    const {type, text, title} = this.props.data;\n    return (\n      <div className=\"popup-content popup_alert\">\n        {title && <div className=\"popup_alert__title\">{title}</div>}\n        <div className={`popup_alert__alert popup_alert__alert_${type}`}>\n          <span className=\"popup_alert__msg\" dangerouslySetInnerHTML={{__html: text}}/>\n        </div>\n        <button className=\"button\" onClick={this.props.close}>Закрыть</button>\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    type: PropTypes.oneOf(['success', 'error', 'info']).isRequired,\n    text: PropTypes.string.isRequired,\n    title: PropTypes.string,\n  })\n};\n\nexport default Alert;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../../UI/Input/Input';\n\nclass EditName extends PureComponent {\n\n  state = {\n    value: '',\n    isValid: true,\n  }\n\n  onChangeInput = ({value, isValid}) => {\n    this.setState({ value, isValid });\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.value);\n    this.props.close();\n  }\n\n  render() {\n    const { title, input } = this.props.data;\n    return (\n      <div className=\"popup-content popup_edit-name\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        <label className=\"label\">\n          <div>{input.name}</div>\n          <Input\n            name=\"input\"\n            icon={input.icon}\n            placeholder={input.placeholder}\n            validationType=\"required\"\n            defaultValue={input.value}\n            value={this.state.value}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <button className=\"button\" onClick={this.onAccept} disabled={!this.state.isValid}>Изменить</button>\n      </div>\n    );\n  }\n}\n\nEditName.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    input: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      placeholder: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      icon: PropTypes.string.isRequired,\n    })\n  })\n};\n\nexport default EditName;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../../UI/Input/Input';\n\nclass EditUser extends PureComponent {\n\n  state = {\n    login: '',\n    loginIsValid: false,\n    password: '',\n    passwordIsValid: false,\n    repeatPassword: '',\n    repeatPasswordIsValid: false,\n  };\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  onAccept = () => {\n    this.props.close();\n    this.props.data.callback(this.state.login, this.state.password);\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  render() {\n    const { title, login } = this.props.data;\n    return (\n      <div className=\"popup-content popup_edit-user\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        <label className=\"label\">\n          <div>Логин</div>\n          <Input\n            name=\"login\"\n            icon=\"login\"\n            placeholder=\"Введите логин\"\n            validationType=\"login\"\n            defaultValue={login}\n            value={this.state.login}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <label className=\"label\">\n          <div>Пароль</div>\n          <Input\n            name=\"password\"\n            icon=\"password\"\n            type=\"password\"\n            placeholder=\"Введите пароль\"\n            validationType=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <label className=\"label\">\n          <div>Повтор пароля</div>\n          <Input\n            name=\"repeatPassword\"\n            icon=\"password\"\n            type=\"password\"\n            placeholder=\"Повторите пароль\"\n            validationType=\"password\"\n            value={this.state.repeatPassword}\n            compareWith={this.state.password}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <button className=\"button\" onClick={this.onAccept} disabled={!this.isFormValid()}>Изменить</button>\n      </div>\n    );\n  }\n}\n\nEditUser.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string.isRequired,\n  })\n};\n\nexport default EditUser;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './Popup.scss';\n\nimport AddAgent from './popups/AddAgent';\nimport AddClub from './popups/AddClub';\nimport AddPromo from './popups/AddPromo';\nimport AddOperator from './popups/AddOperator';\nimport ActionConfirm from './popups/ActionConfirm';\nimport SmsConfirm from './popups/SmsConfirm';\nimport Alert from './popups/Alert';\nimport EditName from './popups/EditName';\nimport EditUser from './popups/EditUser';\n\nclass Popup extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  preventClosing = (e) => {\n    e.stopPropagation();\n  }\n\n  onPressEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  render() {\n    if (!this.props.isOpen) {\n      document.removeEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'auto';\n    } else {\n      document.addEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'hidden';\n    }\n\n    let content;\n    const props = {\n      data: this.props.data,\n      openPopup: this.props.open,\n      close: this.props.close,\n    }\n    if (this.props.name === 'add-agent') {\n      content = <AddAgent {...props}/>\n    } else if (this.props.name === 'alert') {\n      content = <Alert {...props}/>\n    } else if (this.props.name === 'add-club') {\n      content = <AddClub {...props}/>\n    } else if(this.props.name === 'add-promo') {\n      content = <AddPromo {...props}/>\n    } else if (this.props.name === 'add-operator') {\n      content = <AddOperator {...props}/>\n    } else if (this.props.name === 'action-confirm') {\n      content = <ActionConfirm {...props}/>\n    } else if (this.props.name === 'sms-confirm') {\n      content = <SmsConfirm {...props}/>\n    } else if (this.props.name === 'edit-name') {\n      content = <EditName {...props}/>\n    } else if (this.props.name === 'edit-user') {\n      content = <EditUser {...props}/>\n    }\n\n    const cantClose = this.props.name === 'alert' || this.props.name === 'sms-confirm';\n    return (\n      <ReactCSSTransitionGroup\n        transitionName=\"showpopup\"\n        transitionEnterTimeout={200}\n        transitionLeaveTimeout={150}>\n        {\n          this.props.isOpen && \n          <div className=\"popup-wrapper\" onClick={cantClose ? null : this.props.close}>\n            <div className=\"popup-block\">\n              <div className=\"content-wrapper\" onClick={this.preventClosing}>\n                {!cantClose && <div className=\"close-btn\" onClick={this.props.close} />}\n                {content}\n              </div>\n            </div>\n          </div>\n        }\n      </ReactCSSTransitionGroup>\n      \n    );\n  }\n}\n\nPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Popup;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\n\nimport { PAGE_URL } from './constants';\nimport Header from './components/Header/Header';\nimport AdminRoutes from './AdminRoutes';\nimport AgentRoutes from './AgentRoutes';\nimport IndexOperator from './components/IndexOperator/IndexOperator';\nimport Login from './components/Login/Login';\nimport Root from './components/Root/Root';\nimport Popup from './components/Popup/Popup';\n\nclass App extends Component {\n  state = {\n    popupIsOpen: false,\n    popupName: '',\n    popupData: null,\n    secondPopupIsOpen: false,\n    secondPopupName: '',\n    secondPopupData: null,\n    userName: '',\n    userRole: '',\n    userClub: '',\n    userAvatar: '',\n    hasAuth: false,\n  }\n\n  componentWillMount() {\n    const storedData = sessionStorage.getItem('user');\n    if (storedData) {\n      const user = JSON.parse(storedData);\n      this.setState(user);\n    }\n  }\n\n  saveUser = () => {\n    const user = {\n      userName: this.state.userName,\n      userRole: this.state.userRole,\n      userClub: this.state.userClub,\n      hasAuth: this.state.hasAuth,\n      userAvatar: this.state.userAvatar,\n    }\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  openPopup = (popupName, data) => {\n    if (this.state.popupIsOpen) {\n      this.setState({\n        secondPopupIsOpen: true,\n        secondPopupName: popupName,\n        secondPopupData: data,\n      });\n    } else {\n      this.setState({\n        popupIsOpen: true,\n        popupName,\n        popupData: data,\n      });\n    }\n  }\n\n  closePopup = (popupNumber) => {\n    if (this.state.secondPopupIsOpen && popupNumber !== 1) {\n      this.setState({\n        secondPopupIsOpen: false\n      });\n    } else {\n      this.setState({\n        popupIsOpen: false\n      });\n    }\n  }\n\n  onLogin = (user) => {\n    this.setState({\n      userName: user.login,\n      userRole: user.role,\n      userClub: user.clubId,\n      userAvatar: user.avatar,\n      hasAuth: true,\n    }, this.saveUser);\n  }\n\n  onLogout = () => {\n    this.openPopup('action-confirm', {\n      title: 'Выйти из системы учета клиентов?',\n      button: 'Выйти',\n      callback: this.logout,\n    });\n  }\n\n  logout = () => {\n    this.setState({\n      userName: '',\n      userRole: '',\n      userClub: '',\n      userAvatar: '',\n      hasAuth: false,\n    }, this.saveUser);\n  }\n\n  render() {\n    let routesByRole;\n    if (this.state.userRole === 'operator') {\n      routesByRole = (\n        <Route \n          path={PAGE_URL.index}\n          render={(props) => \n            <IndexOperator\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n              club={this.state.userClub}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'agent') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AgentRoutes\n              {...props}\n              hasAuth={this.state.hasAuth}\n              openPopup={this.openPopup}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'root') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AdminRoutes\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n            />\n          }\n        />\n      );\n    } else {\n      routesByRole = <Redirect to={PAGE_URL.login} />;\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <Route path={PAGE_URL.login} exact render={(props) => <Login {...props} onLogin={this.onLogin} hasAuth={this.state.hasAuth} />} />\n          <Route path={PAGE_URL.root} exact component={Root} />\n          <Route children={(props) =>\n            <>\n              <Header\n                {...props}\n                role={this.state.userRole}\n                name={this.state.userName}\n                avatar={this.state.userAvatar}\n                onLogout={this.onLogout}\n              />\n              {routesByRole}\n              <Popup\n                {...props}\n                isOpen={this.state.popupIsOpen}\n                name={this.state.popupName}\n                data={this.state.popupData}\n                open={this.openPopup}\n                close={this.closePopup}\n              />\n              <Popup\n                {...props}\n                isOpen={this.state.secondPopupIsOpen}\n                name={this.state.secondPopupName}\n                data={this.state.secondPopupData}\n                open={this.openPopup}\n                close={this.closePopup}\n              />\n            </>\n          }/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}