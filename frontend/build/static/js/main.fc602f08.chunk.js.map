{"version":3,"sources":["constants.js","utils/url.js","API.js","components/Header/Header.jsx","components/UI/Menu/Menu.jsx","components/MenuAdmin/MenuAdmin.jsx","components/UI/Table/Table.jsx","components/UI/Pagination/Pagination.jsx","components/UI/TableWithPagination/TableWithPagination.jsx","components/UI/Tooltip/Tooltip.jsx","components/UI/LongText/LongText.jsx","components/UI/Input/Input.jsx","utils/validation.js","components/Index/Index.jsx","components/Club/Club.jsx","components/Clubs/Clubs.jsx","components/Operators/Operators.jsx","components/Clients/Clients.jsx","components/Client/Client.jsx","components/Breadcrumbs/Breadcrumbs.jsx","components/Promotion/Promotion.jsx","AdminRoutes.jsx","components/MenuAgent/MenuAgent.jsx","components/IndexAgent/IndexAgent.jsx","AgentRoutes.jsx","components/MenuOperator/MenuOperator.jsx","components/IndexOperator/IndexOperator.jsx","components/Login/Login.jsx","components/Root/Root.jsx","components/Popup/popups/AddAgent.jsx","components/Popup/popups/AddClub.jsx","components/Popup/popups/AddPromo.jsx","components/Popup/popups/AddOperator.jsx","components/Popup/popups/ActionConfirm.jsx","components/Popup/popups/SmsConfirm.jsx","components/Popup/popups/Alert.jsx","components/Popup/popups/EditName.jsx","components/Popup/popups/EditUser.jsx","components/Popup/popups/EditPromo.jsx","components/Popup/Popup.jsx","App.jsx","serviceWorker.js","index.js"],"names":["PAGE_URL","index","login","root","clients","client","club","promotion","clubs","operators","schemas","Agent","name","regexp","titles","clubRemoved","clubsAll","clubAllRemoved","parseURL","url","clubId","test","substr","page","find","setPageTitle","arguments","length","undefined","document","location","pathname","title","API","hasRoot","method","changeRoot","createUser","changeUserStatus","getAgents","removeAgent","getClients","getClient","createClient","removeClient","clientIsExist","createClub","getClubs","getClub","getPromotion","changeClubStatus","getOperators","removeOperator","createPromotion","changeClubName","changeClientName","changeUser","changePromotion","request","_callee","data","params","response","body","_args","regenerator_default","a","wrap","_context","prev","next","headers","Headers","Content-Type","JSON","stringify","fetch","sent","json","t0","console","error","abrupt","isOk","status","message","code","sessionStorage","clear","stop","this","_callee2","_context2","_callee3","password","_context3","_callee4","user","_context4","_callee5","logPass","_context5","_callee6","_context6","_callee7","id","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","is_exist","_callee13","_context13","_callee14","_args14","_context14","concat","_callee15","_context15","_callee16","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","promo","_context25","_callee26","_context26","_callee27","_context27","_callee28","_context28","_callee29","_ref","description","_context29","src_API","blockClub","removeClub","activateClub","blockUser","removeUser","activateUser","Header","_this","props","openPopup","callback","_callback","Object","asyncToGenerator","mark","type","text","_x","_x2","apply","history","listen","_this$props","role","avatar","avaClass","cn","header__avatar_operator","header__avatar_agent","header__avatar_admin","react_default","createElement","className","Link","to","onClick","onLogout","PureComponent","Menu","children","MenuAdmin","UI_Menu_Menu","NavLink","exact","activeClassName","match","Table","cls","idName","map","cell","i","key","Row","_ref2","Pagination","onChange","onClickPrev","currentPage","onClickNext","pagesCount","pageCount","labels","leftInterval","middleRow","rightInterval","rightEdge","push","forEach","value","_this2","pages","getLabels","prevCls","pagination__arrow","pagination__arrow_left","pagination__arrow_disabled","nextCls","pagination__arrow_right","pagination__page","pagination__page_active","TableWithPagination","state","isMobile","rowsPerPage","onResize","width","window","innerWidth","setState","onChangePage","filterByPage","items","start","end","slice","addEventListener","removeEventListener","filteredData","item","header","mappingFn","UI_Table_Table","UI_Pagination_Pagination","Math","ceil","defaultProps","Tooltip","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","style","marginLeft","leftOffset","LongText","Input","input","comparingValue","compareWith","_validate","isValid","validate","validationType","onBlur","isActivated","errorIsHidden","onFocus","shouldShowError","defaultValue","classNames","input__error","input__success","icon","mask","react_input_mask_default","placeholder","alwaysShowMask","inputRef","el","ref","Index","showPopup","updateAgents","onChangeInput","search","filterBySearch","users","filter","includes","toggleLock","action","button","content","editAgent","_callback2","agent","UI_LongText_LongText","clubsCount","moment","created","format","UI_Tooltip_Tooltip","filteredAgents","UI_Input_Input","UI_TableWithPagination_TableWithPagination","Club","fetchClub","onAddPromo","editClub","newName","objectSpread","updateClubs","editPromotion","newDesc","promotions","_x3","toggleLockPromotion","_callback3","newStatus","removePromotion","_callback4","buttons","address","clientsCount","Boolean","headerRemoved","Clubs","lastColumn","removed","ownerName","agentId","owner","goBack","Operators","fetchOps","onAddOperator","ops","op","operator","updateOperators","editOperator","newOp","updatedOperators","updatedList","clubName","opsWithFilter","Clients","tableId","fetchClients","phone","creator","editClient","updateClients","newClient","updatedClients","downloadClients","date","table","TableExport","getElementById","ignoreCols","formats","exportButtons","filename","sheetname","getExportData","xlsx","csv","export2file","mimeType","fileExtension","filteredClients","Component","Client","fetchClient","clientId","color","paddingLeft","promoName","Breadcrumbs","getLinks","links","clubsRemoved","clubsAllRemoved","singlePromo","promoLink","getClubOwner","setClubId","link","Promotion","fetchPromotion","promoId","preparedClients","result","AdminRoutes","fetchData","Promise","all","fetchClubs","fetchAgents","then","responses","agents","counters","updatedAgents","agentsNames","updatedClubs","selectedClubId","setClubName","_args2","newClub","cb","hasAuth","Route","path","component","render","components_Breadcrumbs_Breadcrumbs","assign","components_Index_Index","Switch","components_Clubs_Clubs","components_Club_Club","components_Promotion_Promotion","components_Operators_Operators","components_Clients_Clients","components_Client_Client","MenuAgent","IndexAgent","filteredClubs","AgentRoutes","selectedClubName","components_IndexAgent_IndexAgent","MenuOperator","IndexOperator","_this$setState","defineProperty","onPromoSelect","_ref3","label","isFormValid","nameIsValid","phoneIsValid","onSubmit","register","sendCode","_ref5","_response$data$info","_response$data$info2","_name","info","components_MenuOperator_MenuOperator","options","unshift","selectedOption","react_select_esm","classNamePrefix","isSearchable","disabled","Login","loginIsValid","passwordIsValid","e","res","errorMessage","preventDefault","onLogin","login-panel__error_show","Root","checkIfRootExist","repeatPasswordIsValid","createAccount","repeatPassword","AddAgent","addAgent","close","AddClub","addressIsValid","addClub","AddPromo","onChangeTextarea","target","desc","addPromo","AddOperator","addOperator","RemoveConfirm","onAccept","_this$props$data","dangerouslySetInnerHTML","__html","SmsConfirm","setTimeout","maxLength","Alert","EditName","EditUser","EditPromo","area","Popup","preventClosing","stopPropagation","onPressEsc","isOpen","getElementsByTagName","overflow","open","popups_AddAgent","popups_Alert","popups_AddClub","popups_AddPromo","popups_AddOperator","ActionConfirm","popups_SmsConfirm","popups_EditName","popups_EditUser","popups_EditPromo","cantClose","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","App","popupIsOpen","popupName","popupData","secondPopupIsOpen","secondPopupName","secondPopupData","userName","userRole","userClub","userAvatar","saveUser","setItem","closePopup","popupNumber","logout","storedData","getItem","parse","routesByRole","components_IndexOperator_IndexOperator","src_AgentRoutes","src_AdminRoutes","Redirect","BrowserRouter","components_Login_Login","Fragment","components_Header_Header","components_Popup_Popup","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+QAAaA,SAAW,CACtBC,MAAO,IACPC,MAAO,SACPC,KAAM,QACNC,QAAS,WACTC,OAAQ,UACRC,KAAM,QACNC,UAAW,aACXC,MAAO,SACPC,UAAW,+DCTPC,SAAU,CACdC,MAAO,CACL,CAAEC,KAAM,QAASC,OAAQ,aACzB,CAAED,KAAM,QAASC,OAAQ,QACzB,CAAED,KAAM,OAAQC,OAAQ,mBACxB,CAAED,KAAM,QAASC,OAAQ,oBACzB,CAAED,KAAM,eAAgBC,OAAQ,6BAChC,CAAED,KAAM,WAAYC,OAAQ,kBAC5B,CAAED,KAAM,kBAAmBC,OAAQ,sBACnC,CAAED,KAAM,UAAWC,OAAQ,4BAC3B,CAAED,KAAM,SAAUC,OAAQ,mCAC1B,CAAED,KAAM,YAAaC,OAAQ,qCAC7B,CAAED,KAAM,YAAaC,OAAQ,iCAI3BC,EAAS,CACbb,MAAO,YACPC,MAAO,uCACPI,KAAM,uCACNE,MAAO,6CACPO,YAAa,oGACbC,SAAU,6CACVC,eAAgB,oGAChBb,QAAS,yDACTC,OAAQ,mDACRE,UAAW,6CACXE,UAAW,sEAGAS,EAAW,SAACC,GACvB,IAAIC,EAAS,KAKb,MAJI,YAAYC,KAAKF,KACnBC,EAASD,EAAIG,OAAO,EAAG,KAGlB,CAAEC,MADIb,EAAQC,MAAMa,KAAK,SAAAD,GAAI,OAAIA,EAAKV,OAAOQ,KAAKF,MAAS,IAC9CP,KAAMQ,SAAQD,QAGvBM,EAAe,WAAsC,IAArCN,EAAqCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BG,SAASC,SAASC,SAC3CR,EAASL,EAASC,GAAlBI,KACFS,EAAQlB,EAAOS,IAAST,EAAOb,MACrC4B,SAASG,MAAQA,GCxCbC,EAAM,CACVC,QAAS,CACPC,OAAQ,MACRhB,IAAK,aAEPiB,WAAY,CACVD,OAAQ,MACRhB,IAAK,oBAEPkB,WAAY,CACVF,OAAQ,OACRhB,IAAK,aAEPjB,MAAO,CACLiC,OAAQ,OACRhB,IAAK,cAEPmB,iBAAkB,CAChBH,OAAQ,MACRhB,IAAK,aAEPoB,UAAW,CACTJ,OAAQ,MACRhB,IAAK,eAEPqB,YAAa,CACXL,OAAQ,SACRhB,IAAK,eAEPsB,WAAY,CACVN,OAAQ,MACRhB,IAAK,iBAEPuB,UAAW,CACTP,OAAQ,MACRhB,IAAK,gBAEPwB,aAAc,CACZR,OAAQ,OACRhB,IAAK,eAEPyB,aAAc,CACZT,OAAQ,MACRhB,IAAK,eAEP0B,cAAe,CACbV,OAAQ,OACRhB,IAAK,wBAEP2B,WAAY,CACVX,OAAQ,OACRhB,IAAK,aAEP4B,SAAU,CACRZ,OAAQ,MACRhB,IAAK,eAEP6B,QAAS,CACPb,OAAQ,MACRhB,IAAK,cAEP8B,aAAc,CACZd,OAAQ,MACRhB,IAAK,mBAEP+B,iBAAkB,CAChBf,OAAQ,MACRhB,IAAK,aAEPgC,aAAc,CACZhB,OAAQ,MACRhB,IAAK,mBAEPiC,eAAgB,CACdjB,OAAQ,SACRhB,IAAK,kBAEPkC,gBAAiB,CACflB,OAAQ,OACRhB,IAAK,mBAEPmC,eAAgB,CACdnB,OAAQ,MACRhB,IAAK,kBAEPoC,iBAAkB,CAChBpB,OAAQ,MACRhB,IAAK,oBAEPqC,WAAY,CACVrB,OAAQ,MACRhB,IAAK,oBAEPsC,gBAAiB,CACftB,OAAQ,MACRhB,IAAK,mCAIMuC,+EAAf,SAAAC,EAAuBxC,GAAvB,IAAAgB,EAAAyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtC,UAAA,OAAAuC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA4BnC,EAA5B6B,EAAArC,OAAA,QAAAC,IAAAoC,EAAA,GAAAA,EAAA,GAAqC,MAAOJ,EAA5CI,EAAArC,OAAA,EAAAqC,EAAA,QAAApC,EACQiC,EAAS,CACb1B,SACAoC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,sBAGhBb,IACFC,EAAOE,KAAOW,KAAKC,UAAUf,IARjCQ,EAAAE,KAAA,EAUyBM,MAAMzD,EAAK0C,GAVpC,cAUQC,EAVRM,EAAAS,KAAAT,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAaiBR,EAASgB,OAb1B,QAaIf,EAbJK,EAAAS,KAAAT,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAeIY,QAAQC,MAAM,wCAflBb,EAAAc,OAAA,SAgBW,CAAEC,MAAM,EAAOvB,KAAM,KAhBhC,WAkB0B,MAApBE,EAASsB,OAlBf,CAAAhB,EAAAE,KAAA,gBAmBIU,QAAQC,MAAMlB,EAAKsB,SACD,IAAdtB,EAAKuB,OACPC,eAAeC,QACf3D,SAASC,SAAW9B,EAASE,OAtBnCkE,EAAAc,OAAA,SAwBW,CAAEC,MAAM,EAAOvB,KAAMG,IAxBhC,eAAAK,EAAAc,OAAA,SA0BS,CAAEC,MAAM,EAAMvB,KAAMG,IA1B7B,yBAAAK,EAAAqB,SAAA9B,EAAA+B,KAAA,+EA6BA,SAAAC,IAAA,IAAA7B,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACyBZ,EAAQzB,EAAIC,QAAQf,KAD7C,cACQ2C,EADR8B,EAAAf,KAAAe,EAAAV,OAAA,SAESpB,EAASF,MAFlB,wBAAAgC,EAAAH,SAAAE,EAAAD,2EAKA,SAAAG,EAA0B3F,EAAO4F,GAAjC,IAAA/B,EAAAD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACQP,EAAO,CAAE7D,QAAO4F,YADxBC,EAAAzB,KAAA,EAEyBZ,EAAQzB,EAAIG,WAAWjB,IAAKc,EAAIG,WAAWD,OAAQ4B,GAF5E,cAEQD,EAFRiC,EAAAlB,KAAAkB,EAAAb,OAAA,SAGSpB,GAHT,wBAAAiC,EAAAN,SAAAI,EAAAH,2EAMA,SAAAM,EAA0BC,GAA1B,IAAAnC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACyBZ,EAAQzB,EAAII,WAAWlB,IAAKc,EAAII,WAAWF,OAAQ8D,GAD5E,cACQnC,EADRoC,EAAArB,KAAAqB,EAAAhB,OAAA,SAESpB,GAFT,wBAAAoC,EAAAT,SAAAO,EAAAN,2EAKA,SAAAS,EAAqBC,GAArB,IAAAtC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACyBZ,EAAQzB,EAAI/B,MAAMiB,IAAKc,EAAI/B,MAAMiC,OAAQiE,GADlE,cACQtC,EADRuC,EAAAxB,KAAAwB,EAAAnB,OAAA,SAESpB,GAFT,wBAAAuC,EAAAZ,SAAAU,EAAAT,2EAKA,SAAAY,IAAA,IAAAxC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACyBZ,EAAQzB,EAAIM,UAAUpB,KAD/C,YACQ2C,EADRyC,EAAA1B,MAEeM,KAFf,CAAAoB,EAAAjC,KAAA,eAAAiC,EAAArB,OAAA,SAGWpB,EAASF,MAHpB,cAAA2C,EAAArB,OAAA,SAKS,MALT,wBAAAqB,EAAAd,SAAAa,EAAAZ,2EAQA,SAAAc,EAA2BC,GAA3B,OAAAxC,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACyBZ,EAAQzB,EAAIO,YAAYrB,IAAMsF,EAAIxE,EAAIO,YAAYL,QAD3E,WAAAuE,EAAA7B,KAEeM,KAFf,CAAAuB,EAAApC,KAAA,eAAAoC,EAAAxB,OAAA,UAGW,GAHX,cAAAwB,EAAAxB,OAAA,UAKS,GALT,wBAAAwB,EAAAjB,SAAAe,EAAAd,2EAQA,SAAAiB,EAA0BF,GAA1B,IAAA3C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACyBZ,EAAQzB,EAAIQ,WAAWtB,IAAMsF,GADtD,YACQ3C,EADR8C,EAAA/B,MAEeM,KAFf,CAAAyB,EAAAtC,KAAA,eAAAsC,EAAA1B,OAAA,SAGWpB,EAASF,MAHpB,cAAAgD,EAAA1B,OAAA,SAKS,MALT,wBAAA0B,EAAAnB,SAAAkB,EAAAjB,2EAQA,SAAAmB,EAAyBJ,GAAzB,IAAA3C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EACyBZ,EAAQzB,EAAIS,UAAUvB,IAAMsF,GADrD,YACQ3C,EADRgD,EAAAjC,MAEeM,KAFf,CAAA2B,EAAAxC,KAAA,eAAAwC,EAAA5B,OAAA,SAGWpB,EAASF,MAHpB,cAAAkD,EAAA5B,OAAA,SAKS,MALT,wBAAA4B,EAAArB,SAAAoB,EAAAnB,2EAQA,SAAAqB,EAA4B1G,GAA5B,IAAAyD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EACyBZ,EAAQzB,EAAIU,aAAaxB,IAAKc,EAAIU,aAAaR,OAAQ9B,GADhF,cACQyD,EADRkD,EAAAnC,KAAAmC,EAAA9B,OAAA,SAESpB,GAFT,wBAAAkD,EAAAvB,SAAAsB,EAAArB,2EAKA,SAAAuB,EAA4BR,GAA5B,IAAA5C,EAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,WAD/B8B,EAAA5C,KAAA,EAEyBZ,EAAQzB,EAAIW,aAAazB,IAAKc,EAAIW,aAAaT,OAAQ0B,GAFhF,WAAAqD,EAAArC,KAGeM,KAHf,CAAA+B,EAAA5C,KAAA,eAAA4C,EAAAhC,OAAA,UAIW,GAJX,cAAAgC,EAAAhC,OAAA,UAMS,GANT,wBAAAgC,EAAAzB,SAAAwB,EAAAvB,2EASA,SAAAyB,EAA6B9G,GAA7B,IAAAyD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACyBZ,EAAQzB,EAAIY,cAAc1B,IAAKc,EAAIY,cAAcV,OAAQ9B,GADlF,cACQyD,EADRsD,EAAAvC,KAAAuC,EAAAlC,OAAA,SAESpB,EAASF,KAAKyD,UAFvB,wBAAAD,EAAA3B,SAAA0B,EAAAzB,2EAKA,SAAA4B,EAA0BhH,GAA1B,IAAAwD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACyBZ,EAAQzB,EAAIa,WAAW3B,IAAKc,EAAIa,WAAWX,OAAQ7B,GAD5E,cACQwD,EADRyD,EAAA1C,KAAA0C,EAAArC,OAAA,SAESpB,GAFT,wBAAAyD,EAAA9B,SAAA6B,EAAA5B,2EAKA,SAAA8B,IAAA,IAAAf,EAAArB,EAAAtB,EAAA2D,EAAA/F,UAAA,OAAAuC,EAAAC,EAAAC,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAwBmC,EAAxBgB,EAAA9F,OAAA,QAAAC,IAAA6F,EAAA,GAAAA,EAAA,GAA6B,GAAIrC,EAAjCqC,EAAA9F,OAAA,EAAA8F,EAAA,QAAA7F,EAAA8F,EAAApD,KAAA,EACyBZ,EAAO,GAAAiE,OAAI1F,EAAIc,SAAS5B,KAAjBwG,OAAuBlB,GAAvBkB,OAA4BvC,EAAS,IAAMA,EAAS,KADpF,YACQtB,EADR4D,EAAA7C,MAEeM,KAFf,CAAAuC,EAAApD,KAAA,eAAAoD,EAAAxC,OAAA,SAGWpB,EAASF,MAHpB,cAAA8D,EAAAxC,OAAA,SAKS,MALT,wBAAAwC,EAAAjC,SAAA+B,EAAA9B,2EAQA,SAAAkC,EAAuBnB,GAAvB,IAAA3C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAvD,KAAA,EACyBZ,EAAQzB,EAAIe,QAAQ7B,IAAMsF,GADnD,YACQ3C,EADR+D,EAAAhD,MAEeM,KAFf,CAAA0C,EAAAvD,KAAA,eAAAuD,EAAA3C,OAAA,SAGWpB,EAASF,MAHpB,cAAAiE,EAAA3C,OAAA,SAKS,MALT,wBAAA2C,EAAApC,SAAAmC,EAAAlC,2EAQA,SAAAoC,EAAyBrB,GAAzB,IAAA5C,EAAAC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,WAD/B2C,EAAAzD,KAAA,EAEyBZ,EAAQzB,EAAIiB,iBAAiB/B,IAAKc,EAAIiB,iBAAiBf,OAAQ0B,GAFxF,YAEQC,EAFRiE,EAAAlD,MAGeM,KAHf,CAAA4C,EAAAzD,KAAA,eAAAyD,EAAA7C,OAAA,SAIWpB,EAASF,MAJpB,cAAAmE,EAAA7C,OAAA,SAMS,MANT,wBAAA6C,EAAAtC,SAAAqC,EAAApC,2EASA,SAAAsC,EAA0BvB,GAA1B,IAAA5C,EAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,WAD/B6C,EAAA3D,KAAA,EAEyBZ,EAAQzB,EAAIiB,iBAAiB/B,IAAKc,EAAIiB,iBAAiBf,OAAQ0B,GAFxF,WAAAoE,EAAApD,KAGeM,KAHf,CAAA8C,EAAA3D,KAAA,eAAA2D,EAAA/C,OAAA,UAIW,GAJX,cAAA+C,EAAA/C,OAAA,UAMS,GANT,wBAAA+C,EAAAxC,SAAAuC,EAAAtC,2EASA,SAAAwC,EAA4BzB,GAA5B,IAAA5C,EAAAC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,UAD/B+C,EAAA7D,KAAA,EAEyBZ,EAAQzB,EAAIiB,iBAAiB/B,IAAKc,EAAIiB,iBAAiBf,OAAQ0B,GAFxF,YAEQC,EAFRqE,EAAAtD,MAGeM,KAHf,CAAAgD,EAAA7D,KAAA,eAAA6D,EAAAjD,OAAA,SAIWpB,EAASF,MAJpB,cAAAuE,EAAAjD,OAAA,SAMS,MANT,wBAAAiD,EAAA1C,SAAAyC,EAAAxC,2EASA,SAAA0C,EAA4B3B,GAA5B,IAAA3C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACyBZ,EAAQzB,EAAIgB,aAAa9B,IAAMsF,GADxD,YACQ3C,EADRuE,EAAAxD,MAEeM,KAFf,CAAAkD,EAAA/D,KAAA,eAAA+D,EAAAnD,OAAA,SAGWpB,EAASF,MAHpB,cAAAyE,EAAAnD,OAAA,SAKS,MALT,wBAAAmD,EAAA5C,SAAA2C,EAAA1C,2EAQA,SAAA4C,EAAyB7B,GAAzB,IAAA5C,EAAAC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,WAD/BmD,EAAAjE,KAAA,EAEyBZ,EAAQzB,EAAIK,iBAAiBnB,IAAKc,EAAIK,iBAAiBH,OAAQ0B,GAFxF,YAEQC,EAFRyE,EAAA1D,MAGeM,KAHf,CAAAoD,EAAAjE,KAAA,eAAAiE,EAAArD,OAAA,SAIWpB,EAASF,MAJpB,cAAA2E,EAAArD,OAAA,SAMS,MANT,wBAAAqD,EAAA9C,SAAA6C,EAAA5C,2EASA,SAAA8C,EAA0B/B,GAA1B,IAAA5C,EAAAC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,WAD/BqD,EAAAnE,KAAA,EAEyBZ,EAAQzB,EAAIK,iBAAiBnB,IAAKc,EAAIK,iBAAiBH,OAAQ0B,GAFxF,YAEQC,EAFR2E,EAAA5D,MAGeM,KAHf,CAAAsD,EAAAnE,KAAA,eAAAmE,EAAAvD,OAAA,SAIWpB,EAASF,MAJpB,cAAA6E,EAAAvD,OAAA,SAMS,MANT,wBAAAuD,EAAAhD,SAAA+C,EAAA9C,2EASA,SAAAgD,EAA4BjC,GAA5B,IAAA5C,EAAAC,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cACQT,EAAS,CAAE4C,KAAIrB,OAAQ,UAD/BuD,EAAArE,KAAA,EAEyBZ,EAAQzB,EAAIK,iBAAiBnB,IAAKc,EAAIK,iBAAiBH,OAAQ0B,GAFxF,YAEQC,EAFR6E,EAAA9D,MAGeM,KAHf,CAAAwD,EAAArE,KAAA,eAAAqE,EAAAzD,OAAA,SAIWpB,EAASF,MAJpB,cAAA+E,EAAAzD,OAAA,SAMS,MANT,wBAAAyD,EAAAlD,SAAAiD,EAAAhD,2EASA,SAAAkD,EAA4BxH,GAA5B,IAAA0C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EACyBZ,EAAQzB,EAAIkB,aAAahC,IAAMC,GADxD,YACQ0C,EADR+E,EAAAhE,MAEeM,KAFf,CAAA0D,EAAAvE,KAAA,eAAAuE,EAAA3D,OAAA,SAGWpB,EAASF,MAHpB,cAAAiF,EAAA3D,OAAA,SAKS,MALT,wBAAA2D,EAAApD,SAAAmD,EAAAlD,2EAQA,SAAAoD,EAA8BrC,GAA9B,OAAAxC,EAAAC,EAAAC,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,cAAAyE,EAAAzE,KAAA,EACyBZ,EAAQzB,EAAImB,eAAejC,IAAMsF,EAAIxE,EAAImB,eAAejB,QADjF,WAAA4G,EAAAlE,KAEeM,KAFf,CAAA4D,EAAAzE,KAAA,eAAAyE,EAAA7D,OAAA,UAGW,GAHX,cAAA6D,EAAA7D,OAAA,UAKS,GALT,wBAAA6D,EAAAtD,SAAAqD,EAAApD,2EAQA,SAAAsD,EAA+B5H,EAAQ6H,GAAvC,IAAAnF,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EACyBZ,EAAQzB,EAAIoB,gBAAgBlC,IAAMC,EAAQa,EAAIoB,gBAAgBlB,OAAQ8G,GAD/F,cACQnF,EADRoF,EAAArE,KAAAqE,EAAAhE,OAAA,SAESpB,GAFT,wBAAAoF,EAAAzD,SAAAuD,EAAAtD,6EAKA,SAAAyD,EAA8B1C,EAAI7F,GAAlC,IAAAmD,EAAAD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cACQP,EAAO,CAAE0C,KAAI7F,QADrBwI,EAAA9E,KAAA,EAEyBZ,EAAQzB,EAAIqB,eAAenC,IAAKc,EAAIqB,eAAenB,OAAQ4B,GAFpF,cAEQD,EAFRsF,EAAAvE,KAAAuE,EAAAlE,OAAA,SAGSpB,EAASF,MAHlB,wBAAAwF,EAAA3D,SAAA0D,EAAAzD,6EAMA,SAAA2D,EAAgC5C,EAAI7F,GAApC,IAAAmD,EAAAD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cACQP,EAAO,CAAE0C,KAAI7F,QADrB0I,EAAAhF,KAAA,EAEyBZ,EAAQzB,EAAIsB,iBAAiBpC,IAAKc,EAAIsB,iBAAiBpB,OAAQ4B,GAFxF,cAEQD,EAFRwF,EAAAzE,KAAAyE,EAAApE,OAAA,SAGSpB,EAASF,MAHlB,wBAAA0F,EAAA7D,SAAA4D,EAAA3D,6EAMA,SAAA6D,EAA0B9C,EAAIvG,EAAO4F,GAArC,IAAA/B,EAAAD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cACQP,EAAO,CAAE0C,KAAIvG,QAAO4F,YAD5B0D,EAAAlF,KAAA,EAEyBZ,EAAQzB,EAAIuB,WAAWrC,IAAKc,EAAIuB,WAAWrB,OAAQ4B,GAF5E,cAEQD,EAFR0F,EAAA3E,KAAA2E,EAAAtE,OAAA,SAGSpB,GAHT,wBAAA0F,EAAA/D,SAAA8D,EAAA7D,6EAMA,SAAA+D,EAAAC,GAAA,IAAAjD,EAAA7F,EAAA+I,EAAAvE,EAAArB,EAAAD,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAgCmC,EAAhCiD,EAAgCjD,GAAI7F,EAApC8I,EAAoC9I,KAAM+I,EAA1CD,EAA0CC,YAAavE,EAAvDsE,EAAuDtE,OAC/CrB,EAAO,CAAE0C,KAAI7F,OAAM+I,cAAavE,UADxCwE,EAAAtF,KAAA,EAEyBZ,EAAQzB,EAAIwB,gBAAgBtC,IAAKc,EAAIwB,gBAAgBtB,OAAQ4B,GAFtF,cAEQD,EAFR8F,EAAA/E,KAAA+E,EAAA1E,OAAA,SAGSpB,EAASqB,MAHlB,wBAAAyE,EAAAnE,SAAAgE,EAAA/D,gCAMe,IAAAmE,GAAA,CACb3H,mDACAE,yDACAC,uDACAnC,kDACAqC,qDACAC,wDACAC,uDACAC,sDACAC,yDACAC,yDACAC,0DACAC,uDACAC,oDACAC,oDACA8G,sDACAC,uDACAC,yDACA/G,yDACAgH,sDACAC,uDACAC,yDACAhH,yDACAC,2DACAC,8DACAC,8DACAC,gEACAC,4DACAC,8DCjRa2G,8MAnEb5G,WAAa,WACX6G,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,4HACP9B,MAAOmK,EAAKC,MAAM1J,KAClB4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjH,EAAOzD,EAAO4F,GAAd,IAAAhC,EAAAmB,EAAA,OAAAhB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACerC,GAAIG,WAAWlC,EAAO4F,GADrC,QACFhC,EADEM,EAAAS,MAEKM,KACXkF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,UACN7I,MAAO,wFACP8I,KAAM,8JAGJ7F,EAAQ,8FACe,IAAvBnB,EAASF,KAAK0B,OAChBL,EAAQ,+KAEVoF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,QACN7I,MAAO,uCACP8I,KAAM7F,KAhBF,wBAAAb,EAAAqB,SAAA9B,EAAA+B,SAAF,gBAAAqF,EAAAC,GAAA,OAAAP,EAAAQ,MAAAvF,KAAAhE,YAAA,0FAVVD,IACAiE,KAAK4E,MAAMY,QAAQC,OAAO,SAACrJ,GACzBL,EAAaK,EAASC,6CA+BjB,IAAAqJ,EACgB1F,KAAK4E,MAArBe,EADAD,EACAC,KAAMC,EADNF,EACME,OACPC,EAAWC,IACf,iBADiB,kBAAA7D,OAEC2D,GAClB,CACEG,wBAAoC,aAATJ,EAC3BK,qBAAiC,UAATL,EACxBM,qBAAiC,SAATN,IAG5B,OACEO,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,UACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBACbF,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAI,IAAKF,UAAU,gBACvBF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACfF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iBAAf,YAAwCF,EAAA1H,EAAA2H,cAAA,4IAE1CD,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBAEH,QAART,EACIO,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,2BAA2BG,QAASvG,KAAKlC,YAAakC,KAAK4E,MAAM1J,MACjFgL,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,oBAAoBpG,KAAK4E,MAAM1J,MAErDgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,IAChBK,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAeG,QAASvG,KAAK4E,MAAM4B,qBA7DzCC,0CCONC,OAZf,SAAA1C,GAA0B,IAAX2C,EAAW3C,EAAX2C,SACb,OACET,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,QACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iBAAiBO,KC2BvBC,oLAzBX,OACEV,EAAA1H,EAAA2H,cAACU,GAAD,KACEX,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAIhM,EAASC,MAAOyM,gBAAgB,kBAAkBZ,UAAU,gCAA+BF,EAAA1H,EAAA2H,cAAA,qDAC9GD,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASQ,MAAd,QAA2BkM,gBAAgB,kBAAkBZ,UAAU,+BAA8BF,EAAA1H,EAAA2H,cAAA,+CAEpHnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASI,SAAWsM,gBAAgB,kBAAkBZ,UAAU,iCAAgCF,EAAA1H,EAAA2H,cAAA,2DACpKD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,mDAAkDF,EAAA1H,EAAA2H,cAAA,2DAGnEnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASS,WAAaiM,gBAAgB,kBAAkBZ,UAAU,8BAA6BF,EAAA1H,EAAA2H,cAAA,uEACnKD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,gDAA+CF,EAAA1H,EAAA2H,cAAA,uEAGhEnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAAMiG,gBAAgB,kBAAkBZ,UAAU,gCAA+BF,EAAA1H,EAAA2H,cAAA,+CAChJD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,kDAAiDF,EAAA1H,EAAA2H,cAAA,uDApBpDM,qCCqBlBS,iMAOF,IAAMC,EAAMrB,IAAG,CAAC,QAAS9F,KAAK4E,MAAMwB,YACpC,OACEF,EAAA1H,EAAA2H,cAAA,SAAOC,UAAWe,EAAKpG,GAAIf,KAAK4E,MAAMwC,QACnCpH,KAAK4E,MAAM+B,iBAVAF,kBAAdS,GAEGxC,OAxBW,SAAAV,GAAkB,IAAf2C,EAAe3C,EAAf2C,SACrB,OACET,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,MAAIC,UAAU,iBAEVO,EAASU,IAAI,SAACC,EAAMC,GAAP,OAAarB,EAAA1H,EAAA2H,cAAA,MAAIqB,IAAKD,GAAID,QAiB3CJ,GAIGO,IAdQ,SAAAC,GAAuB,IAApBf,EAAoBe,EAApBf,SAAUa,EAAUE,EAAVF,IAC5B,OACEtB,EAAA1H,EAAA2H,cAAA,MAAIC,UAAU,cAEVO,EAASU,IAAI,SAAAC,GAAI,OAAIpB,EAAA1H,EAAA2H,cAAA,MAAIqB,IAAKA,GAAMF,OA2B7BJ,UC0EAS,qNA5DbC,SAAW,SAAC/L,GAAD,OAAU,WACnB8I,EAAKC,MAAMgD,SAAS/L,OAGtBgM,YAAc,WACRlD,EAAKC,MAAMkD,YAAc,GAC3BnD,EAAKC,MAAMgD,SAASjD,EAAKC,MAAMkD,YAAc,MAIjDC,YAAc,WACRpD,EAAKC,MAAMkD,YAAcnD,EAAKC,MAAMoD,YACtCrD,EAAKC,MAAMgD,SAASjD,EAAKC,MAAMkD,YAAc,6EAnEvCG,EAAWH,GACnB,IAAMI,EAAS,GAiCTC,EA7BAF,EAAY,EACPH,EAAc,EAAI,MAAQ,EAE5B,KA2BHM,EAdAH,EAAY,EACVH,IAAgBG,EAAkB,CAACA,EAAY,GAC/B,IAAhBH,GAAqC,IAAhBA,EAA0B,CAAC,GAChC,IAAhBA,GAAmC,IAAdG,EAAwB,CAAC,EAAG,GACjC,IAAhBH,EAA0B,CAAC,GAC3BA,IAAgBG,EAAY,EAAU,CAACH,EAAc,GACrDA,IAAgBG,EAAY,EAAU,CAACH,EAAc,EAAGA,GACrD,CAACA,EAAc,EAAGA,EAAaA,EAAc,GAE/C,KAMHO,EAtBAJ,EAAY,EACPH,EAAcG,EAAY,EAAI,MAAQA,EAAY,EAEpD,KAoBHK,EA1BsBL,EAAY,EAAIA,EAAY,KAwCxD,OAbAC,EAAOK,KApCmB,GAqCtBJ,GACFD,EAAOK,KAAKJ,GAEVC,GACFA,EAAUI,QAAQ,SAAAC,GAAK,OAAIP,EAAOK,KAAKE,KAErCJ,GACFH,EAAOK,KAAKF,GAEVC,GACFJ,EAAOK,KAAKD,GAEPJ,mCAoBA,IAAAQ,EAAA1I,KACD2I,EAAQ3I,KAAK4I,UAAU5I,KAAK4E,MAAMoD,WAAYhI,KAAK4E,MAAMkD,aACzDe,EAAU/C,IAAG,CACjBgD,mBAAqB,EACrBC,wBAA0B,EAC1BC,2BAAyD,IAA3BhJ,KAAK4E,MAAMkD,cAErCmB,EAAUnD,IAAG,CACjBgD,mBAAqB,EACrBI,yBAA2B,EAC3BF,2BAA8BhJ,KAAK4E,MAAMkD,cAAgB9H,KAAK4E,MAAMoD,aAGtE,OACE9B,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cACbF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAK6H,YAAazB,UAAWyC,IAEzCF,EAAMtB,IAAI,SAACxL,EAAM0L,GACf,IAAMJ,EAAMrB,IAAG,CACbqD,kBAAoB,EACpBC,wBAA2BvN,IAAS6M,EAAK9D,MAAMkD,cAEjD,OACE5B,EAAA1H,EAAA2H,cAAA,OACEC,UAAWe,EACXK,IAAKD,EACLhB,QAASmC,EAAKd,SAAS/L,IACpBA,KAKXqK,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAK+H,YAAa3B,UAAW6C,YAzG1BxC,kBCCnB4C,8MAQJC,MAAQ,CACNC,UAAU,EACVzB,YAAa,EACb0B,YAAa,MAgBfC,SAAW,WACT,IAAMC,EAAQC,OAAOC,YAChBjF,EAAK2E,MAAMC,UAAYG,EAAQ,IAClC/E,EAAKkF,SAAS,CAACN,UAAU,IAChB5E,EAAK2E,MAAMC,UAAYG,GAAS,KACzC/E,EAAKkF,SAAS,CAAEN,UAAU,OAI9BO,aAAe,SAAChC,GACdnD,EAAKkF,SAAS,CAAE/B,mBAGlBiC,aAAe,SAACC,GACd,IAAMC,GAAStF,EAAK2E,MAAMxB,YAAc,GAAKnD,EAAK2E,MAAME,YAClDU,EAAMD,EAAQtF,EAAK2E,MAAME,YAC/B,OAAOQ,EAAMG,MAAMF,EAAOC,wFA5B1BP,OAAOS,iBAAiB,SAAUpK,KAAKyJ,UACvCzJ,KAAKyJ,0DAILE,OAAOU,oBAAoB,SAAUrK,KAAKyJ,8DAI1CzJ,KAAK6J,SAAS,CAAC/B,YAAa,qCAsBrB,IAAAY,EAAA1I,KACDsK,EAAetK,KAAK+J,aAAa/J,KAAK4E,MAAM1G,MAClD,OACEgI,EAAA1H,EAAA2H,cAAA,WACInG,KAAKsJ,MAAMC,SACXrD,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,UAEXkE,EAAajD,IAAI,SAACkD,EAAMhD,GAAP,OACfrB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cAAcoB,IAAK+C,EAAK/C,KAAO+C,EAAKxJ,IAAMwG,GACvDrB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACZsC,EAAK9D,MAAM4F,OAAOnD,IAAI,SAACkD,EAAMhD,GAAP,OAAarB,EAAA1H,EAAA2H,cAAA,OAAKqB,IAAKD,GAAIgD,MAEpDrE,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBACZsC,EAAK9D,MAAM6F,UAAUF,EAAMhD,GAAGF,IAAI,SAAAC,GAAI,OAAIpB,EAAA1H,EAAA2H,cAAA,WAAMmB,UAM1DpB,EAAA1H,EAAA2H,cAACuE,GAAD,CAAOtE,UAAWpG,KAAK4E,MAAMwB,UAAWgB,OAAQpH,KAAK4E,MAAMwC,QAC1DlB,EAAA1H,EAAA2H,cAACuE,GAAMhG,OAAP,KAAe1E,KAAK4E,MAAM4F,QAC1BtE,EAAA1H,EAAA2H,cAAA,aAEEmE,EAAajD,IAAI,SAACkD,EAAMhD,GAAP,OACfrB,EAAA1H,EAAA2H,cAACuE,GAAMjD,IAAP,CAAWD,IAAK+C,EAAK/C,KAAO+C,EAAKxJ,IAAMwG,GACpCmB,EAAK9D,MAAM6F,UAAUF,EAAMhD,QAQpCvH,KAAK4E,MAAM1G,KAAKjC,OAAS+D,KAAKsJ,MAAME,aACpCtD,EAAA1H,EAAA2H,cAACwE,GAAD,CACE3C,WAAY4C,KAAKC,KAAK7K,KAAK4E,MAAM1G,KAAKjC,OAAS+D,KAAKsJ,MAAME,aAC1D1B,YAAa9H,KAAKsJ,MAAMxB,YACxBF,SAAU5H,KAAK8J,uBAnFOrD,iBAA5B4C,GAEGyB,aAAe,CACpB1E,UAAW,GACXgB,OAAQ,GACRlJ,KAAM,IA8FKmL,UCrGT0B,sBAKJ,SAAAA,EAAYnG,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA+K,IACjBpG,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA+F,GAAAI,KAAAnL,KAAM4E,KACD0E,MAAQ,GAFI3E,wEAQjB,OACEuB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,WACZpG,KAAK4E,MAAM+B,SACZT,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAmBgF,MAAO,CAACC,WAAYrL,KAAK4E,MAAM0G,aAActL,KAAK4E,MAAMQ,cAhB5EqB,kBAAhBsE,GACGD,aAAe,CACpBQ,WAAY,QAyBDP,gBCtBAQ,OANf,SAAAvH,GAAgC,IAAZ2C,EAAY3C,EAAZ2C,SAClB,OACET,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,YAAY9J,MAAOqK,GAAWA,kCCG3C6E,eAUJ,SAAAA,EAAY5G,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAwL,IACjB7G,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAwG,GAAAL,KAAAnL,KAAM4E,KAaRgD,SAAW,WACT,IAAMa,EAAQ9D,EAAK8G,MAAMhD,MACnBiD,EAAiB/G,EAAKC,MAAM+G,YAFnBC,EChCZ,SAAmBnD,EAAOtD,GAC/B,IAAKA,EAAM,OAAO,EAClB,GAAa,UAATA,EAEF,MADe,mDACJxJ,KAAK8M,GACP,CAAEoD,SAAS,GAEb,CAAEA,SAAS,EAAOtM,MAAO,4eAC3B,GAAa,aAAT4F,EAET,MADe,mDACJxJ,KAAK8M,GACP,CAAEoD,SAAS,GAEb,CAAEA,SAAS,EAAOtM,MAAO,ybAC3B,GAAa,aAAT4F,EACT,OAAIsD,EAAMxM,OACD,CAAE4P,SAAS,GAEb,CAAEA,SAAS,EAAOtM,MAAO,mFAC3B,GAAa,UAAT4F,EAET,MADe,oDACJxJ,KAAK8M,GACP,CAAEoD,SAAS,GAEb,CAAEA,SAAS,EAAOtM,MAAO,2LAElCD,QAAQC,MAAM,2BDSWuM,CAASrD,EAAO9D,EAAKC,MAAMmH,gBAA7CF,EAHUD,EAGVC,QAAStM,EAHCqM,EAGDrM,MACVmM,GACEjD,IAAUiD,IACZG,GAAU,EACVtM,EAAQ,gGAGZoF,EAAKkF,SAAS,CAAEgC,UAAStM,UACzBoF,EAAKC,MAAMgD,SAAS,CAClB1M,KAAMyJ,EAAKC,MAAM1J,KACjBuN,QACAoD,aA5BelH,EAgCnBqH,OAAS,WACPrH,EAAKkF,SAAS,CAACoC,aAAa,EAAMC,eAAe,KAjChCvH,EAoCnBwH,QAAU,WACJxH,EAAK2E,MAAM2C,YACbtH,EAAKkF,SAAS,CAAEqC,eAAe,IAE/BvH,EAAKiD,YAxCUjD,EA4CnByH,gBAAkB,WAChB,QAASzH,EAAKC,MAAMmH,iBAAmBpH,EAAK2E,MAAMuC,UAAYlH,EAAK2E,MAAM4C,eA3CzEvH,EAAK2E,MAAQ,CACXuC,SAAS,EACTtM,MAAO,GACP0M,aAAa,EACbC,eAAe,GANAvH,mFAWjB3E,KAAKyL,MAAMhD,MAAQzI,KAAK4E,MAAMyH,8CAqCvB,IAAA3D,EAAA1I,KACPA,KAAK4E,MAAM+G,aAAe3L,KAAK4H,WAC/B,IAAM9B,EAAKwG,IACT,QACA,CAACC,cAAiBvM,KAAKsJ,MAAMuC,SAAW7L,KAAKsJ,MAAM2C,aACnD,CAAEO,eAAkBxM,KAAKsJ,MAAMuC,SAAW7L,KAAKsJ,MAAM2C,cAEvD,OACE/F,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWpG,KAAK4E,MAAM6H,KAAX,+BAAAxK,OAAiDjC,KAAK4E,MAAM6H,MAAQ,MAElFzM,KAAK4E,MAAM8H,KACXxG,EAAA1H,EAAA2H,cAACwG,GAAAnO,EAAD,CACE4H,UAAWN,EACX8B,SAAU5H,KAAK4H,SACfoE,OAAQhM,KAAKgM,OACbvD,MAAOzI,KAAK4E,MAAM6D,MAClBiE,KAAM1M,KAAK4E,MAAM8H,KACjBE,YAAa5M,KAAK4E,MAAMgI,YACxBC,gBAAc,EACdC,SAAU,SAACC,GAASrE,EAAK+C,MAAQsB,KAGpC7G,EAAA1H,EAAA2H,cAAA,SACCC,UAAWN,EACXX,KAAMnF,KAAK4E,MAAMO,KACjBjK,KAAM8E,KAAK4E,MAAM1J,KACjB0M,SAAU5H,KAAK4H,SACfoE,OAAQhM,KAAKgM,OACbG,QAASnM,KAAKmM,QACd1D,MAAOzI,KAAK4E,MAAM6D,MAClBmE,YAAa5M,KAAK4E,MAAMgI,YACxBI,IAAK,SAACD,GAAQrE,EAAK+C,MAAQsB,KAG1B/M,KAAKoM,mBAAqBlG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBAAkBpG,KAAKsJ,MAAM/J,eA5F3DkH,iBAAd+E,GACGV,aAAe,CACpB5P,KAAM,QACNiK,KAAM,OACNsD,MAAO,GACP4D,aAAc,GACdO,YAAa,GACbhF,SAAU,cAuGC4D,UEzGThB,GAAS,CAAC,IAAK,iCAAS,oGAAqB,4EAAiB,IA+HrDyC,eA5Hb,SAAAA,EAAYrI,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAiN,IACjBtI,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAiI,GAAA9B,KAAAnL,KAAM4E,KAURsI,UAAY,WACVvI,EAAKC,MAAMC,UAAU,YAAa,CAAEC,SAAUH,EAAKC,MAAMuI,gBAZxCxI,EAenByI,cAAgB,SAAApJ,GAAe,IAAZyE,EAAYzE,EAAZyE,MACjB9D,EAAKkF,SAAS,CAAEwD,OAAQ5E,KAhBP9D,EAmBnB2I,eAAiB,SAACC,GAChB,OAAOA,EAAMC,OAAO,SAAAjN,GAAI,OAAIA,EAAK/F,MAAMiT,SAAS9I,EAAK2E,MAAM+D,WApB1C1I,EAuBnB+I,WAAa,SAAC3M,EAAIrB,EAAQlF,GAAb,OAAuB,WAClC,IAAMmT,EAAoB,WAAXjO,EAAsB,iFAAkB,uFACvDiF,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,oGACPsR,OAAQD,EACRE,QAAO,yIAAA5L,OAAkC0L,EAAlC,mDAAA1L,OAA4DzH,EAA5D,cACPsK,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjH,IAAA,OAAAM,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEO,WAAXc,EAFI,CAAAhB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGQrC,GAAIgI,UAAUxD,GAHtB,OAAArC,EAAAS,KAAAT,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAKQrC,GAAIkI,aAAa1D,GALzB,OAAArC,EAAAS,KAAA,OAORwF,EAAKC,MAAMuI,eAPH,yBAAAzO,EAAAqB,SAAA9B,EAAA+B,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,OA7BO2I,EAyCnBmJ,UAAY,SAAC/M,EAAI7F,GAAL,OAAc,WACxByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,sHACP9B,MAAOU,EACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,EAAOzF,EAAO4F,GAAd,IAAAhC,EAAAmB,EAAA,OAAAhB,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACerC,GAAIuB,WAAWiD,EAAIvG,EAAO4F,GADzC,QACFhC,EADE8B,EAAAf,MAEKM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,UACN7I,MAAO,4EACP8I,KAAM,6JAERT,EAAKC,MAAMuI,iBAEP5N,EAAQ,8FACe,IAAvBnB,EAASF,KAAK0B,OAChBL,EAAQ,+KAEVoF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,QACN7I,MAAO,uCACP8I,KAAM7F,KAjBF,wBAAAW,EAAAH,SAAAE,EAAAD,SAAF,gBAAAqF,EAAAC,GAAA,OAAAyI,EAAAxI,MAAAvF,KAAAhE,YAAA,OA7CO2I,EAqEnB8F,UAAY,SAACuD,EAAOzG,GAClB,IAAM1B,EAAWC,IAAE,kBAAA7D,OAAmB+L,EAAMpI,QAAU,qBAAsB,wBAC5E,MAAO,CACL2B,EAAI,EACJrB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GACdK,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASQ,MAAd,KAAAmH,OAAuB+L,EAAMjN,KAAMmF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWD,EAAMxT,SAE9DwT,EAAME,WACNC,KAAOH,EAAMI,SAASC,OAAO,uBAC7BnI,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKmJ,UAAUE,EAAMjN,GAAIiN,EAAMxT,OAAQ4L,UAAU,iBAEjEF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAuB,YAAjB4I,EAAMtO,OAAuB,uFAAmB,iFAAiB4L,WAAW,SACzFpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK+I,WAAWM,EAAMjN,GAAIiN,EAAMtO,OAAQsO,EAAMxT,OAAQ4L,UAAS,eAAAnE,OAAkC,YAAjB+L,EAAMtO,OAAuB,qBAAuB,OAEpJwG,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKC,MAAM9H,YAAYkR,EAAMjN,GAAIiN,EAAMxT,OAAQ4L,UAAU,sBApF7EzB,EAAK2E,MAAQ,CACX+D,OAAQ,IAHO1I,oFAQjB3E,KAAK4E,MAAMuI,gDAqFX,IAAMoB,EAAiBvO,KAAKsN,eAAetN,KAAK4E,MAAM2I,OACtD,OACErH,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,iHACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAACqI,GAAD,CACE/B,KAAK,SACLG,YAAY,kHACZnE,MAAOzI,KAAKsJ,MAAM+D,OAClBzF,SAAU5H,KAAKoN,iBAEnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASoB,QAASvG,KAAKkN,WACrDhH,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,2FAIFpG,KAAK4E,MAAM2I,MAAMtR,OACfiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,SACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAMqQ,IAERrI,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,oHAtHQK,iBCHd+D,UAAS,CAAC,IAAK,iCAAS,mDAAY,wFAAmB,KAsM9CkE,eAnMb,SAAAA,EAAY9J,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA0O,IACjB/J,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA0J,GAAAvD,KAAAnL,KAAM4E,KAYR+J,UAbmB3J,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAaP,SAAAjH,IAAA,IAAA8C,EAAAnG,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJmC,EAAK4D,EAAKC,MAAMqC,MAAM9I,OAAO4C,GADzBrC,EAAAE,KAAA,EAESrC,GAAIe,QAAQyD,GAFrB,QAEJnG,EAFI8D,EAAAS,OAIRwF,EAAKkF,SAAS,CAAEjP,SAJR,wBAAA8D,EAAAqB,SAAA9B,EAAA+B,SAbO2E,EAqBnBiK,WAAa,WACXjK,EAAKC,MAAMC,UAAU,YAAa,CAAE9D,GAAI4D,EAAK2E,MAAM1O,KAAKmG,GAAI+D,SAAUH,EAAKgK,aAtB1DhK,EAyBnBN,WAAa,SAACtD,EAAI7F,GAAL,OAAc,WAEzByJ,EAAKC,MAAMP,WAAWtD,EAAI7F,EADf,kBAAMyJ,EAAKC,MAAMY,QAAQ+C,KAAK,MACzC5D,KA3BiBA,EA8BnBkK,SAAW,SAAC9N,EAAI7F,GAAL,OAAc,WACvByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,0GACPmP,MAAO,CACLvQ,KAAM,kFACN0R,YAAa,6HACbH,KAAM,OACNhE,MAAOvN,GAET4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,EAAO6O,GAAP,IAAAlU,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACWrC,GAAIqB,eAAemD,EAAI+N,GADlC,OACFlU,EADEsF,EAAAf,KAERwF,EAAKkF,SAAS,CACZjP,KAAKoK,OAAA+J,GAAA,EAAA/J,CAAA,GACAL,EAAK2E,MAAM1O,KADZ,CAEFM,KAAM4T,MAGVnK,EAAKC,MAAMoK,YAAYpU,GARf,wBAAAsF,EAAAH,SAAAE,EAAAD,SAAF,gBAAAqF,GAAA,OAAAN,EAAAQ,MAAAvF,KAAAhE,YAAA,OAvCO2I,EAoDnBsK,cAAgB,SAAClO,EAAI7F,EAAM+I,GAAX,OAA2B,WACzCU,EAAKC,MAAMC,UAAU,aAAc,CACjC3J,OACA+I,cACAa,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,EAAO2O,EAASI,GAAhB,IAAAC,EAAA5L,EAAA,OAAAhF,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACWrC,GAAIwB,gBAAgB,CAACgD,KAAI7F,KAAM4T,EAAS7K,YAAaiL,IADhE,OAAA7O,EAAAlB,OAGAgQ,EAAaxK,EAAK2E,MAAM1O,KAAKuU,WAAWhF,SACxC5G,EAAQ4L,EAAWrT,KAAK,SAAAyH,GAAK,OAAIA,EAAMxC,KAAOA,KAC9C7F,KAAO4T,EACbvL,EAAMU,YAAciL,EACpBvK,EAAKkF,SAAS,CACZjP,KAAKoK,OAAA+J,GAAA,EAAA/J,CAAA,GACAL,EAAK2E,MAAM1O,KADZ,CAEFuU,kBAVE,wBAAA9O,EAAAN,SAAAI,EAAAH,SAAF,gBAAAsF,EAAA8J,GAAA,OAAArB,EAAAxI,MAAAvF,KAAAhE,YAAA,OAxDO2I,EA0EnB0K,oBAAsB,SAACtO,EAAIrB,EAAQxE,GAAb,OAAsB,WAC1C,IAAMyS,EAAoB,WAAXjO,EAAsB,iFAAkB,uFACvDiF,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,8FACPsR,OAAQD,EACRE,QAAO,yIAAA5L,OAAkC0L,EAAlC,6CAAA1L,OAA2D/G,EAA3D,cACP4J,SAAQ,eAAAwK,EAAAtK,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA5E,IAAA,IAAAiP,EAAAJ,EAAA,OAAA5Q,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cACF2Q,EAAuB,WAAX7P,EAAsB,UAAY,SAD5Cc,EAAA5B,KAAA,EAEWrC,GAAIwB,gBAAgB,CAAEgD,KAAIrB,OAAQ6P,IAF7C,OAAA/O,EAAArB,OAIAgQ,EAAaxK,EAAK2E,MAAM1O,KAAKuU,WAAWhF,QAChCgF,EAAWrT,KAAK,SAAAyH,GAAK,OAAIA,EAAMxC,KAAOA,IAC9CrB,OAAS6P,EACf5K,EAAKkF,SAAS,CACZjP,KAAKoK,OAAA+J,GAAA,EAAA/J,CAAA,GACAL,EAAK2E,MAAM1O,KADZ,CAEFuU,kBAVE,wBAAA3O,EAAAT,SAAAO,EAAAN,SAAF,yBAAAsP,EAAA/J,MAAAvF,KAAAhE,YAAA,OAhFO2I,EAkGnB6K,gBAAkB,SAACzO,EAAI7F,GAAL,OAAc,WAC9ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,kFACPuR,QAAO,4NAAA5L,OAAyD/G,EAAzD,cACP4J,SAAQ,eAAA2K,EAAAzK,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAzE,IAAA,OAAAlC,EAAAC,EAAAC,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACgBrC,GAAIwB,gBAAgB,CAAEgD,KAAIrB,OAAQ,YADlD,OAAAiB,EAAAxB,MAGNwF,EAAKgK,YAHC,wBAAAhO,EAAAZ,SAAAU,EAAAT,SAAF,yBAAAyP,EAAAlK,MAAAvF,KAAAhE,YAAA,OAtGO2I,EA+GnB8F,UAAY,SAAClH,EAAOgE,GAAR,MAAc,CACxBA,EAAI,EACJrB,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsB0C,EAAKC,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASO,UAA5D,KAAAoH,OAAyEsB,EAAMxC,KAAMmF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW1K,EAAMrI,OAC9GgL,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW1K,EAAMU,aACjBkK,KAAO5K,EAAM6K,SAASC,OAAO,uBAC7BnI,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKsK,cAAc1L,EAAMxC,GAAIwC,EAAMrI,KAAMqI,EAAMU,aAAcmC,UAAU,iBAEvFF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAuB,YAAjB7B,EAAM7D,OAAuB,uFAAmB,iFAAiB4L,WAAW,SACzFpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK0K,oBAAoB9L,EAAMxC,GAAIwC,EAAM7D,OAAQ6D,EAAMrI,MAAOkL,UAAS,eAAAnE,OAAkC,YAAjBsB,EAAM7D,OAAuB,qBAAuB,OAE5JwG,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK6K,gBAAgBjM,EAAMxC,GAAIwC,EAAMrI,MAAOkL,UAAU,sBA1HxEzB,EAAK2E,MAAQ,CACX1O,KAAM,CACJuU,WAAY,KAJCxK,oFAUjB3E,KAAK2O,6CAwHM3O,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GAAnC,IACM2O,EACJxJ,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,OAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAK6O,SAAS7O,KAAKsJ,MAAM1O,KAAKmG,GAAIf,KAAKsJ,MAAM1O,KAAKM,MAAOkL,UAAU,iCAEnFF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,6CAAUkG,WAAW,QACjCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAKqE,WAAWrE,KAAKsJ,MAAM1O,KAAKmG,GAAIf,KAAKsJ,MAAM1O,KAAKM,MAAOkL,UAAU,sCAIzF,OACEF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,YAAYgF,MAAO,CAAC1B,MAAO,QAA1C,8BAA0D1J,KAAKsJ,MAAM1O,KAAKM,MAC1EgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAEc,YAA3BpG,KAAKsJ,MAAM1O,KAAK8E,OACdwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBAAf,wCACAsJ,IAINxJ,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,aACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,0CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,mFACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAkBF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWjO,KAAKsJ,MAAM1O,KAAKM,QAE9DgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,2CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,kCACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAkBF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWjO,KAAKsJ,MAAM1O,KAAK+U,WAE9DzJ,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,6CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,iHACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAmBpG,KAAKsJ,MAAM1O,KAAKgV,eAEpD1J,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,6CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,+FACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAmB+H,KAAOnO,KAAKsJ,MAAM1O,KAAKwT,SAASC,OAAO,0BAG5EwB,QAAQ7P,KAAKsJ,MAAM1O,KAAKuU,WAAWlT,SAClCiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,QACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAM8B,KAAKsJ,MAAM1O,KAAKuU,aAGE,YAA3BnP,KAAKsJ,MAAM1O,KAAK8E,QACfwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASoB,QAASvG,KAAK4O,YACrD1I,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,uFAvLKK,iBCDb+D,GAAS,CAAC,IAAK,2BAAQ,gHAAuB,gEAAe,4EAAiB,IAC9EsF,GAAgB,CAAC,IAAK,2BAAQ,gHAAuB,gEAAe,4EAAiB,6EA2I5EC,eAxIb,SAAAA,EAAYnL,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA+P,IACjBpL,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA+K,GAAA5E,KAAAnL,KAAM4E,KA0BRwI,cAAgB,SAAApJ,GAAe,IAAZyE,EAAYzE,EAAZyE,MACjB9D,EAAKkF,SAAS,CAAEwD,OAAQ5E,KA5BP9D,EA+BnBkK,SAAW,SAAC9N,EAAI7F,GAAL,OAAc,WACvByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,0GACPmP,MAAO,CACLvQ,KAAM,kFACN0R,YAAa,6HACbH,KAAM,OACNhE,MAAOvN,GAET4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjH,EAAO6Q,GAAP,IAAAlU,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWrC,GAAIqB,eAAemD,EAAI+N,GADlC,OACFlU,EADE8D,EAAAS,KAERwF,EAAKC,MAAMoK,YAAYpU,GAFf,wBAAA8D,EAAAqB,SAAA9B,EAAA+B,SAAF,gBAAAqF,GAAA,OAAAN,EAAAQ,MAAAvF,KAAAhE,YAAA,OAxCO2I,EA+CnB+I,WAAa,SAAC3M,EAAIrB,EAAQxE,GAAb,OAAsB,WACjC,IAAMyS,EAAoB,WAAXjO,EAAsB,iFAAkB,uFACvDiF,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,8FACPsR,OAAQD,EACRE,QAAO,yIAAA5L,OAAkC0L,EAAlC,uCAAA1L,OAA0D/G,EAA1D,cACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,IAAA,IAAArF,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UAEO,WAAXc,EAFI,CAAAQ,EAAAtB,KAAA,eAAAsB,EAAAtB,KAAA,EAGOrC,GAAI6H,UAAUrD,GAHrB,OAGNnG,EAHMsF,EAAAf,KAAAe,EAAAtB,KAAA,sBAAAsB,EAAAtB,KAAA,EAKOrC,GAAI+H,aAAavD,GALxB,OAKNnG,EALMsF,EAAAf,KAAA,OAORwF,EAAKC,MAAMoK,YAAYpU,GAPf,yBAAAsF,EAAAH,SAAAE,EAAAD,SAAF,yBAAA+N,EAAAxI,MAAAvF,KAAAhE,YAAA,OArDO2I,EAiEnB8F,UAAY,SAAC7P,EAAM2M,GACjB,IAAIyI,EACF9J,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKkK,SAASjU,EAAKmG,GAAInG,EAAKM,MAAOkL,UAAU,iBAE7DF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAsB,YAAhBxK,EAAK8E,OAAuB,uFAAmB,iFAAiB4L,WAAW,SACxFpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK+I,WAAW9S,EAAKmG,GAAInG,EAAK8E,OAAQ9E,EAAKM,MAAOkL,UAAS,eAAAnE,OAAiC,YAAhBrH,EAAK8E,OAAuB,qBAAuB,OAE/IwG,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKC,MAAMP,WAAWzJ,EAAKmG,GAAInG,EAAKM,MAAOkL,UAAU,oBAI/C,YAAtBzB,EAAKC,MAAMlF,SACbsQ,EAAa9J,EAAA1H,EAAA2H,cAAA,WAAMgI,KAAOvT,EAAKqV,SAAS5B,OAAO,yBAEjD,IAAMxI,EAAWC,IAAE,kBAAA7D,OAAmBrH,EAAKsV,UAAUtK,QAAU,qBAAsB,wBACrF,MAAO,CACL2B,EAAI,EACJrB,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBrH,EAAKmG,IAA3BkB,OAAgC3H,EAASI,UAAWwL,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWrT,EAAKM,OAC5EN,EAAKgV,aACL1J,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GAAUK,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWrT,EAAKsV,UAAU1V,QACpD2T,KAAOvT,EAAKwT,SAASC,OAAO,uBAC5B2B,IAvFFrL,EAAK2E,MAAQ,CACX+D,OAAQ,GACR3N,OAAQ,UAJOiF,oFASjB3E,KAAK4E,MAAMoK,gEAGapK,GACpB5E,KAAKsJ,MAAM5J,SAAWkF,EAAMlF,SAC9BM,KAAK4E,MAAMoK,YAAY,KAAMpK,EAAMlF,QACnCM,KAAK6J,SAAS,CAACnK,OAAQkF,EAAMlF,6CAItB,IAAAgJ,EAAA1I,KACHe,EAAKf,KAAK4E,MAAMqC,MAAM9I,OAAOgS,QACnC,OAAKpP,EAGEf,KAAK4E,MAAM9J,MAAM0S,OAAO,SAAA5S,GAAI,OAAIA,EAAKwV,QAAUrP,GAAMnG,EAAKM,KAAKuS,SAAS/E,EAAKY,MAAM+D,UAFjFrN,KAAK4E,MAAM9J,MAAM0S,OAAO,SAAA5S,GAAI,OAAIA,EAAKM,KAAKuS,SAAS/E,EAAKY,MAAM+D,2CAwEvE,IAAMvS,EAAQkF,KAAK3C,WACb8S,EAAUnQ,KAAK4E,MAAMqC,MAAM9I,OAAOgS,QACxC,OACEjK,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACU,YAAtBpG,KAAK4E,MAAMlF,OACRwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,+CAAf,yFACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,2GAEJF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAACqI,GAAD,CACE/B,KAAK,SACLG,YAAY,8HACZnE,MAAOzI,KAAKsJ,MAAM+D,OAClBzF,SAAU5H,KAAKoN,iBAGK,YAAtBpN,KAAK4E,MAAMlF,OACTwG,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAKkO,EAAUA,EAAU,IAAM,GAA/B,YAA4CjK,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,mCAAlB,0FACpDF,EAAA1H,EAAA2H,cAAA,UAAQI,QAASvG,KAAK4E,MAAMY,QAAQ6K,OAAQjK,UAAU,sBAAtD,0FAGiB,YAAtBpG,KAAK4E,MAAMlF,QAAwBwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cAEjDtL,EAAMmB,OACFiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,WACVoE,OAA8B,YAAtBxK,KAAK4E,MAAMlF,OAAuBoQ,GAAgBtF,GAC1DC,UAAWzK,KAAKyK,UAChBvM,KAAMpD,IAERoL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,8GA9HMK,iBCLd+D,GAAS,CAAC,IAAK,mDAAY,2BAAQ,8FAAoB,IAgK9C8F,eA7Jb,SAAAA,EAAY1L,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAsQ,IACjB3L,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAsL,GAAAnF,KAAAnL,KAAM4E,KAWR2L,SAZmBvL,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAYR,SAAAjH,IAAA,IAAAvC,EAAAX,EAAA,OAAAwD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHlD,EAASiJ,EAAKC,MAAMqC,MAAM9I,OAAO4C,GAD9BrC,EAAAE,KAAA,EAEerC,GAAIkB,aAAa/B,GAFhC,QAEHX,EAFG2D,EAAAS,OAIPwF,EAAKkF,SAAS,CAAE9O,cAJT,wBAAA2D,EAAAqB,SAAA9B,EAAA+B,SAZQ2E,EAoBnB6L,cAAgB,WACd,IAAMzP,EAAK4D,EAAKC,MAAMqC,MAAM9I,OAAO4C,GACnC4D,EAAKC,MAAMC,UAAU,eAAgB,CAAE9D,KAAI+D,SAAUH,EAAK4L,YAtBzC5L,EAyBnByI,cAAgB,SAAA1F,GAAe,IAAZe,EAAYf,EAAZe,MACjB9D,EAAKkF,SAAS,CAAEwD,OAAQ5E,EAAOX,YAAa,KA1B3BnD,EA6BnB2I,eAAiB,SAACmD,GAChB,OAAOA,EAAIjD,OAAO,SAAAkD,GAAE,OAAIA,EAAGlW,MAAMiT,SAAS9I,EAAK2E,MAAM+D,WA9BpC1I,EAiCnB+I,WAAa,SAAC3M,EAAIrB,EAAQlF,GAAb,OAAuB,WAClC,IAAMmT,EAAoB,WAAXjO,EAAsB,iFAAkB,uFACvDiF,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,sHACPsR,OAAQD,EACRE,QAAO,yIAAA5L,OAAkC0L,EAAlC,qEAAA1L,OAA+DzH,EAA/D,cACPsK,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,IAAA,IAAA0Q,EAAA,OAAApS,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UAEO,WAAXc,EAFI,CAAAQ,EAAAtB,KAAA,eAAAsB,EAAAtB,KAAA,EAGWrC,GAAIgI,UAAUxD,GAHzB,OAGN4P,EAHMzQ,EAAAf,KAAAe,EAAAtB,KAAA,sBAAAsB,EAAAtB,KAAA,EAKWrC,GAAIkI,aAAa1D,GAL5B,OAKN4P,EALMzQ,EAAAf,KAAA,OAOJwR,GACFhM,EAAKiM,gBAAgBD,GARf,yBAAAzQ,EAAAH,SAAAE,EAAAD,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,OAvCO2I,EAqDnBkM,aAAe,SAAC9P,EAAI7F,GAAL,OAAc,WAC3ByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,wIACP9B,MAAOU,EACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,EAAO3F,EAAO4F,GAAd,IAAAhC,EAAAmB,EAAA,OAAAhB,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACerC,GAAIuB,WAAWiD,EAAIvG,EAAO4F,GADzC,QACFhC,EADEiC,EAAAlB,MAEKM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,UACN7I,MAAO,8FACP8I,KAAM,6JAERT,EAAKiM,gBAAgBxS,EAASF,QAE1BqB,EAAQ,8FACe,IAAvBnB,EAASF,KAAK0B,OAChBL,EAAQ,+KAEVoF,EAAKC,MAAMC,UAAU,QAAS,CAC5BM,KAAM,QACN7I,MAAO,uCACP8I,KAAM7F,KAjBF,wBAAAc,EAAAN,SAAAI,EAAAH,SAAF,gBAAAqF,EAAAC,GAAA,OAAAyI,EAAAxI,MAAAvF,KAAAhE,YAAA,OAzDO2I,EAiFnBiM,gBAAkB,SAACE,GACjB,IAAMC,EAAmBpM,EAAK2E,MAAMvO,UAAUsM,IAAI,SAAAsJ,GAAQ,OAAIA,EAAS5P,KAAO+P,EAAM/P,GAAtBiE,OAAA+J,GAAA,EAAA/J,CAAA,GAA+B2L,EAAaG,GAASH,IACnHhM,EAAKkF,SAAS,CAAE9O,UAAWgW,KAnFVpM,EAsFnBjH,eAAiB,SAACqD,EAAI7F,GAAL,OAAc,WAC7ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,0GACPuR,QAAO,oPAAA5L,OAA6D/G,EAA7D,cACP4J,SAAQ,eAAAwK,EAAAtK,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA5E,IAAA,IAAA0Q,EAAA,OAAAzS,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACgBrC,GAAImB,eAAeqD,GADnC,OAAAP,EAAArB,OAGA6R,EAAcrM,EAAK2E,MAAMvO,UAAUyS,OAAO,SAAAkD,GAAE,OAAIA,EAAG3P,KAAOA,IAChE4D,EAAKkF,SAAS,CAAE9O,UAAWiW,KAJrB,wBAAAxQ,EAAAT,SAAAO,EAAAN,SAAF,yBAAAsP,EAAA/J,MAAAvF,KAAAhE,YAAA,OA1FO2I,EAoGnB8F,UAAY,SAACkG,EAAUpJ,GACrB,IAAM1B,EAAWC,IAAE,kBAAA7D,OAAmB0O,EAAS/K,QAAU,qBAAsB,2BAC/E,MAAO,CACL2B,EAAI,EACJrB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GAAUK,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW0C,EAASnW,QAC9C0L,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW0C,EAASM,UACpB9C,KAAOwC,EAASvC,SAASC,OAAO,uBAChCnI,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKkM,aAAaF,EAAS5P,GAAI4P,EAASnW,OAAQ4L,UAAU,iBAE1EF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAA0B,YAApBuL,EAASjR,OAAuB,uFAAmB,iFAAiB4L,WAAW,SAC5FpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK+I,WAAWiD,EAAS5P,GAAI4P,EAASjR,OAAQiR,EAASnW,OAAQ4L,UAAS,eAAAnE,OAAqC,YAApB0O,EAASjR,OAAuB,qBAAuB,OAEhKwG,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKjH,eAAeiT,EAAS5P,GAAI4P,EAASnW,OAAQ4L,UAAU,sBAjHhFzB,EAAK2E,MAAQ,CACXvO,UAAW,GACXsS,OAAQ,IAJO1I,oFASjB3E,KAAKuQ,4CAiHL,IAAMW,EAAgBlR,KAAKsN,eAAetN,KAAKsJ,MAAMvO,WACrD,OACEmL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,mIACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAACqI,GAAD,CACE/B,KAAK,SACLG,YAAY,oIACZnE,MAAOzI,KAAKsJ,MAAM+D,OAClBzF,SAAU5H,KAAKoN,iBAEnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASoB,QAASvG,KAAKwQ,eACrDtK,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,6GAIFpG,KAAKsJ,MAAMvO,UAAUkB,OACjBiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,QACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAMgT,IAERhL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,gNAnJUK,qCCElB+D,UAAS,CAAC,IAAK,gEAAe,6CAAW,iCAAS,6CAAW,8FAAoB,KACjFsF,GAAgB,CAAC,IAAK,gEAAe,6CAAW,iCAAS,6CAAW,8FAAoB,6EA0J/EqB,eAvJb,SAAAA,EAAYvM,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAmR,IACjBxM,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAmM,GAAAhG,KAAAnL,KAAM4E,KAQRwM,QAAU,YATSzM,EAenB0M,aAfmBrM,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAeJ,SAAAjH,IAAA,IAAAvC,EAAAhB,EAAAgF,EAAA,OAAAnB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPlD,EAASiJ,EAAKC,MAAMqC,MAAM9I,OAAO4C,GAD1BrC,EAAAE,KAAA,EAESrC,GAAIQ,WAAWrB,GAFxB,QAEPhB,EAFOgE,EAAAS,QAILO,EAAShF,EAAQ,GAAKA,EAAQ,GAAGgF,OAAS,SAChDiF,EAAKkF,SAAS,CAACnP,UAASgF,YALb,wBAAAhB,EAAAqB,SAAA9B,EAAA+B,SAfI2E,EAwBnByI,cAAgB,SAAA1F,GAAe,IAAZe,EAAYf,EAAZe,MACjB9D,EAAKkF,SAAS,CAAEwD,OAAQ5E,KAzBP9D,EA4BnB2I,eAAiB,SAAC5S,GAChB,OAAOA,EAAQ8S,OAAO,SAAA7S,GAAM,OAAIA,EAAOO,KAAKuS,SAAS9I,EAAK2E,MAAM+D,SAAW1S,EAAO2W,MAAM7D,SAAS9I,EAAK2E,MAAM+D,SAAW1S,EAAO4W,QAAQ/W,MAAMiT,SAAS9I,EAAK2E,MAAM+D,WA7B/I1I,EAgCnB6M,WAAa,SAACzQ,EAAI7F,GAAL,OAAc,WACzByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,4HACPmP,MAAO,CACLvQ,KAAM,gEACN0R,YAAa,2GACbnE,MAAOvN,EACPuR,KAAM,SAER3H,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,EAAO6O,GAAP,IAAAnU,EAAA,OAAA4D,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACarC,GAAIsB,iBAAiBkD,EAAI+N,GADtC,OACFnU,EADEuF,EAAAf,KAERwF,EAAK8M,cAAc9W,GAFX,wBAAAuF,EAAAH,SAAAE,EAAAD,SAAF,gBAAAqF,GAAA,OAAAN,EAAAQ,MAAAvF,KAAAhE,YAAA,OAzCO2I,EAgDnB8M,cAAgB,SAACC,GACf,IAAMC,EAAiBhN,EAAK2E,MAAM5O,QAAQ2M,IAAI,SAAA1M,GAAM,OAAIA,EAAOoG,KAAO2Q,EAAU3Q,GAAK2Q,EAAY/W,IACjGgK,EAAKkF,SAAS,CAAEnP,QAASiX,KAlDRhN,EAqDnBzH,aAAe,SAAC6D,EAAI7F,GAAL,OAAc,WAC3ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,8FACPuR,QAAO,wOAAA5L,OAA2D/G,EAA3D,cACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,IAAA,IAAAwR,EAAA,OAAApT,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACgBrC,GAAIW,aAAa6D,GADjC,OAAAV,EAAAlB,OAGAwS,EAAiBhN,EAAK2E,MAAM5O,QAAQ8S,OAAO,SAAA7S,GAAM,OAAIA,EAAOoG,KAAOA,IACzE4D,EAAKkF,SAAS,CAAEnP,QAASiX,KAJnB,wBAAAtR,EAAAN,SAAAI,EAAAH,SAAF,yBAAA+N,EAAAxI,MAAAvF,KAAAhE,YAAA,OAzDO2I,EAmEnB8F,UAAY,SAAC9P,EAAQ4M,GACnB,IAAIyI,EACF9J,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK6M,WAAW7W,EAAOoG,GAAIpG,EAAOO,MAAOkL,UAAU,iBAEnEF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKzH,aAAavC,EAAOoG,GAAIpG,EAAOO,MAAOkL,UAAU,oBAI/C,YAAtBzB,EAAK2E,MAAM5J,SACbsQ,EAAa9J,EAAA1H,EAAA2H,cAAA,WAAMgI,KAAOxT,EAAOsV,SAAS5B,OAAO,yBAEnD,IAAMxI,EAAWC,IAAE,kBAAA7D,OAAmBtH,EAAO4W,QAAQ3L,QAAU,qBAAsB,2BACrF,MAAO,CACL2B,EAAI,EACJrB,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsB0C,EAAKC,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASI,QAA5D,KAAAuH,OAAuEtH,EAAOoG,KAAMmF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWtT,EAAOO,OAC9GP,EAAO2W,MACP3W,EAAOwU,WAAWlT,OAClBiK,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GAAUK,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWtT,EAAO4W,QAAQ/W,QACpD2T,KAAOxT,EAAOyT,SAASC,OAAO,uBAC9B2B,IAzFerL,EA6FnBiN,gBAAkB,SAACzM,GAAD,OAAU,WAC1B,IAAM0M,EAAO1D,OAASE,OAAO,oBACvByD,EAAQC,KAAY5V,SAAS6V,eAAerN,EAAKyM,SACrD,CACEa,WAAY,CAAC,EAAG,GAChBC,QAAS,CAAC,MAAO,OAAQ,OACzBC,eAAe,EACfC,SAAQ,WAAAnQ,OAAa4P,GACrBQ,UAAW,YAGXnU,EAAO4T,EAAMQ,gBACjBpU,EAAgB,QAATiH,EAAiBjH,EAAKyG,EAAKyM,SAASmB,KAAOrU,EAAKyG,EAAKyM,SAASoB,IACrEV,EAAMW,YAAYvU,EAAKA,KAAMA,EAAKwU,SAAUxU,EAAKkU,SAAUlU,EAAKyU,iBAxGhEhO,EAAK2E,MAAQ,CACX5O,QAAS,GACT2S,OAAQ,GACR3N,OAAQ,UALOiF,oFAYjB3E,KAAKqR,gDAkGL,IAAMuB,EAAkB5S,KAAKsN,eAAetN,KAAKsJ,MAAM5O,SACvD,OACEwL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,qBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACU,YAAtBpG,KAAKsJ,MAAM5J,OACRwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,+CAAf,qGAAgFpG,KAAK4E,MAAMqM,UAC3F/K,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAsBF,EAAA1H,EAAA2H,cAAC8H,GAAD,8FAA2BjO,KAAK4E,MAAMqM,WAE/E/K,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAACqI,GAAD,CACE/B,KAAK,SACLG,YAAY,iCACZnE,MAAOzI,KAAKsJ,MAAM+D,OAClBzF,SAAU5H,KAAKoN,iBAEnBlH,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,aACbF,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,+BAA+BG,QAASvG,KAAK4R,gBAAgB,SAC/E1L,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,+BAA+BG,QAASvG,KAAK4R,gBAAgB,WAG5D,YAAtB5R,KAAKsJ,MAAM5J,QAAwBwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cAEjDpG,KAAKsJ,MAAM5O,QAAQuB,OACfiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,UACVgB,OAAQpH,KAAKoR,QACb5G,OAA8B,YAAtBxK,KAAKsJ,MAAM5J,OAAuBoQ,GAAgBtF,GAC1DC,UAAWzK,KAAKyK,UAChBvM,KAAM0U,IAER1M,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,qHA7IQyM,aCLhBrI,UAAS,CAAC,IAAK,iCAAS,6CAAW,6BAwI1BsI,eArIb,SAAAA,EAAYlO,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA8S,IACjBnO,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA8N,GAAA3H,KAAAnL,KAAM4E,KAgBRmO,YAjBmB/N,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAiBL,SAAAjH,IAAA,IAAA8C,EAAApG,EAAA,OAAA4D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNmC,EAAK4D,EAAKC,MAAMqC,MAAM9I,OAAO6U,SADvBtU,EAAAE,KAAA,EAESrC,GAAIS,UAAU+D,GAFvB,QAENpG,EAFM+D,EAAAS,OAIVwF,EAAKkF,SAAS,CAAElP,WAJN,wBAAA+D,EAAAqB,SAAA9B,EAAA+B,SAjBK2E,EAyBnBzH,aAAe,SAAC6D,EAAI7F,GAAL,OAAc,WAC3ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,8FACPuR,QAAO,wOAAA5L,OAA2D/G,EAA3D,cACP4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,IAAA,OAAA1B,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACgBrC,GAAIW,aAAa6D,GADjC,OAAAb,EAAAf,MAGNwF,EAAKC,MAAMY,QAAQ6K,SAHb,wBAAAnQ,EAAAH,SAAAE,EAAAD,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,OA7BO2I,EAsCnB6M,WAAa,SAACzQ,EAAI7F,GAAL,OAAc,WACzByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,4HACPmP,MAAO,CACLvQ,KAAM,gEACN0R,YAAa,2GACbH,KAAM,QACNhE,MAAOvN,GAET4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,EAAO2O,GAAP,OAAAvQ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACarC,GAAIsB,iBAAiBkD,EAAI+N,GADtC,OAAAzO,EAAAlB,KAERwF,EAAKkF,SAAS,CACZlP,OAAOqK,OAAA+J,GAAA,EAAA/J,CAAA,GACFL,EAAK2E,MAAM3O,OADV,CAEJO,KAAM4T,MALF,wBAAAzO,EAAAN,SAAAI,EAAAH,SAAF,gBAAAqF,GAAA,OAAA0I,EAAAxI,MAAAvF,KAAAhE,YAAA,OA/CO2I,EA2DnB8F,UAAY,SAAClH,EAAOgE,GAClB,IAAM1B,EAAWC,IAAE,kBAAA7D,OAAmBsB,EAAMgO,QAAQ3L,QAAU,qBAAsB,2BAC9ElG,EAA0B,YAAjB6D,EAAM7D,OAAuBwG,EAAA1H,EAAA2H,cAAA,QAAMiF,MAAO,CAAC6H,MAAO,UAAWC,YAAa,SAA7C,gDAAyE,GACjHC,EAAYjN,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsB0C,EAAKC,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASO,UAA5D,KAAAoH,OAAyEsB,EAAMxC,KAAMmF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW1K,EAAMrI,OAI9H,MAHqB,YAAjBqI,EAAM7D,SACRyT,EAAYjN,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW1K,EAAMrI,OAExB,CACLgL,EAAA1H,EAAA2H,cAAA,YAAOoB,EAAI,EAAG7H,GACdyT,EACAjN,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GAAUK,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAW1K,EAAMgO,QAAQ/W,QACnD2T,KAAO5K,EAAMsO,MAAMxD,OAAO,yBApE5B1J,EAAK2E,MAAQ,CACX3O,OAAQ,CACN4W,QAAS,CACP/W,MAAO,GACPoL,OAAQ,GAEVuJ,WAAY,KARCxK,oFAcjB3E,KAAK+S,+CA6DL,IAAMrD,EACJxJ,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,OAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAKwR,WAAWxR,KAAKsJ,MAAM3O,OAAOoG,GAAIf,KAAKsJ,MAAM3O,OAAOO,MAAOkL,UAAU,iCAEzFF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,6CAAUkG,WAAW,QACjCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAK9C,aAAa8C,KAAKsJ,MAAM3O,OAAOoG,GAAIf,KAAKsJ,MAAM3O,OAAOO,MAAOkL,UAAU,sCAI/F,OACEF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,oBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,YAAYgF,MAAO,CAAE1B,MAAO,QAA3C,0CAA8D1J,KAAKsJ,MAAM3O,OAAOO,MAChFgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAEgB,YAA7BpG,KAAKsJ,MAAM3O,OAAO+E,OAChBwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBAAf,wCACAsJ,IAINxJ,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,aACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,8CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,sBACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAkBF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWjO,KAAKsJ,MAAM3O,OAAOO,QAEhEgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,2CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,8CACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAmBpG,KAAKsJ,MAAM3O,OAAO2W,QAEtDpL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,6CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,8CACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAkBF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWjO,KAAKsJ,MAAM3O,OAAO4W,QAAQ/W,SAExE0L,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,6CACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAf,+FACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBAAmB+H,KAAOnO,KAAKsJ,MAAM3O,OAAOyT,SAASC,OAAO,0BAI9EwB,QAAQ7P,KAAKsJ,MAAM3O,OAAOwU,WAAWlT,SACpCiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,QACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAM8B,KAAKsJ,MAAM3O,OAAOwU,qBA1Hf0D,aC0ENO,qNAhFbC,SAAW,SAAArP,GAAyB,IAAvBnI,EAAuBmI,EAAvBnI,KAAMH,EAAiBsI,EAAjBtI,OAAQD,EAASuI,EAATvI,IACnBwV,EAAWtM,EAAKC,MAAMqM,SACtBqC,EAAQ,CACZ/Y,MAAO,CAAE6K,KAAM,6CAAW3J,IAAK,KAC/Bb,KAAM,SAACmG,GAAD,MAAS,CAAEqE,KAAI,4BAAAnD,OAAUgP,GAAYxV,IAAG,SAAAwG,OAAWlB,EAAX,cAC9CjG,MAAO,CAAEsK,KAAI,sEAAkB3J,OAC/B8X,aAAc,CAAEnO,KAAI,6HAA4B3J,OAChDH,SAAU,CAAE8J,KAAI,iCAAW3J,OAC3B+X,gBAAiB,CAAEpO,KAAI,wFAAqB3J,OAC5CV,UAAW,SAACgG,GAAD,MAAS,CAAEqE,KAAM,kIAA0B3J,QACtDf,QAAS,SAACqG,GAAD,MAAS,CAAEqE,KAAM,sHAAwB3J,IAAG,SAAAwG,OAAWlB,EAAX,cACrDpG,OAAQ,SAACoG,GAAD,MAAS,CAAEqE,KAAM,uCAAU3J,QACnC8H,MAAO,CAAE6B,KAAI,gEAAiB3J,OAC9BgY,YAAa,CAAErO,KAAI,kFAAoB3J,OACvCiY,UAAW,SAAC3S,GAAD,MAAS,CAAEqE,KAAM,gEAAe3J,IAAG,SAAAwG,OAAWlB,KACzDiN,MAAO,SAACtS,GACN,IAAMyU,EAAUxL,EAAKC,MAAM+O,aAAajY,GACxC,MAAO,CAAE0J,KAAI,sEAAkB3J,IAAG,UAAAwG,OAAYkO,MAIlD,MAAa,UAATtU,EACK,CAACyX,EAAM/Y,OAEH,aAATsB,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAMhY,UAEhB,oBAATO,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAME,iBAEjB,UAAR3X,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAMxY,OAEhB,iBAATe,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAMC,cAEhB,SAAT1X,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAM1Y,KAAKc,GAAS4X,EAAM/P,OAEpC,cAAT1H,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAM1Y,KAAKc,GAAS4X,EAAMI,UAAUhY,GAAS4X,EAAMG,aAE7D,cAAT5X,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAM1Y,KAAKc,GAAS4X,EAAMvY,UAAUW,IAE9C,YAATG,GAA0C,UAApB8I,EAAKC,MAAMrE,KAC5B,CAAC+S,EAAM/Y,MAAO+Y,EAAM1Y,KAAKc,IAErB,YAATG,GAA0C,UAApB8I,EAAKC,MAAMrE,KAC5B,CAAC+S,EAAM/Y,MAAO+Y,EAAMtF,MAAMtS,GAAS4X,EAAM1Y,KAAKc,IAE1C,WAATG,EACK,CAACyX,EAAM/Y,MAAO+Y,EAAM1Y,KAAKc,GAAS4X,EAAM3Y,OAAOe,IAEjD,4EAIP,IAAMoM,EAActM,EAASW,SAASC,SAASC,UACzCiX,EAAQtT,KAAKqT,SAASvL,GAI5B,OAHIA,EAAYpM,QACdsE,KAAK4E,MAAMgP,UAAU9L,EAAYpM,QAGjCwK,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAEXkN,EAAMjM,IAAI,SAACwM,EAAMtM,GAAP,OAAarB,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAIuN,EAAKpY,IAAK+L,IAAKD,EAAGnB,UAAU,aAAaY,gBAAgB,qBAAqB6M,EAAKzO,gBApE7GqB,kBCKpB+D,GAAS,CAAC,IAAK,qBAAO,6CAAW,6CAAW,yFAiHnCsJ,eA9Gb,SAAAA,EAAYlP,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA8T,IACjBnP,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA8O,GAAA3I,KAAAnL,KAAM4E,KAURmP,eAXmB/O,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAWF,SAAAjH,IAAA,IAAA8C,EAAAlG,EAAAH,EAAA,OAAA6D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTmC,EAAK4D,EAAKC,MAAMqC,MAAM9I,OAAO6V,QADpBtV,EAAAE,KAAA,EAESrC,GAAIgB,aAAawD,GAF1B,QAETlG,EAFS6D,EAAAS,QAIPzE,EAAUiK,EAAKsP,gBAAgBpZ,EAAUH,QAASG,EAAUkG,IAClE4D,EAAKkF,SAAL7E,OAAA+J,GAAA,EAAA/J,CAAA,GAAmBnK,EAAnB,CAA8BH,cALjB,wBAAAgE,EAAAqB,SAAA9B,EAAA+B,SAXE2E,EAoBnBsK,cAAgB,SAAClO,EAAI7F,EAAM+I,GAAX,OAA2B,WACzCU,EAAKC,MAAMC,UAAU,aAAc,CACjC3J,OACA+I,cACAa,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,EAAO6O,EAASI,GAAhB,OAAA3Q,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACWrC,GAAIwB,gBAAgB,CAACgD,KAAI7F,KAAM4T,EAAS7K,YAAaiL,IADhE,OAAAhP,EAAAf,MAGNwF,EAAKkF,SAAS,CAAC3O,KAAM4T,IAHf,wBAAA5O,EAAAH,SAAAE,EAAAD,SAAF,gBAAAqF,EAAAC,GAAA,OAAAP,EAAAQ,MAAAvF,KAAAhE,YAAA,OAxBO2I,EAiCnB6K,gBAAkB,SAACzO,EAAI7F,GAAL,OAAc,WAC9ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,kFACPuR,QAAO,4NAAA5L,OAAyD/G,EAAzD,cACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,IAAA,OAAA5B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACgBrC,GAAIwB,gBAAgB,CAACgD,KAAIrB,OAAQ,YADjD,OAAAW,EAAAlB,MAGNwF,EAAKC,MAAMY,QAAQ+C,KAAnB,GAAAtG,OAA2B3H,EAASM,KAApC,KAAAqH,OAA4C0C,EAAKC,MAAMqC,MAAM9I,OAAO4C,KAH9D,wBAAAV,EAAAN,SAAAI,EAAAH,SAAF,yBAAA+N,EAAAxI,MAAAvF,KAAAhE,YAAA,OArCO2I,EA8CnB8F,UAAY,SAAC9P,EAAQ4M,GACnB,IAAM1B,EAAWC,IAAE,kBAAA7D,OAAmBtH,EAAO4W,QAAQ3L,QAAU,qBAAsB,2BACrF,MAAO,CACL2B,EAAI,EACJrB,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsB0C,EAAKC,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASI,QAA5D,KAAAuH,OAAuEtH,EAAOoG,KAAMmF,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWtT,EAAOO,OAC9GP,EAAO2W,MACPpL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWP,GAAUK,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWtT,EAAO4W,QAAQ/W,QACpD2T,KAAOxT,EAAOkX,MAAMxD,OAAO,yBArDZ1J,EAyDnBsP,gBAAkB,SAACvZ,EAASsZ,GAC1B,IAAME,EAAS,GAOf,OANAxZ,EAAQ8N,QAAS,SAAA7N,GACIA,EAAOwU,WAAW3B,OAAQ,SAAAjK,GAAK,OAAKA,EAAMxC,KAAOiT,IAAS3M,IAAK,SAAA9D,GAAK,MAAK,CAACgO,QAAShO,EAAMgO,QAASM,KAAMtO,EAAMsO,QACtHrJ,QAAS,SAACjF,EAAOgE,GAC1B2M,EAAO3L,KAAPvD,OAAA+J,GAAA,EAAA/J,CAAA,GAAgBrK,EAAW4I,EAA3B,CAAkCiE,IAAK7M,EAAOoG,GAAKwG,SAGhD2M,GA/DPvP,EAAK2E,MAAQ,CACX5O,QAAS,IAHMiK,oFAQjB3E,KAAK+T,kDA6DM/T,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GAAnC,IACM2O,EACJxJ,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,OAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAKiP,cAAcjP,KAAKsJ,MAAMvI,GAAIf,KAAKsJ,MAAMpO,KAAM8E,KAAKsJ,MAAMrF,aAAcmC,UAAU,iCAEtGF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,6CAAUkG,WAAW,QACjCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAASvG,KAAKwP,gBAAgBxP,KAAKsJ,MAAMvI,GAAIf,KAAKsJ,MAAMpO,MAAOkL,UAAU,sCAIpF,OACEF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,YAAYgF,MAAO,CAAE1B,MAAO,QAA3C,oCAA6D1J,KAAKsJ,MAAMpO,MACxEgL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAEW,YAAtBpG,KAAKsJ,MAAM5J,OACPwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBAAf,8CACAsJ,IAITG,QAAQ7P,KAAKsJ,MAAM5O,QAAQuB,QACxBiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACArI,UAAU,QACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAM8B,KAAKsJ,MAAM5O,UAEjBwL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,wLApGYK,iBCsIT0N,eApIb,SAAAA,EAAYvP,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAmU,IACjBxP,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAmP,GAAAhJ,KAAAnL,KAAM4E,KAiBRwP,UAAY,WAAuB,IAAtB1U,EAAsB1D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,SACpBqY,QAAQC,IAAI,CAAC3P,EAAK4P,WAAW,MAAO7U,GAASiF,EAAK6P,gBAAgBC,KAAK,SAACC,GACtE,IAAM5Z,EAAQ4Z,EAAU,GAClBC,EAASD,EAAU,GACnBE,EAAW,GACjB9Z,EAAM0N,QAAQ,SAAA5N,GACZga,EAASha,EAAKwV,OAASwE,EAASha,EAAKwV,OAASwE,EAASha,EAAKwV,OAAS,EAAI,IAE3E,IAAMyE,EAAgBF,EAAOtN,IAAI,SAAA2G,GAAK,OAAAhJ,OAAA+J,GAAA,EAAA/J,CAAA,GAAUgJ,EAAV,CAAiBE,WAAY0G,EAAS5G,EAAMjN,KAAO,MACnF+T,EAAc,GACpBH,EAAOnM,QAAQ,SAAAwF,GACb8G,EAAY9G,EAAMjN,IAAM,CAACvG,MAAOwT,EAAMxT,MAAOoL,OAAQoI,EAAMpI,UAE7D,IAAMmP,EAAeja,EAAMuM,IAAI,SAAAzM,GAAI,OAAAoK,OAAA+J,GAAA,EAAA/J,CAAA,GAASpK,EAAT,CAAesV,UAAW4E,EAAYla,EAAKwV,WAC9EzL,EAAKkF,SAAS,CAAE8K,OAAQE,EAAe/Z,MAAOia,GAAgB,WACxDpQ,EAAK2E,MAAM0L,gBACbrQ,EAAKsQ,mBAlCMtQ,EAwCnB6P,YAxCmBxP,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAwCL,SAAAjH,IAAA,IAAA0W,EAAA,OAAApW,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSrC,GAAIM,YADb,cACN8X,EADMjW,EAAAS,KAAAT,EAAAc,OAAA,SAELmV,GAFK,wBAAAjW,EAAAqB,SAAA9B,EAAA+B,SAxCK2E,EA6CnB4P,WA7CmBvP,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KA6CN,SAAAjF,IAAA,IAAAc,EAAArB,EAAA5E,EAAAoa,EAAAlZ,UAAA,OAAAuC,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAOmC,EAAPmU,EAAAjZ,OAAA,QAAAC,IAAAgZ,EAAA,GAAAA,EAAA,GAAY,MAAOxV,EAAnBwV,EAAAjZ,OAAA,EAAAiZ,EAAA,QAAAhZ,EAAAgE,EAAAtB,KAAA,EACSrC,GAAIc,SAAS0D,EAAIrB,GAD1B,cACL5E,EADKoF,EAAAf,KAAAe,EAAAV,OAAA,SAEJ1E,GAFI,wBAAAoF,EAAAH,SAAAE,EAAAD,SA7CM2E,EAkDnBiP,UAAY,SAAC7S,GACX4D,EAAKkF,SAAS,CAAEmL,eAAgBjU,GAAM4D,EAAKsQ,cAnD1BtQ,EAsDnBsQ,YAAc,WACZ,IAAMra,EAAO+J,EAAK2E,MAAMxO,MAAMgB,KAAK,SAAAlB,GAAI,OAAIA,EAAKmG,KAAO4D,EAAK2E,MAAM0L,kBAAmB,GACrFrQ,EAAKkF,SAAS,CAAEoH,SAAUrW,EAAKM,KAAL,IAAA+G,OAAgBrH,EAAKM,KAAKU,OAAO,EAAG,IAApC,KAA6C,MAxDtD+I,EA2DnBqK,YAAc,SAACmG,EAASzV,GACtB,GAAKyV,EAAL,CAIA,IAAMJ,EAAepQ,EAAK2E,MAAMxO,MAAMuM,IAAI,SAAAzM,GAAI,OAAIA,EAAKmG,KAAOoU,EAAQpU,GAApBiE,OAAA+J,GAAA,EAAA/J,CAAA,GAA6BpK,EAASua,GAAWva,IACnG+J,EAAKkF,SAAS,CAAE/O,MAAOia,GAAgBpQ,EAAKsQ,kBAJ1CtQ,EAAKyP,UAAU1U,IA7DAiF,EAoEnBwI,aAAe,WACbxI,EAAKyP,aArEYzP,EAwEnBN,WAAa,SAACtD,EAAI7F,EAAMka,GAAX,OAAApQ,OAAAC,EAAA,GAAA1G,EAAAC,EAAA0G,KAAkB,SAAA5E,IAAA,OAAA/B,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAC7B+F,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,kFACPuR,QAAO,sNAAA5L,OAAwD/G,EAAxD,cACP4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAA/E,IAAA,IAAA4U,EAAA,OAAAxW,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACgBrC,GAAI8H,WAAWtD,GAD/B,OAAAV,EAAAlB,OAGA4V,EAAepQ,EAAK2E,MAAMxO,MAAM0S,OAAO,SAAA5S,GAAI,OAAIA,EAAKmG,KAAOA,IACjE4D,EAAKkF,SAAS,CAAE/O,MAAOia,IACvBK,GAAMA,KALA,wBAAA/U,EAAAN,SAAAI,EAAAH,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,KAJmB,wBAAAwE,EAAAT,SAAAO,EAAAN,UAxEZ2E,EAuFnB7H,YAAc,SAACiE,EAAI7F,GAAL,OAAc,WAC1ByJ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,wFACPuR,QAAO,kOAAA5L,OAA0D/G,EAA1D,cACP4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAzE,IAAA,IAAAoU,EAAA,OAAAtW,EAAAC,EAAAC,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACgBrC,GAAIO,YAAYiE,GADhC,OAAAJ,EAAAxB,OAGA0V,EAAgBlQ,EAAK2E,MAAMqL,OAAOnH,OAAO,SAAAQ,GAAK,OAAIA,EAAMjN,KAAOA,IACrE4D,EAAKkF,SAAS,CAAE8K,OAAQE,KAJlB,wBAAAlU,EAAAZ,SAAAU,EAAAT,SAAF,yBAAA+N,EAAAxI,MAAAvF,KAAAhE,YAAA,OA3FO2I,EAqGnBgP,aAAe,SAACjY,GACd,IAAMd,EAAO+J,EAAK2E,MAAMxO,MAAMgB,KAAM,SAAAlB,GAAI,OAAIA,EAAKmG,KAAOrF,IACxD,OAAOd,EAAOA,EAAKwV,MAAQ,MArG3BzL,EAAK2E,MAAQ,CACXqL,OAAQ,GACR7Z,MAAO,GACPka,eAAgB,KAChB/D,SAAU,IANKtM,oFAWZ3E,KAAK4E,MAAMyQ,QAGdrV,KAAKoU,YAFLpU,KAAK4E,MAAMY,QAAQ+C,KAAKjO,EAASE,wCA8F5B,IAAAkO,EAAA1I,KACP,OACEkG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAM,IAAAtT,OAAI3H,EAASM,KAAb,QAAyBN,EAASC,OAAQib,UAAW5O,KAClEV,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOG,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACuP,GAAD1Q,OAAA2Q,OAAA,GAAiB/Q,EAAjB,CAAwBgP,UAAWlL,EAAKkL,UAAW3C,SAAUvI,EAAKY,MAAM2H,SAAU1Q,KAAK,QAAQoT,aAAcjL,EAAKiL,mBAC5IzN,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAMjb,EAASC,MAAOwM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACyP,GAAD5Q,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkBC,UAAW6D,EAAK9D,MAAMC,UAAW0I,MAAO7E,EAAKY,MAAMqL,OAAQxH,aAAczE,EAAKyE,aAAcrQ,YAAa4L,EAAK5L,kBACtLoJ,EAAA1H,EAAA2H,cAAC0P,EAAA,EAAD,KACE3P,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASQ,MAAd,QAA2BiM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC2P,GAAD9Q,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkBC,UAAW6D,EAAK9D,MAAMC,UAAW/J,MAAO4N,EAAKY,MAAMxO,MAAOkU,YAAatG,EAAKsG,YAAa3K,WAAYqE,EAAKrE,WAAY3E,OAAO,eAC9MwG,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASQ,MAAd,YAA+BiM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC2P,GAAD9Q,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkBC,UAAW6D,EAAK9D,MAAMC,UAAW/J,MAAO4N,EAAKY,MAAMxO,MAAOkU,YAAatG,EAAKsG,YAAa3K,WAAYqE,EAAKrE,WAAY3E,OAAO,gBAClNwG,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASQ,MAAd,qBAAwCiM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC2P,GAAD9Q,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkBC,UAAW6D,EAAK9D,MAAMC,UAAW/J,MAAO4N,EAAKY,MAAMxO,MAAOkU,YAAatG,EAAKsG,YAAa3K,WAAYqE,EAAKrE,WAAY3E,OAAO,gBAC3NwG,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASQ,MAAd,aAAgCiM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC2P,GAAD9Q,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkBC,UAAW6D,EAAK9D,MAAMC,UAAW/J,MAAO4N,EAAKY,MAAMxO,MAAOkU,YAAatG,EAAKsG,YAAa3K,WAAYqE,EAAKrE,WAAY3E,OAAO,gBAErNwG,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAA0BmM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC4P,GAAD/Q,OAAA2Q,OAAA,GAAU/Q,EAAV,CAAiBC,UAAW6D,EAAK9D,MAAMC,UAAWR,WAAYqE,EAAKrE,WAAY2K,YAAatG,EAAKsG,kBAC/J9I,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASO,UAAlC,aAAwDkM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC6P,GAADhR,OAAA2Q,OAAA,GAAe/Q,EAAf,CAAsBC,UAAW6D,EAAK9D,MAAMC,gBACxIqB,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASS,WAAagM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC8P,GAADjR,OAAA2Q,OAAA,GAAe/Q,EAAf,CAAsBC,UAAW6D,EAAK9D,MAAMC,gBAC/HqB,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASI,SAAWqM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC+P,GAADlR,OAAA2Q,OAAA,GAAa/Q,EAAb,CAAoBC,UAAW6D,EAAK9D,MAAMC,UAAWoM,SAAUvI,EAAKY,MAAM2H,eAC3J/K,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASI,QAAlC,cAAuDqM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACgQ,GAADnR,OAAA2Q,OAAA,GAAY/Q,EAAZ,CAAmBC,UAAW6D,EAAK9D,MAAMC,wBA3HlH4B,iBCiBX2P,oLAvBX,OACElQ,EAAA1H,EAAA2H,cAACU,GAAD,KACEX,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAIhM,EAASC,MAAOyM,gBAAgB,kBAAkBZ,UAAU,+BAA8BF,EAAA1H,EAAA2H,cAAA,+CAE3GnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASI,SAAWsM,gBAAgB,kBAAkBZ,UAAU,iCAAgCF,EAAA1H,EAAA2H,cAAA,2DACpKD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,mDAAkDF,EAAA1H,EAAA2H,cAAA,2DAGnEnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAA9CkB,OAAmD3H,EAASS,WAAaiM,gBAAgB,kBAAkBZ,UAAU,8BAA6BF,EAAA1H,EAAA2H,cAAA,uEACnKD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,gDAA+CF,EAAA1H,EAAA2H,cAAA,uEAGhEnG,KAAK4E,MAAMqC,MAAM9I,OAAO4C,GACpBmF,EAAA1H,EAAA2H,cAACW,GAAA,EAAD,CAASC,OAAK,EAACT,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBjC,KAAK4E,MAAMqC,MAAM9I,OAAO4C,IAAMiG,gBAAgB,kBAAkBZ,UAAU,gCAA+BF,EAAA1H,EAAA2H,cAAA,+CAChJD,EAAA1H,EAAA2H,cAAA,KAAGC,UAAU,kDAAiDF,EAAA1H,EAAA2H,cAAA,uDAnBpDM,iBCOlB+D,UAAS,CAAC,IAAK,2BAAQ,gHAAuB,8FAAoB,KAkHzD6L,eA/Gb,SAAAA,EAAYzR,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAqW,IACjB1R,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAqR,GAAAlL,KAAAnL,KAAM4E,KAURsI,UAAY,WACVvI,EAAKC,MAAMC,UAAU,WAAY,CAACC,SAAUH,EAAKC,MAAMoK,eAZtCrK,EAenByI,cAAgB,SAAApJ,GAAa,IAAXyE,EAAWzE,EAAXyE,MAChB9D,EAAKkF,SAAS,CAACwD,OAAQ5E,KAhBN9D,EAmBnB2I,eAAiB,SAACxS,GAChB,OAAOA,EAAM0S,OAAQ,SAAA5S,GAAI,OAAIA,EAAKM,KAAKuS,SAAS9I,EAAK2E,MAAM+D,WApB1C1I,EAuBnB+I,WAAa,SAAC3M,EAAIrB,EAAQxE,GAAb,OAAsB,WACjC,IAAMyS,EAAoB,WAAXjO,EAAsB,iFAAkB,uFACvDiF,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,8FACPsR,OAAQD,EACRE,QAAO,yIAAA5L,OAAkC0L,EAAlC,uCAAA1L,OAA0D/G,EAA1D,cACP4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjH,IAAA,IAAArD,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEO,WAAXc,EAFI,CAAAhB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGOrC,GAAI6H,UAAUrD,GAHrB,OAGNnG,EAHM8D,EAAAS,KAAAT,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAKOrC,GAAI+H,aAAavD,GALxB,OAKNnG,EALM8D,EAAAS,KAAA,OAORwF,EAAKC,MAAMoK,YAAYpU,GAPf,yBAAA8D,EAAAqB,SAAA9B,EAAA+B,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,OA7BO2I,EAyCnBkK,SAAW,SAAC9N,EAAI7F,GAAL,OAAc,WACvByJ,EAAKC,MAAMC,UAAU,YAAa,CAChCvI,MAAO,0GACPmP,MAAO,CACLvQ,KAAM,kFACN0R,YAAa,6HACbH,KAAM,OACNhE,MAAOvN,GAET4J,SAAQ,eAAAiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,EAAO6O,GAAP,IAAAlU,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACWrC,GAAIqB,eAAemD,EAAI+N,GADlC,OACFlU,EADEsF,EAAAf,KAERwF,EAAKC,MAAMoK,YAAYpU,GAFf,wBAAAsF,EAAAH,SAAAE,EAAAD,SAAF,gBAAAqF,GAAA,OAAA0I,EAAAxI,MAAAvF,KAAAhE,YAAA,OAlDO2I,EAyDnB8F,UAAY,SAAC7P,EAAM2M,GAAP,MAAa,CACvBA,EAAI,EACJrB,EAAA1H,EAAA2H,cAACE,EAAA,EAAD,CAAMC,GAAE,GAAArE,OAAK3H,EAASM,KAAd,KAAAqH,OAAsBrH,EAAKmG,IAA3BkB,OAAgC3H,EAASI,UAAWwL,EAAA1H,EAAA2H,cAAC8H,GAAD,KAAWrT,EAAKM,OAC5EN,EAAKgV,aACLzB,KAAOvT,EAAKwT,SAASC,OAAO,uBAC5BnI,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,mDAAWkG,WAAW,SAClCpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKkK,SAASjU,EAAKmG,GAAInG,EAAKM,MAAOkL,UAAU,iBAE7DF,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAsB,YAAhBxK,EAAK8E,OAAuB,uFAAmB,iFAAiB4L,WAAW,SACxFpF,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAK+I,WAAW9S,EAAKmG,GAAInG,EAAK8E,OAAQ9E,EAAKM,MAAOkL,UAAS,eAAAnE,OAAiC,YAAhBrH,EAAK8E,OAAuB,qBAAuB,OAE/IwG,EAAA1H,EAAA2H,cAACmI,GAAD,CAASlJ,KAAK,8CACZc,EAAA1H,EAAA2H,cAAA,OAAKI,QAAS5B,EAAKC,MAAMP,WAAWzJ,EAAKmG,GAAInG,EAAKM,MAAOkL,UAAU,sBApEvEzB,EAAK2E,MAAQ,CACX+D,OAAQ,IAHO1I,oFAQjB3E,KAAK4E,MAAMoK,+CAoEX,IAAMsH,EAAgBtW,KAAKsN,eAAetN,KAAK4E,MAAM9J,OACrD,OACEoL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,mBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,2GACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAACqI,GAAD,CACE/B,KAAK,SACLG,YAAY,8HACZnE,MAAOzI,KAAKsJ,MAAM+D,OAClBzF,SAAU5H,KAAKoN,iBAEnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASoB,QAASvG,KAAKkN,WACrDhH,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,yEAIFpG,KAAK4E,MAAM9J,MAAMmB,OACfiK,EAAA1H,EAAA2H,cAACsI,GAAD,CACErI,UAAU,QACVoE,OAAQA,GACRC,UAAWzK,KAAKyK,UAChBvM,KAAMoY,IAENpQ,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,0HArGWK,iBC+EV8P,eA/Eb,SAAAA,EAAY3R,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAuW,IACjB5R,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAuR,GAAApL,KAAAnL,KAAM4E,KAgBR2P,WAjBmBvP,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAiBN,SAAAjH,IAAA,IAAAnD,EAAA,OAAAyD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSrC,GAAIc,WADb,QACLvC,EADK4D,EAAAS,OAGTwF,EAAKkF,SAAS,CAAE/O,SAAS6J,EAAKsQ,aAHrB,wBAAAvW,EAAAqB,SAAA9B,EAAA+B,SAjBM2E,EAwBnBiP,UAAY,SAAC7S,GACX4D,EAAKkF,SAAS,CAAEmL,eAAgBjU,GAAM4D,EAAKsQ,cAzB1BtQ,EA4BnBsQ,YAAc,WACZ,IAAMra,EAAO+J,EAAK2E,MAAMxO,MAAMgB,KAAK,SAAAlB,GAAI,OAAIA,EAAKmG,KAAO4D,EAAK2E,MAAM0L,kBAAmB,GACrFrQ,EAAKkF,SAAS,CACZ2M,iBAAkB5b,EAAKM,KAAL,IAAA+G,OAAgBrH,EAAKM,KAAKU,OAAO,EAAG,IAApC,KAA6C,MA/BhD+I,EAmCnBqK,YAAc,SAACmG,GACb,GAAKA,EAAL,CAIA,IAAMJ,EAAepQ,EAAK2E,MAAMxO,MAAMuM,IAAK,SAAAzM,GAAI,OAAIA,EAAKmG,KAAOoU,EAAQpU,GAAKoU,EAAUva,IACtF+J,EAAKkF,SAAS,CAAE/O,MAAOia,GAAgBpQ,EAAKsQ,kBAJ1CtQ,EAAK4P,cArCU5P,EA4CnBN,WAAa,SAACtD,EAAI7F,EAAMka,GAAX,OAAkB,WAC7BzQ,EAAKC,MAAMC,UAAU,iBAAkB,CACrCvI,MAAO,kFACPuR,QAAO,sNAAA5L,OAAwD/G,EAAxD,cACP4J,SAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAAE,SAAAjF,IAAA,IAAA8U,EAAA,OAAAxW,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACgBrC,GAAI8H,WAAWtD,GAD/B,OAAAb,EAAAf,OAGA4V,EAAepQ,EAAK2E,MAAMxO,MAAM0S,OAAO,SAAA5S,GAAI,OAAIA,EAAKmG,KAAOA,IACjE4D,EAAKkF,SAAS,CAAE/O,MAAOia,IACvBK,GAAMA,KALA,wBAAAlV,EAAAH,SAAAE,EAAAD,SAAF,yBAAA+E,EAAAQ,MAAAvF,KAAAhE,YAAA,OA9CV2I,EAAK2E,MAAQ,CACXxO,MAAO,GACPka,eAAgB,KAChBwB,iBAAkB,IALH7R,oFAUZ3E,KAAK4E,MAAMyQ,QAGdrV,KAAKuU,aAFLvU,KAAK4E,MAAMY,QAAQ+C,KAAKjO,EAASE,wCAgD5B,IAAAkO,EAAA1I,KACP,OACEkG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAM,IAAAtT,OAAI3H,EAASM,KAAb,QAAyBN,EAASC,OAAQib,UAAWY,KAClElQ,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOG,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACuP,GAAD1Q,OAAA2Q,OAAA,GAAiB/Q,EAAjB,CAAwBgP,UAAWlL,EAAKkL,UAAW3C,SAAUvI,EAAKY,MAAMkN,iBAAkBjW,KAAK,cACzH2F,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAMjb,EAASC,MAAOwM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACsQ,GAADzR,OAAA2Q,OAAA,GAAgB/Q,EAAhB,CAAuBC,UAAW6D,EAAK9D,MAAMC,UAAW/J,MAAO4N,EAAKY,MAAMxO,MAAOkU,YAAatG,EAAKsG,YAAa3K,WAAYqE,EAAKrE,iBACvL6B,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAA0BmM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC4P,GAAD/Q,OAAA2Q,OAAA,GAAU/Q,EAAV,CAAiBC,UAAW6D,EAAK9D,MAAMC,UAAWR,WAAYqE,EAAKrE,WAAY2K,YAAatG,EAAKsG,kBAC/J9I,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASO,UAAlC,aAAwDkM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC6P,GAADhR,OAAA2Q,OAAA,GAAe/Q,EAAf,CAAsBC,UAAW6D,EAAK9D,MAAMC,gBACxIqB,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASS,WAAagM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC8P,GAADjR,OAAA2Q,OAAA,GAAe/Q,EAAf,CAAsBC,UAAW6D,EAAK9D,MAAMC,gBAC/HqB,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASI,SAAWqM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAAC+P,GAADlR,OAAA2Q,OAAA,GAAa/Q,EAAb,CAAoBC,UAAW6D,EAAK9D,MAAMC,UAAWoM,SAAUvI,EAAKY,MAAMkN,uBAC3JtQ,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAI,GAAAtT,OAAK3H,EAASM,KAAd,QAAAqH,OAAyB3H,EAASI,QAAlC,cAAuDqM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACgQ,GAADnR,OAAA2Q,OAAA,GAAY/Q,EAAZ,CAAmBC,UAAW6D,EAAK9D,MAAMC,wBAtElH4B,kCCWXiQ,4BAlBb,SAAAA,EAAY9R,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA0W,IACjB/R,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA0R,GAAAvL,KAAAnL,KAAM4E,KACD0E,MAAQ,GAFI3E,wEAQjB,OACEuB,EAAA1H,EAAA2H,cAACU,GAAD,KAAMX,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,uBAAhB,uGAVeK,kBCgMZkQ,eA1Lb,SAAAA,EAAY/R,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA2W,IACjBhS,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA2R,GAAAxL,KAAAnL,KAAM4E,KAwBRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KA1BiBjS,EAgCnBgK,UAhCmB3J,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAgCP,SAAAjH,IAAA,IAAA8C,EAAAnG,EAAA,OAAA2D,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJmC,EAAK4D,EAAKC,MAAMhK,KADZ8D,EAAAE,KAAA,EAESrC,GAAIe,QAAQyD,GAFrB,QAEJnG,EAFI8D,EAAAS,OAIRwF,EAAKkF,SAAS,CAAEjP,SAJR,wBAAA8D,EAAAqB,SAAA9B,EAAA+B,SAhCO2E,EAwCnBmS,cAAgB,SAAAC,GAAoB,IAAlBtO,EAAkBsO,EAAlBtO,MAAOuO,EAAWD,EAAXC,MACvBrS,EAAKkF,SAAS,CACZmK,QAASvL,EACT0K,UAAW6D,KA3CIrS,EA+CnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM4N,aAAevS,EAAK2E,MAAM6N,cAhD3BxS,EAmDnByS,SAnDmBpS,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAmDR,SAAAjF,IAAA,OAAA1B,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACarC,GAAIY,cAAc,CAAEmU,MAAO3M,EAAK2E,MAAMgI,QADnD,OAAApR,EAAAf,KAGPwF,EAAK0S,WAEL1S,EAAK2S,WALE,wBAAApX,EAAAH,SAAAE,EAAAD,SAnDQ2E,EA6DnB2S,SAAW,WACT3S,EAAKC,MAAMC,UAAU,cAAe,CAAEyM,MAAO3M,EAAK2E,MAAMgI,MAAOxM,SAAUH,EAAK0S,YA9D7D1S,EAiEnB0S,SAjEmB,eAAAE,EAAAvS,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAiER,SAAA/E,EAAOP,GAAP,IAAAxB,EAAAgH,EAAA9I,EAAA6I,EAAAqS,EAAAtc,EAAAoW,EAAAlD,EAAAqJ,EAAAC,EAAA7F,EAAA,OAAAtT,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACcrC,GAAIU,aAAa,CACtC/B,KAAMyJ,EAAK2E,MAAMpO,KACjBoW,MAAO3M,EAAK2E,MAAMgI,MAClBzW,UAAW,CACTkG,GAAI4D,EAAK2E,MAAM0K,QACf9Y,KAAMyJ,EAAK2E,MAAM6J,WAEnBvT,SARO,QACHxB,EADGiC,EAAAlB,MAUIM,MACkB,aAAzBrB,EAASF,KAAKwB,OAChBiF,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,UAAWC,KAAI,2CAAAnD,OAAe0C,EAAK2E,MAAMpO,KAA1B,mGAAA+G,OAA0D0C,EAAK2E,MAAM6J,UAArE,UAErDxO,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,UAAWC,KAAI,2CAAAnD,OAAe0C,EAAK2E,MAAMpO,KAA1B,gJAEvDyJ,EAAKkF,SAAS,CACZsJ,UAAW,oDACXa,QAAS,GACT9Y,KAAM,GACNgc,YAAa,GACb5F,MAAO,GACP6F,aAAc,OAGZ/R,EAAO,8FACP9I,EAAQ,uCACR6I,EAAO,QACgB,IAAvB/G,EAASF,KAAK0B,MAAY4X,EACKpZ,EAASF,KAAKyZ,KAAvCzc,EADoBsc,EACpBtc,KAAMoW,EADckG,EACdlG,MAAOlD,EADOoJ,EACPpJ,QACrB9R,EAAQ,qJACR8I,EAAI,sEAAAnD,OAAuB/G,EAAvB,kGAAA+G,OAA2DqP,EAA3D,8GAAArP,OAAkGkM,KAAOC,GAASC,OAAO,oBAAzH,QACJlJ,EAAO,QACyB,IAAvB/G,EAASF,KAAK0B,MAAY6X,EACZrZ,EAASF,KAAKyZ,KAA7Bzc,EAD2Buc,EAC3Bvc,KAAM2W,EADqB4F,EACrB5F,KACdvV,EAAQ,8MACR8I,EAAI,wFAAAnD,OAA0B/G,EAA1B,wGAAA+G,OAA+DkM,KAAO0D,GAAMxD,OAAO,oBAAnF,QACJlJ,EAAO,QACyB,IAAvB/G,EAASF,KAAK0B,MACvBwF,EAAI,oIACJD,EAAO,SACyB,KAAvB/G,EAASF,KAAK0B,OACvBwF,EAAI,qJACJD,EAAO,SAETR,EAAKC,MAAMC,UAAU,QAAS,CAAEM,OAAM7I,QAAO8I,UA7CtC,wBAAA/E,EAAAN,SAAAI,EAAAH,SAjEQ,gBAAAqF,GAAA,OAAAkS,EAAAhS,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACX6J,UAAW,oDACXa,QAAS,GACTpZ,KAAM,CACJM,KAAM,2BACNiU,WAAY,GACZzP,OAAQ,IAEVxE,KAAM,GACNgc,YAAa,GACb5F,MAAO,GACP6F,aAAc,IAbCxS,oFAkBZ3E,KAAK4E,MAAMyQ,QAGdrV,KAAK2O,YAFL3O,KAAK4E,MAAMY,QAAQ+C,KAAKjO,EAASE,wCAgGnC,IAAKwF,KAAKsJ,MAAM1O,KAAK8E,OACnB,OACEwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAACyR,GAAD,OAIN,GAA+B,WAA3B5X,KAAKsJ,MAAM1O,KAAK8E,OAClB,OACEwG,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAACyR,GAAD,MACA1R,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,2BACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eAAf,wGAMR,IAAMyR,EAAU7X,KAAKsJ,MAAM1O,KAAKuU,WAAW9H,IAAI,SAAA9D,GAAK,MAAK,CAAEkF,MAAOlF,EAAMxC,GAAIiW,MAAOzT,EAAMrI,QACzF2c,EAAQC,QAAQ,CAAErP,MAAO,GAAIuO,MAAO,sDACpC,IAAMe,EAAiB,CAAEtP,MAAOzI,KAAKsJ,MAAM0K,QAASgD,MAAOhX,KAAKsJ,MAAM6J,WACtE,OACEjN,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAACyR,GAAD,MACA1R,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,2BACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,QACfF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,yBAAf,0IACAF,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,iCACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,OACLuR,KAAK,QACLtH,KAAK,OACLyH,YAAY,gEACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMpO,KAClB0M,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,yDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLC,KAAK,yBACLE,YAAY,wFACZb,eAAe,QACftD,MAAOzI,KAAKsJ,MAAMgI,MAClB1J,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAAC6R,GAAA,EAAD,CACE5R,UAAU,SACV6R,gBAAgB,SAChBC,cAAc,EACdzP,MAAOsP,EACPnQ,SAAU5H,KAAK8W,cACfe,QAASA,KAGb3R,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKoX,SAAUe,UAAWnY,KAAKiX,eAAnE,oEAnLgBxQ,iBC8Fb2R,uBA/Fb,SAAAA,EAAYxT,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAoY,IACjBzT,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAoT,GAAAjN,KAAAnL,KAAM4E,KAiBRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAnBiBjS,EAyBnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM+O,cAAgB1T,EAAK2E,MAAMgP,iBA1B5B3T,EA6BnBnK,MA7BmB,eAAAkN,EAAA1C,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KA6BX,SAAAjH,EAAOsa,GAAP,IAAAC,EAAAC,EAAA,OAAAla,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACN2Z,EAAEG,iBADIha,EAAAE,KAAA,EAEYrC,GAAI/B,MAAM,CAC1BA,MAAOmK,EAAK2E,MAAM9O,MAClB4F,SAAUuE,EAAK2E,MAAMlJ,WAJjB,QAEAoY,EAFA9Z,EAAAS,MAMEM,MACNkF,EAAKC,MAAM+T,QAAQH,EAAIta,MACvByG,EAAKC,MAAMY,QAAQ+C,KAAKjO,EAASC,SAE7Bke,EAAe,0GACG,IAAlBD,EAAIta,KAAK0B,KACX6Y,EAAe,0IACY,IAAlBD,EAAIta,KAAK0B,OAClB6Y,EAAe,uHAEjB9T,EAAKkF,SAAS,CAAE4O,kBAhBZ,wBAAA/Z,EAAAqB,SAAA9B,EAAA+B,SA7BW,gBAAAqF,GAAA,OAAAqC,EAAAnC,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACX9O,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBG,aAAc,IAPC9T,oFAYjB5I,IACIiE,KAAK4E,MAAMyQ,SACbrV,KAAK4E,MAAMY,QAAQ+C,KAAKjO,EAASC,wCAoCnC,OACE2L,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eACbF,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAcgR,SAAUpX,KAAKxF,OAC3C0L,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACfF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,YAA8CF,EAAA1H,EAAA2H,cAAA,4IAEhDD,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAf,8JACAF,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,4EACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,WACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,kFACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,OAAKC,UAAWkG,IAAW,qBAAsB,CAAEsM,0BAA2B5Y,KAAKsJ,MAAMmP,gBACtFzY,KAAKsJ,MAAMmP,cAEdvS,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eAAzD,uCAvFMxQ,kBCiGLoS,uBAlGb,SAAAA,EAAYjU,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA6Y,IACjBlU,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA6T,GAAA1N,KAAAnL,KAAM4E,KAeRkU,iBAhBmB9T,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAgBA,SAAAjH,IAAA,OAAAM,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMrC,GAAIC,UADV,OAAAkC,EAAAS,KAEJ3C,SACXmI,EAAKC,MAAMY,QAAQ+C,KAAKjO,EAASC,OAHlB,wBAAAmE,EAAAqB,SAAA9B,EAAA+B,SAhBA2E,EAuBnByI,cAAgB,SAAA1F,GAA4B,IAAAkP,EAA1B1b,EAA0BwM,EAA1BxM,KAAMuN,EAAoBf,EAApBe,MAAOoD,EAAanE,EAAbmE,QAC7BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAxBiBjS,EA8BnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM+O,cAAgB1T,EAAK2E,MAAMgP,iBAAmB3T,EAAK2E,MAAMyP,uBA/B1DpU,EAkCnBqU,cAlCmB,eAAAjC,EAAA/R,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAkCH,SAAAjF,EAAOsY,GAAP,OAAAha,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cACd2Z,EAAEG,iBADYxY,EAAAtB,KAAA,EAESrC,GAAII,WAAW,CACpCgJ,KAAM,OACNnL,MAAOmK,EAAK2E,MAAM9O,MAClB4F,SAAUuE,EAAK2E,MAAMlJ,WALT,OAAAF,EAAAf,KAODM,MACXkF,EAAKC,MAAMY,QAAQ+C,KAAKjO,EAASE,OARrB,wBAAA0F,EAAAH,SAAAE,EAAAD,SAlCG,gBAAAqF,GAAA,OAAA0R,EAAAxR,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACX9O,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBW,eAAgB,GAChBF,uBAAuB,GARRpU,oFAajB3E,KAAK8Y,oDAkCL,OACE5S,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,aACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,cACbF,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,aAAagR,SAAUpX,KAAKgZ,eAC1C9S,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,sBAAf,oLACAF,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,iCACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACErJ,KAAK,WACLsH,KAAK,WACLvR,KAAK,WACL0R,YAAY,uCACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,wFACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACErJ,KAAK,WACLsH,KAAK,WACLvR,KAAK,iBACL0R,YAAY,uCACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM2P,eAClBtN,YAAa3L,KAAKsJ,MAAMlJ,SACxBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eAAzD,yDA1FKxQ,sCCyFJyS,uBA1Fb,SAAAA,EAAYtU,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAkZ,IACjBvU,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAkU,GAAA/N,KAAAnL,KAAM4E,KAWRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAbiBjS,EAmBnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM+O,cAAgB1T,EAAK2E,MAAMgP,iBAAmB3T,EAAK2E,MAAMyP,uBApB1DpU,EAuBnBwU,SAvBmB,eAAAzR,EAAA1C,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAuBR,SAAAjH,EAAOsa,GAAP,IAAAna,EAAAgH,EAAA,OAAA7G,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT2Z,EAAEG,iBADOha,EAAAE,KAAA,EAEcrC,GAAII,WAAW,CACpCgJ,KAAM,QACNnL,MAAOmK,EAAK2E,MAAM9O,MAClB4F,SAAUuE,EAAK2E,MAAMlJ,WALd,QAEHhC,EAFGM,EAAAS,MAOIM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAACM,KAAM,UAAWC,KAAI,qCAAAnD,OAAc0C,EAAK2E,MAAM9O,MAAzB,sGACpDmK,EAAKC,MAAM1G,KAAK4G,WAChBH,EAAKC,MAAMwU,MAAM,KAEXhU,EAA8B,IAAvBhH,EAASF,KAAK0B,KAAa,8KAAoC,8FAC5E+E,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,QAASC,UAbxC,wBAAA1G,EAAAqB,SAAA9B,EAAA+B,SAvBQ,gBAAAqF,GAAA,OAAAqC,EAAAnC,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACX9O,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBW,eAAgB,GAChBF,uBAAuB,GARRpU,wEAyCjB,OACEuB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,yFACAF,EAAA1H,EAAA2H,cAAA,QAAMiR,SAAUpX,KAAKmZ,UACnBjT,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,4EACZb,eAAe,QACftD,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,WACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,kFACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,wFACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,iBACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM2P,eAClBtN,YAAa3L,KAAKsJ,MAAMlJ,SACxBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eACvD/Q,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,8DAnFWK,kBC6HR4S,eA5Hb,SAAAA,EAAYzU,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAqZ,IACjB1U,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAqU,GAAAlO,KAAAnL,KAAM4E,KAeRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAjBiBjS,EAuBnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM4N,aAChBvS,EAAK2E,MAAMgQ,gBACX3U,EAAK2E,MAAM+O,cACX1T,EAAK2E,MAAMgP,iBACX3T,EAAK2E,MAAMyP,uBA5BIpU,EA+BnB4U,QA/BmB,eAAA7R,EAAA1C,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KA+BT,SAAAjH,EAAOsa,GAAP,IAAAna,EAAAgH,EAAA,OAAA7G,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACR2Z,EAAEG,iBADMha,EAAAE,KAAA,EAEerC,GAAIa,WAAW,CACpClC,KAAMyJ,EAAK2E,MAAMpO,KACjByU,QAAShL,EAAK2E,MAAMqG,QACpBnV,MAAOmK,EAAK2E,MAAM9O,MAClB4F,SAAUuE,EAAK2E,MAAMlJ,WANf,QAEFhC,EAFEM,EAAAS,MAQKM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,UAAWC,KAAI,+BAAAnD,OAAa0C,EAAK2E,MAAMpO,KAAxB,0FACrDyJ,EAAKC,MAAM1G,KAAK4G,WAChBH,EAAKC,MAAMwU,MAAM,KAEXhU,EAA8B,IAAvBhH,EAASF,KAAK0B,KAAa,8KAAoC,8FAC5E+E,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,QAASC,UAdzC,wBAAA1G,EAAAqB,SAAA9B,EAAA+B,SA/BS,gBAAAqF,GAAA,OAAAqC,EAAAnC,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACXpO,KAAM,GACNgc,aAAa,EACbvH,QAAS,GACT2J,gBAAgB,EAChB9e,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBW,eAAgB,GAChBF,uBAAuB,GAZRpU,wEAkDjB,OACEuB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,uEACAF,EAAA1H,EAAA2H,cAAA,QAAMiR,SAAUpX,KAAKuZ,SACnBrT,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,8FACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,OACLuR,KAAK,OACLG,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMpO,KAClB0M,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,UACLuR,KAAK,WACLG,YAAY,4EACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMqG,QAClB/H,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,MAAIC,UAAU,SACdF,EAAA1H,EAAA2H,cAAA,MAAIC,UAAU,SACdF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,oIACAF,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,4EACZb,eAAe,QACftD,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,WACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,kFACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,wFACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,iBACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM2P,eAClBtN,YAAa3L,KAAKsJ,MAAMlJ,SACxBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eACvD/Q,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,wDArHUK,iBC8EP+S,eA7Eb,SAAAA,EAAY5U,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAwZ,IACjB7U,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAwU,GAAArO,KAAAnL,KAAM4E,KAQRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAViBjS,EAgBnB8U,iBAAmB,SAAA/R,GAAgB,IAAbgS,EAAahS,EAAbgS,OACpB/U,EAAKkF,SAAS,CAAC8P,KAAMD,EAAOjR,SAjBX9D,EAoBnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM4N,aArBDvS,EAwBnBiV,SAxBmB,eAAA7C,EAAA/R,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAwBR,SAAAjH,EAAOsa,GAAP,IAAA7c,EAAA0C,EAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT2Z,EAAEG,iBACIhd,EAASiJ,EAAKC,MAAM1G,KAAK6C,GAFtBrC,EAAAE,KAAA,EAGcrC,GAAIoB,gBAAgBjC,EAAQ,CACjDR,KAAMyJ,EAAK2E,MAAMpO,KACjB+I,YAAaU,EAAK2E,MAAMqQ,OALjB,QAGHvb,EAHGM,EAAAS,MAOIM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,UAAWC,KAAI,qCAAAnD,OAAc0C,EAAK2E,MAAMpO,KAAzB,4GACrDyJ,EAAKC,MAAM1G,KAAK4G,WAChBH,EAAKC,MAAMwU,MAAM,IAEjBzU,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,QAASC,KAAMhH,EAASF,KAAKyB,UAZ5D,wBAAAjB,EAAAqB,SAAA9B,EAAA+B,SAxBQ,gBAAAqF,GAAA,OAAA0R,EAAAxR,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACXpO,KAAM,GACNgc,aAAa,EACbyC,KAAM,IALShV,wEAyCjB,OACEuB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,6EACAF,EAAA1H,EAAA2H,cAAA,QAAMiR,SAAUpX,KAAK4Z,UACnB1T,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,+DACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,OACLuR,KAAK,QACLG,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMpO,KAClB0M,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,+DACAD,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,qCACbF,EAAA1H,EAAA2H,cAAA,YACEC,UAAU,WACVlL,KAAK,OACL0R,YAAY,8FACZnE,MAAOzI,KAAKsJ,MAAMqQ,KAClB/R,SAAU5H,KAAKyZ,qBAIrBvT,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eACvD/Q,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,8DAtEWK,iBC4FRoT,eA3Fb,SAAAA,EAAYjV,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA6Z,IACjBlV,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA6U,GAAA1O,KAAAnL,KAAM4E,KAWRwI,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,KAbiBjS,EAmBnBsS,YAAc,WACZ,OAAOtS,EAAK2E,MAAM+O,cAAgB1T,EAAK2E,MAAMgP,iBAAmB3T,EAAK2E,MAAMyP,uBApB1DpU,EAuBnBmV,YAvBmB,eAAApS,EAAA1C,OAAAC,EAAA,EAAAD,CAAAzG,EAAAC,EAAA0G,KAuBL,SAAAjH,EAAOsa,GAAP,IAAAna,EAAAgH,EAAA,OAAA7G,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ2Z,EAAEG,iBADUha,EAAAE,KAAA,EAEWrC,GAAII,WAAW,CACpCgJ,KAAM,WACNnL,MAAOmK,EAAK2E,MAAM9O,MAClB4F,SAAUuE,EAAK2E,MAAMlJ,SACrB1E,OAAQiJ,EAAKC,MAAM1G,KAAK6C,KANd,QAEN3C,EAFMM,EAAAS,MAQCM,MACXkF,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,UAAWC,KAAI,uDAAAnD,OAAiB0C,EAAK2E,MAAM9O,MAA5B,sGACrDmK,EAAKC,MAAM1G,KAAK4G,WAChBH,EAAKC,MAAMwU,MAAM,KAEXhU,EAA8B,IAAvBhH,EAASF,KAAK0B,KAAa,8KAAoC,8FAC5E+E,EAAKC,MAAMC,UAAU,QAAS,CAAEM,KAAM,QAASC,UAdrC,wBAAA1G,EAAAqB,SAAA9B,EAAA+B,SAvBK,gBAAAqF,GAAA,OAAAqC,EAAAnC,MAAAvF,KAAAhE,YAAA,GAEjB2I,EAAK2E,MAAQ,CACX9O,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBW,eAAgB,GAChBF,uBAAuB,GARRpU,wEA0CjB,OACEuB,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,2GACAF,EAAA1H,EAAA2H,cAAA,QAAMiR,SAAUpX,KAAK8Z,aACnB5T,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,4EACZb,eAAe,QACftD,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,WACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,kFACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,wFACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,iBACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM2P,eAClBtN,YAAa3L,KAAKsJ,MAAMlJ,SACxBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASjB,KAAK,SAASgT,UAAWnY,KAAKiX,eACvD/Q,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,cAAhB,8DApFcK,iBCkCXsT,8MAlCbC,SAAW,WACTrV,EAAKC,MAAM1G,KAAK4G,WAChBH,EAAKC,MAAMwU,iFAGJ,IAAAa,EAC4Bja,KAAK4E,MAAM1G,KAAtC5B,EADD2d,EACC3d,MAAOuR,EADRoM,EACQpM,QAASD,EADjBqM,EACiBrM,OACxB,OACE1H,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,+BACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAuB8T,wBAAyB,CAAEC,OAAQ7d,KACxEuR,GACC3H,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,sBACbF,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,gCAAgC8T,wBAAyB,CAAEC,OAAQtM,MAGvF3H,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,0BACbF,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKga,UAAWpM,GAAU,8CAC9D1H,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,qBAAqBG,QAASvG,KAAK4E,MAAMwU,OAA3D,uDAnBkB3S,iBCgDb2T,eA9Cb,SAAAA,EAAYxV,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAAoa,IACjBzV,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAAoV,GAAAjP,KAAAnL,KAAM4E,KAMRoV,SAAW,WACTrV,EAAKC,MAAM1G,KAAK4G,SAASH,EAAK2E,MAAM1J,MACpCya,WAAW,kBAAM1V,EAAKC,MAAMwU,MAAM,IAAI,MATrBzU,EAYnByI,cAAgB,SAAApJ,GAAc,IAAZ0V,EAAY1V,EAAZ0V,OAChB/U,EAAKkF,SAAS,CAACjK,KAAM8Z,EAAOjR,SAX5B9D,EAAK2E,MAAQ,CACX1J,KAAM,IAHS+E,wEAgBV,IACC2M,EAAUtR,KAAK4E,MAAM1G,KAArBoT,MACR,OACEpL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,+BACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,oEACAF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,0BAAf,kKAEEF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAwBkL,GACvCpL,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBACbF,EAAA1H,EAAA2H,cAAA,iHACAD,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,QAAQkU,UAAU,IAAI7R,MAAOzI,KAAKsJ,MAAM1J,KAAMgI,SAAU5H,KAAKoN,kBAGlFlH,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,0BACbF,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKga,UAAzC,sEACA9T,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,qBAAqBG,QAASvG,KAAK4E,MAAMwU,OAA3D,uDAjCe3S,iBCAnB8T,oLASK,IAAAN,EACqBja,KAAK4E,MAAM1G,KAAhCiH,EADA8U,EACA9U,KAAMC,EADN6U,EACM7U,KAAM9I,EADZ2d,EACY3d,MACnB,OACE4J,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,6BACZ9J,GAAS4J,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,sBAAsB9J,GAC/C4J,EAAA1H,EAAA2H,cAAA,OAAKC,UAAS,yCAAAnE,OAA2CkD,IACvDe,EAAA1H,EAAA2H,cAAA,QAAMC,UAAU,mBAAmB8T,wBAAyB,CAACC,OAAQ/U,MAEvEc,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAK4E,MAAMwU,OAA/C,sDAjBYvG,aAAd0H,GACGzP,aAAe,CACpB5M,KAAM,CACJiH,KAAM,UACNC,KAAM,UACN9I,MAAO,KA2BEie,UCuBAC,8MAnDblR,MAAQ,CACNb,MAAO,GACPoD,SAAS,KAGXuB,cAAgB,SAAApJ,GAAsB,IAApByE,EAAoBzE,EAApByE,MAAOoD,EAAa7H,EAAb6H,QACvBlH,EAAKkF,SAAS,CAAEpB,QAAOoD,eAGzBmO,SAAW,WACTrV,EAAKC,MAAM1G,KAAK4G,SAASH,EAAK2E,MAAMb,OACpC9D,EAAKC,MAAMwU,iFAGJ,IAAAa,EACkBja,KAAK4E,MAAM1G,KAA5B5B,EADD2d,EACC3d,MAAOmP,EADRwO,EACQxO,MACf,OACEvF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAuB8T,wBAAyB,CAAEC,OAAQ7d,KACzE4J,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,WAAMsF,EAAMvQ,MACZgL,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAMhB,EAAMgB,KACZG,YAAanB,EAAMmB,YACnBb,eAAe,WACfM,aAAcZ,EAAMhD,MACpBA,MAAOzI,KAAKsJ,MAAMb,MAClBb,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKga,SAAU7B,UAAWnY,KAAKsJ,MAAMuC,SAAzE,4DAjCepF,iBCoFRgU,8MAlFbnR,MAAQ,CACN9O,MAAO,GACP6d,cAAc,EACdjY,SAAU,GACVkY,iBAAiB,EACjBW,eAAgB,GAChBF,uBAAuB,KAGzB3L,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,OAMFoD,SAAW,WACTrV,EAAKC,MAAMwU,QACXzU,EAAKC,MAAM1G,KAAK4G,SAASH,EAAK2E,MAAM9O,MAAOmK,EAAK2E,MAAMlJ,aAGxD6W,YAAc,WACZ,OAAOtS,EAAK2E,MAAM+O,cAAgB1T,EAAK2E,MAAMgP,iBAAmB3T,EAAK2E,MAAMyP,+FAGpE,IAAAkB,EACkBja,KAAK4E,MAAM1G,KAA5B5B,EADD2d,EACC3d,MAAO9B,EADRyf,EACQzf,MACf,OACE0L,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,iCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,uBAAuB8T,wBAAyB,CAAEC,OAAQ7d,KACzE4J,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,6CACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,QACLuR,KAAK,QACLG,YAAY,4EACZb,eAAe,QACfM,aAAc7R,EACdiO,MAAOzI,KAAKsJ,MAAM9O,MAClBoN,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,mDACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,WACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,kFACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAMlJ,SAClBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,wFACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,iBACLuR,KAAK,WACLtH,KAAK,WACLyH,YAAY,8FACZb,eAAe,WACftD,MAAOzI,KAAKsJ,MAAM2P,eAClBtN,YAAa3L,KAAKsJ,MAAMlJ,SACxBwH,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKga,SAAU7B,UAAWnY,KAAKiX,eAAnE,4DArEexQ,iBCmERiU,8MAjEbpR,MAAQ,CACNpO,KAAMyJ,EAAKC,MAAM1G,KAAKhD,KACtBgc,aAAa,KAGf9J,cAAgB,SAAApJ,GAA8B,IAAA4S,EAA3B1b,EAA2B8I,EAA3B9I,KAAMuN,EAAqBzE,EAArByE,MAAOoD,EAAc7H,EAAd6H,QAC9BlH,EAAKkF,UAAL+M,EAAA,GAAA5R,OAAA6R,GAAA,EAAA7R,CAAA4R,EACG1b,EAAOuN,GADVzD,OAAA6R,GAAA,EAAA7R,CAAA4R,EAAA,GAAA3U,OAEM/G,EAFN,WAEsB2Q,GAFtB+K,OAMFK,YAAc,WACZ,OAAOtS,EAAK2E,MAAM4N,eAGpB8C,SAAW,WACTrV,EAAKC,MAAM1G,KAAK4G,SAASH,EAAK2E,MAAMpO,KAAMyJ,EAAKgW,KAAKlS,OACpD9D,EAAKC,MAAMwU,iFAGJ,IAAA1Q,EAAA1I,KAAAia,EACuBja,KAAK4E,MAAM1G,KAAjChD,EADD+e,EACC/e,KAAM+I,EADPgW,EACOhW,YACd,OACEiC,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kCACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,wBAAf,iHACAF,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,+DACAD,EAAA1H,EAAA2H,cAACqI,GAAD,CACEtT,KAAK,OACLuR,KAAK,QACLG,YAAY,8FACZb,eAAe,WACfM,aAAcnR,EACduN,MAAOzI,KAAKsJ,MAAMpO,KAClB0M,SAAU5H,KAAKoN,iBAGnBlH,EAAA1H,EAAA2H,cAAA,SAAOC,UAAU,SACfF,EAAA1H,EAAA2H,cAAA,+DACAD,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,qCACbF,EAAA1H,EAAA2H,cAAA,YACEC,UAAU,WACVlL,KAAK,OACL0R,YAAY,8FACZP,aAAcpI,EACd+I,IAAK,SAAAD,GAAE,OAAIrE,EAAKiS,KAAO5N,OAI7B7G,EAAA1H,EAAA2H,cAAA,UAAQC,UAAU,SAASG,QAASvG,KAAKga,SAAU7B,UAAWnY,KAAKiX,eAAnE,4DApDgBxQ,iBCiGTmU,eArFb,SAAAA,EAAYhW,GAAO,IAAAD,EAAA,OAAAK,OAAAgG,EAAA,EAAAhG,CAAAhF,KAAA4a,IACjBjW,EAAAK,OAAAiG,EAAA,EAAAjG,CAAAhF,KAAAgF,OAAAkG,EAAA,EAAAlG,CAAA4V,GAAAzP,KAAAnL,KAAM4E,KAMRiW,eAAiB,SAACtC,GAChBA,EAAEuC,mBARenW,EAWnBoW,WAAa,SAACxC,GACE,WAAVA,EAAE/Q,KACJ7C,EAAKC,MAAMwU,SAXbzU,EAAK2E,MAAQ,GAFI3E,wEA0BjB,IAAIkJ,EARC7N,KAAK4E,MAAMoW,QAId7e,SAASiO,iBAAiB,UAAWpK,KAAK+a,YAC1C5e,SAAS8e,qBAAqB,QAAQ,GAAG7P,MAAM8P,SAAW,WAJ1D/e,SAASkO,oBAAoB,UAAWrK,KAAK+a,YAC7C5e,SAAS8e,qBAAqB,QAAQ,GAAG7P,MAAM8P,SAAW,QAO5D,IAAMtW,EAAQ,CACZ1G,KAAM8B,KAAK4E,MAAM1G,KACjB2G,UAAW7E,KAAK4E,MAAMuW,KACtB/B,MAAOpZ,KAAK4E,MAAMwU,OAEI,cAApBpZ,KAAK4E,MAAM1J,KACb2S,EAAU3H,EAAA1H,EAAA2H,cAACiV,GAAaxW,GACK,UAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACkV,GAAUzW,GACQ,aAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACmV,GAAY1W,GACK,cAApB5E,KAAK4E,MAAM1J,KACnB2S,EAAU3H,EAAA1H,EAAA2H,cAACoV,GAAa3W,GACK,iBAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACqV,GAAgB5W,GACE,mBAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACsV,GAAkB7W,GACA,gBAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACuV,GAAe9W,GACG,cAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACwV,GAAa/W,GACK,cAApB5E,KAAK4E,MAAM1J,KACpB2S,EAAU3H,EAAA1H,EAAA2H,cAACyV,GAAahX,GACK,eAApB5E,KAAK4E,MAAM1J,OACpB2S,EAAU3H,EAAA1H,EAAA2H,cAAC0V,GAAcjX,IAG3B,IAAMkX,EAAgC,UAApB9b,KAAK4E,MAAM1J,MAAwC,gBAApB8E,KAAK4E,MAAM1J,KAC5D,OACEgL,EAAA1H,EAAA2H,cAAC4V,GAAAvd,EAAD,CACEwd,eAAe,YACfC,uBAAwB,IACxBC,uBAAwB,KAEtBlc,KAAK4E,MAAMoW,QACX9U,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,gBAAgBG,QAASuV,EAAY,KAAO9b,KAAK4E,MAAMwU,OACpElT,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,eACbF,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,kBAAkBG,QAASvG,KAAK6a,iBAC3CiB,GAAa5V,EAAA1H,EAAA2H,cAAA,OAAKC,UAAU,YAAYG,QAASvG,KAAK4E,MAAMwU,QAC7DvL,aAnEGpH,iBC6KL0V,8MA/Kb7S,MAAQ,CACN8S,aAAa,EACbC,UAAW,GACXC,UAAW,KACXC,mBAAmB,EACnBC,gBAAiB,GACjBC,gBAAiB,KACjBC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZxH,SAAS,KAWXyH,SAAW,WACT,IAAMvc,EAAO,CACXmc,SAAU/X,EAAK2E,MAAMoT,SACrBC,SAAUhY,EAAK2E,MAAMqT,SACrBC,SAAUjY,EAAK2E,MAAMsT,SACrBvH,QAAS1Q,EAAK2E,MAAM+L,QACpBwH,WAAYlY,EAAK2E,MAAMuT,YAEzBhd,eAAekd,QAAQ,OAAQ/d,KAAKC,UAAUsB,OAGhDsE,UAAY,SAACwX,EAAWne,GAClByG,EAAK2E,MAAM8S,YACbzX,EAAKkF,SAAS,CACZ0S,mBAAmB,EACnBC,gBAAiBH,EACjBI,gBAAiBve,IAGnByG,EAAKkF,SAAS,CACZuS,aAAa,EACbC,YACAC,UAAWpe,OAKjB8e,WAAa,SAACC,GACRtY,EAAK2E,MAAMiT,mBAAqC,IAAhBU,EAClCtY,EAAKkF,SAAS,CACZ0S,mBAAmB,IAGrB5X,EAAKkF,SAAS,CACZuS,aAAa,OAKnBzD,QAAU,SAACpY,GACToE,EAAKkF,SAAS,CACZ6S,SAAUnc,EAAK/F,MACfmiB,SAAUpc,EAAKoF,KACfiX,SAAUrc,EAAK7E,OACfmhB,WAAYtc,EAAKqF,OACjByP,SAAS,GACR1Q,EAAKmY,aAGVtW,SAAW,WACT7B,EAAKE,UAAU,iBAAkB,CAC/BvI,MAAO,0KACPsR,OAAQ,iCACR9I,SAAUH,EAAKuY,YAInBA,OAAS,WACPvY,EAAKkF,SAAS,CACZ6S,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZxH,SAAS,GACR1Q,EAAKmY,+FAvER,IAAMK,EAAatd,eAAeud,QAAQ,QAC1C,GAAID,EAAY,CACd,IAAM5c,EAAOvB,KAAKqe,MAAMF,GACxBnd,KAAK6J,SAAStJ,qCAuET,IACH+c,EADG5U,EAAA1I,KA8CP,OA3CEsd,EAD0B,aAAxBtd,KAAKsJ,MAAMqT,SAEXzW,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CACEC,KAAMjb,EAASC,MACfkb,OAAQ,SAAC7Q,GAAD,OACNsB,EAAA1H,EAAA2H,cAACoX,GAADvY,OAAA2Q,OAAA,GACM/Q,EADN,CAEEC,UAAW6D,EAAK7D,UAChBwQ,QAAS3M,EAAKY,MAAM+L,QACpBza,KAAM8N,EAAKY,MAAMsT,eAKQ,UAAxB5c,KAAKsJ,MAAMqT,SAElBzW,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CACEC,KAAMjb,EAASC,MACfkb,OAAQ,SAAC7Q,GAAD,OACNsB,EAAA1H,EAAA2H,cAACqX,GAADxY,OAAA2Q,OAAA,GACM/Q,EADN,CAEEyQ,QAAS3M,EAAKY,MAAM+L,QACpBxQ,UAAW6D,EAAK7D,gBAKS,SAAxB7E,KAAKsJ,MAAMqT,SAElBzW,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CACEC,KAAMjb,EAASC,MACfkb,OAAQ,SAAC7Q,GAAD,OACNsB,EAAA1H,EAAA2H,cAACsX,GAADzY,OAAA2Q,OAAA,GACM/Q,EADN,CAEEC,UAAW6D,EAAK7D,UAChBwQ,QAAS3M,EAAKY,MAAM+L,cAMbnP,EAAA1H,EAAA2H,cAACuX,EAAA,EAAD,CAAUpX,GAAIhM,EAASE,QAItC0L,EAAA1H,EAAA2H,cAACwX,EAAA,EAAD,KACEzX,EAAA1H,EAAA2H,cAAC0P,EAAA,EAAD,KACE3P,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAMjb,EAASE,MAAOuM,OAAK,EAAC0O,OAAQ,SAAC7Q,GAAD,OAAWsB,EAAA1H,EAAA2H,cAACyX,GAAD5Y,OAAA2Q,OAAA,GAAW/Q,EAAX,CAAkB+T,QAASjQ,EAAKiQ,QAAStD,QAAS3M,EAAKY,MAAM+L,cACnHnP,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAOC,KAAMjb,EAASG,KAAMsM,OAAK,EAACyO,UAAWqD,KAC7C3S,EAAA1H,EAAA2H,cAACmP,EAAA,EAAD,CAAO3O,SAAU,SAAC/B,GAAD,OACfsB,EAAA1H,EAAA2H,cAAAD,EAAA1H,EAAAqf,SAAA,KACE3X,EAAA1H,EAAA2H,cAAC2X,GAAD9Y,OAAA2Q,OAAA,GACM/Q,EADN,CAEEe,KAAM+C,EAAKY,MAAMqT,SACjBzhB,KAAMwN,EAAKY,MAAMoT,SACjB9W,OAAQ8C,EAAKY,MAAMuT,WACnBrW,SAAUkC,EAAKlC,SACf3B,UAAW6D,EAAK7D,aAEjByY,EACDpX,EAAA1H,EAAA2H,cAAC4X,GAAD/Y,OAAA2Q,OAAA,GACM/Q,EADN,CAEEoW,OAAQtS,EAAKY,MAAM8S,YACnBlhB,KAAMwN,EAAKY,MAAM+S,UACjBne,KAAMwK,EAAKY,MAAMgT,UACjBnB,KAAMzS,EAAK7D,UACXuU,MAAO1Q,EAAKsU,cAEd9W,EAAA1H,EAAA2H,cAAC4X,GAAD/Y,OAAA2Q,OAAA,GACM/Q,EADN,CAEEoW,OAAQtS,EAAKY,MAAMiT,kBACnBrhB,KAAMwN,EAAKY,MAAMkT,gBACjBte,KAAMwK,EAAKY,MAAMmT,gBACjBtB,KAAMzS,EAAK7D,UACXuU,MAAO1Q,EAAKsU,2BAtKVnK,aCDEhD,QACW,cAA7BlG,OAAOvN,SAAS4hB,UAEe,UAA7BrU,OAAOvN,SAAS4hB,UAEhBrU,OAAOvN,SAAS4hB,SAAS/W,MACvB,kECZNgX,IAASxI,OAAOvP,EAAA1H,EAAA2H,cAAC+X,GAAD,MAAS/hB,SAAS6V,eAAe,SD2H3C,kBAAmBmM,WACrBA,UAAUC,cAAcC,MAAM5J,KAAK,SAAA6J,GACjCA,EAAaC","file":"static/js/main.fc602f08.chunk.js","sourcesContent":["export const PAGE_URL = {\n  index: '/',\n  login: '/login',\n  root: '/root',\n  clients: '/clients',\n  client: '/client',\n  club: '/club',\n  promotion: '/promotion',\n  clubs: '/clubs',\n  operators: '/operators',\n}","const schemas = {\n  Agent: [\n    { name: 'login', regexp: /^\\/login$/ },\n    { name: 'index', regexp: /^\\/$/ },\n    { name: 'club', regexp: /^\\/club\\/.{24}$/ },\n    { name: 'clubs', regexp: /^\\/clubs\\/.{24}$/ },\n    { name: 'clubsRemoved', regexp: /^\\/clubs\\/.{24}\\/removed$/ },\n    { name: 'clubsAll', regexp: /^\\/clubs\\/all$/ },\n    { name: 'clubsAllRemoved', regexp: /^\\/clubs\\/removed$/ },\n    { name: 'clients', regexp: /^\\/club\\/.{24}\\/clients$/ },\n    { name: 'client', regexp: /^\\/club\\/.{24}\\/clients\\/.{24}$/ },\n    { name: 'promotion', regexp: /^\\/club\\/.{24}\\/promotion\\/.{24}$/ },\n    { name: 'operators', regexp: /^\\/club\\/.{24}\\/operators$/ },\n  ]\n}\n\nconst titles = {\n  index: 'SlotAdmin',\n  login: 'SlotAdmin | Вход',\n  club: 'SlotAdmin | Клуб',\n  clubs: 'SlotAdmin | Клубы',\n  clubRemoved: 'SlotAdmin | Удаленные клубы',\n  clubsAll: 'SlotAdmin | Клубы',\n  clubAllRemoved: 'SlotAdmin | Удаленные клубы',\n  clients: 'SlotAdmin | Клиенты',\n  client: 'SlotAdmin | Клиент',\n  promotion: 'SlotAdmin | Акция',\n  operators: 'SlotAdmin | Операторы',\n}\n\nexport const parseURL = (url) => {\n  let clubId = null;\n  if (/^\\/club\\//.test(url)) {\n    clubId = url.substr(6, 24);\n  }\n  const page = schemas.Agent.find(page => page.regexp.test(url)) || {};\n  return { page: page.name, clubId, url };\n}\n\nexport const setPageTitle = (url = document.location.pathname) => {\n  const { page } = parseURL(url);\n  const title = titles[page] || titles.index;\n  document.title = title\n}","import { PAGE_URL } from './constants';\n\nconst API = {\n  hasRoot: {\n    method: 'GET',\n    url: '/api/root',\n  },\n  changeRoot: {\n    method: 'PUT',\n    url: '/api/root/update',\n  },\n  createUser: {\n    method: 'POST',\n    url: '/api/user',\n  },\n  login: {\n    method: 'POST',\n    url: '/api/login',\n  },\n  changeUserStatus: {\n    method: 'PUT',\n    url: '/api/user',\n  },\n  getAgents: {\n    method: 'GET',\n    url: '/api/agents',\n  },\n  removeAgent: {\n    method: 'DELETE',\n    url: '/api/agent/',\n  },\n  getClients: {\n    method: 'GET',\n    url: '/api/clients/',\n  },\n  getClient: {\n    method: 'GET',\n    url: '/api/client/',\n  },\n  createClient: {\n    method: 'POST',\n    url: '/api/client',\n  },\n  removeClient: {\n    method: 'PUT',\n    url: '/api/client',\n  },\n  clientIsExist: {\n    method: 'POST',\n    url: '/api/client/is_exist',\n  },\n  createClub: {\n    method: 'POST',\n    url: '/api/club',\n  },\n  getClubs: {\n    method: 'GET',\n    url: '/api/clubs/',\n  },\n  getClub: {\n    method: 'GET',\n    url: '/api/club/',\n  },\n  getPromotion: {\n    method: 'GET',\n    url: '/api/promotion/',\n  },\n  changeClubStatus: {\n    method: 'PUT',\n    url: '/api/club',\n  },\n  getOperators: {\n    method: 'GET',\n    url: '/api/operators/',\n  },\n  removeOperator: {\n    method: 'DELETE',\n    url: '/api/operator/',\n  },\n  createPromotion: {\n    method: 'POST',\n    url: '/api/promotion/',\n  },\n  changeClubName: {\n    method: 'PUT',\n    url: '/api/club/name',\n  },\n  changeClientName: {\n    method: 'PUT',\n    url: '/api/client/name',\n  },\n  changeUser: {\n    method: 'PUT',\n    url: '/api/user/update',\n  },\n  changePromotion: {\n    method: 'PUT',\n    url: '/api/promotion/update',\n  },\n};\n\nasync function request(url, method = 'GET', data) {\n  const params = {\n    method,\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n  };\n  if (data) {\n    params.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, params);\n  let body;\n  try {\n    body = await response.json();\n  } catch {\n    console.error('request has been finished with error');\n    return { isOk: false, data: {}};\n  }\n  if (response.status !== 200) {\n    console.error(body.message);\n    if (body.code === 4) {\n      sessionStorage.clear();\n      document.location = PAGE_URL.login;\n    }\n    return { isOk: false, data: body };\n  }\n  return { isOk: true, data: body };\n}\n\nasync function hasRoot() {\n  const response = await request(API.hasRoot.url);\n  return response.data;\n}\n\nasync function changeRoot(login, password) {\n  const body = { login, password };\n  const response = await request(API.changeRoot.url, API.changeRoot.method, body);\n  return response;\n}\n\nasync function createUser(user) {\n  const response = await request(API.createUser.url, API.createUser.method, user);\n  return response;\n}\n\nasync function login(logPass) {\n  const response = await request(API.login.url, API.login.method, logPass);\n  return response;\n}\n\nasync function getAgents() {\n  const response = await request(API.getAgents.url);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeAgent(id) {\n  const response = await request(API.removeAgent.url + id, API.removeAgent.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function getClients(id) {\n  const response = await request(API.getClients.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClient(id) {\n  const response = await request(API.getClient.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function createClient(client) {\n  const response = await request(API.createClient.url, API.createClient.method, client);\n  return response;\n}\n\nasync function removeClient(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.removeClient.url, API.removeClient.method, params);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function clientIsExist(client) {\n  const response = await request(API.clientIsExist.url, API.clientIsExist.method, client);\n  return response.data.is_exist;\n}\n\nasync function createClub(club) {\n  const response = await request(API.createClub.url, API.createClub.method, club);\n  return response;\n}\n\nasync function getClubs(id = '', status) {\n  const response = await request(`${API.getClubs.url}${id}${status ? '/' + status : ''}`);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClub(id) {\n  const response = await request(API.getClub.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockClub(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeClub(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function activateClub(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getPromotion(id) {\n  const response = await request(API.getPromotion.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockUser(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeUser(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function activateUser(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getOperators(clubId) {\n  const response = await request(API.getOperators.url + clubId);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeOperator(id) {\n  const response = await request(API.removeOperator.url + id, API.removeOperator.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function createPromotion(clubId, promo) {\n  const response = await request(API.createPromotion.url + clubId, API.createPromotion.method, promo);\n  return response;\n}\n\nasync function changeClubName(id, name) {\n  const body = { id, name };\n  const response = await request(API.changeClubName.url, API.changeClubName.method, body);\n  return response.data;\n}\n\nasync function changeClientName(id, name) {\n  const body = { id, name };\n  const response = await request(API.changeClientName.url, API.changeClientName.method, body);\n  return response.data;\n}\n\nasync function changeUser(id, login, password) {\n  const body = { id, login, password };\n  const response = await request(API.changeUser.url, API.changeUser.method, body);\n  return response;\n}\n\nasync function changePromotion({id, name, description, status}) {\n  const body = { id, name, description, status };\n  const response = await request(API.changePromotion.url, API.changePromotion.method, body);\n  return response.isOk;\n}\n\nexport default {\n  hasRoot,\n  changeRoot,\n  createUser,\n  login,\n  getAgents,\n  removeAgent,\n  getClients,\n  getClient,\n  createClient,\n  removeClient,\n  clientIsExist,\n  createClub,\n  getClubs,\n  getClub,\n  blockClub,\n  removeClub,\n  activateClub,\n  getPromotion,\n  blockUser,\n  removeUser,\n  activateUser,\n  getOperators,\n  removeOperator,\n  createPromotion,\n  changeClubName,\n  changeClientName,\n  changeUser,\n  changePromotion,\n};","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nimport { setPageTitle } from '../../utils/url';\nimport API from '../../API';\n\nclass Header extends PureComponent {\n\n  componentWillMount() {\n    setPageTitle();\n    this.props.history.listen((location) => {\n      setPageTitle(location.pathname);\n    });\n  }\n\n  changeUser = () => {\n    this.props.openPopup('edit-user', {\n      title: 'Редактировать аккаунт',\n      login: this.props.name,\n      callback: async (login, password) => {\n        const response = await API.changeRoot(login, password);\n        if (response.isOk) {\n          this.props.openPopup('alert', {\n            type: 'success',\n            title: 'Аккаунт изменен',\n            text: 'Изменения успешно сохранены'\n          });\n        } else {\n          let error = 'Произошла ошибка';\n          if (response.data.code === 6) {\n            error = 'Такой логин уже зарегистрирован';\n          }\n          this.props.openPopup('alert', {\n            type: 'error',\n            title: 'Ошибка',\n            text: error,\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    const {role, avatar} = this.props;\n    const avaClass = cn(\n      'header__avatar',\n      `header__avatar_${avatar}`,\n      {\n        'header__avatar_operator': role === 'operator',\n        'header__avatar_agent': role === 'agent',\n        'header__avatar_admin': role === 'root',\n      }\n    );\n    return (\n      <div className=\"header\">\n        <div className=\"header__content\">\n          <Link to={'/'} className=\"header__logo\">\n            <div className=\"header__pic\" />\n            <div className=\"header__title\">SlotAdmin<span>Система учета клиентов</span></div>\n          </Link>\n          <div className=\"header__user\">\n            {\n              role == 'root'\n                ? <span className=\"header__username as-link\" onClick={this.changeUser}>{this.props.name}</span>\n                : <span className=\"header__username\">{this.props.name}</span>\n            }\n            <div className={avaClass}/>\n            <div className=\"header__exit\" onClick={this.props.onLogout}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  role: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onLogout: PropTypes.func.isRequired,\n  avatar: PropTypes.number.isRequired,\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Menu.scss';\n\nfunction Menu({children}) {\n  return (\n    <div className=\"menu\">\n      <div className=\"menu__content\">{children}</div>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  \n};\n\nexport default Menu;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAdmin extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-agent\"><span>Агенты</span></NavLink>\n        <NavLink exact to={`${PAGE_URL.clubs}/all`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-client\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-client menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-promo\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-promo menu-tab_disabled\"><span>Акции</span></a>\n        }\n        \n      </Menu>\n    );\n  }\n}\n\nexport default MenuAdmin;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Table.scss';\n\nconst TableHeader = ({ children }) => {\n  return (\n    <thead>\n      <tr className=\"table__header\">\n        {\n          children.map((cell, i) => <th key={i}>{cell}</th>)\n        }\n      </tr>\n    </thead>\n  );\n}\n\nconst TableRow = ({ children, key }) => {\n  return (\n    <tr className=\"table__row\">\n      {\n        children.map(cell => <td key={key}>{cell}</td>)\n      }\n    </tr>\n  );\n}\n\nclass Table extends PureComponent {\n\n  static Header = TableHeader;\n\n  static Row = TableRow;\n\n  render() {\n    const cls = cn(['table', this.props.className]);\n    return (\n      <table className={cls} id={this.props.idName}>\n        {this.props.children}\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  className: PropTypes.string,\n  idName: PropTypes.string,\n};\n\nexport default Table;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Pagination.scss';\n\nclass Pagination extends PureComponent {\n\n  getLabels(pageCount, currentPage) {\n    const labels = [];\n    const getLeftEdge = () => 1;\n\n    const getLeftInterval = () => {\n      if (pageCount > 2) {\n        return currentPage > 4 ? '...' : 2;\n      }\n      return null;\n    };\n\n    const getRightEdge = () => (pageCount > 1 ? pageCount : null);\n\n    const getRightInterval = () => {\n      if (pageCount > 3) {\n        return currentPage < pageCount - 3 ? '...' : pageCount - 1;\n      }\n      return null;\n    };\n\n    const getMiddleRow = () => {\n      if (pageCount > 4) {\n        if (currentPage === pageCount) return [pageCount - 2];\n        if (currentPage === 1 || currentPage === 2) return [3];\n        if (currentPage === 3 && pageCount !== 5) return [3, 4];\n        if (currentPage === 3) return [3];\n        if (currentPage === pageCount - 1) return [currentPage - 1];\n        if (currentPage === pageCount - 2) return [currentPage - 1, currentPage];\n        return [currentPage - 1, currentPage, currentPage + 1];\n      }\n      return null;\n    };\n\n    const leftEdge = getLeftEdge();\n    const leftInterval = getLeftInterval();\n    const middleRow = getMiddleRow();\n    const rightInterval = getRightInterval();\n    const rightEdge = getRightEdge();\n    labels.push(leftEdge);\n    if (leftInterval) {\n      labels.push(leftInterval);\n    }\n    if (middleRow) {\n      middleRow.forEach(value => labels.push(value));\n    }\n    if (rightInterval) {\n      labels.push(rightInterval);\n    }\n    if (rightEdge) {\n      labels.push(rightEdge);\n    }\n    return labels;\n  }\n\n\n  onChange = (page) => () => {\n    this.props.onChange(page);\n  }\n\n  onClickPrev = () => {\n    if (this.props.currentPage > 1) {\n      this.props.onChange(this.props.currentPage - 1);\n    }\n  }\n\n  onClickNext = () => {\n    if (this.props.currentPage < this.props.pagesCount) {\n      this.props.onChange(this.props.currentPage + 1);\n    }\n  }\n\n  render() {\n    const pages = this.getLabels(this.props.pagesCount, this.props.currentPage);\n    const prevCls = cn({\n      'pagination__arrow': true,\n      'pagination__arrow_left': true,\n      'pagination__arrow_disabled': this.props.currentPage === 1,\n    });\n    const nextCls = cn({\n      'pagination__arrow': true,\n      'pagination__arrow_right': true,\n      'pagination__arrow_disabled': this.props.currentPage === this.props.pagesCount,\n    });\n\n    return (\n      <div className=\"pagination\">\n        <div onClick={this.onClickPrev} className={prevCls}/>\n        {\n          pages.map((page, i) => {\n            const cls = cn({\n              'pagination__page': true,\n              'pagination__page_active': page === this.props.currentPage,\n            });\n            return (\n              <div\n                className={cls}\n                key={i}\n                onClick={this.onChange(page)}>\n                  {page}\n              </div>\n            );\n          })\n        }\n        <div onClick={this.onClickNext} className={nextCls}/>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  pagesCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '../Table/Table';\nimport Pagination from '../Pagination/Pagination';\n\nclass TableWithPagination extends PureComponent {\n\n  static defaultProps = {\n    className: '',\n    idName: '',\n    data: [],\n  }\n\n  state = {\n    isMobile: false,\n    currentPage: 1,\n    rowsPerPage: 10,\n  };\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  componentWillReceiveProps() {\n    this.setState({currentPage: 1})\n  }\n\n  onResize = () => {\n    const width = window.innerWidth;\n    if (!this.state.isMobile && width < 700) {\n      this.setState({isMobile: true});\n    } else if (this.state.isMobile && width >= 700) {\n      this.setState({ isMobile: false });\n    }\n  }\n\n  onChangePage = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  filterByPage = (items) => {\n    const start = (this.state.currentPage - 1) * this.state.rowsPerPage;\n    const end = start + this.state.rowsPerPage;\n    return items.slice(start, end)\n  }\n\n  render() {\n    const filteredData = this.filterByPage(this.props.data);\n    return (\n      <div>\n        { this.state.isMobile ?\n          <div className=\"mtable\">\n            {\n              filteredData.map((item, i) => (\n                <div className=\"mtable__row\" key={item.key || item.id || i}>\n                  <div className=\"mtable__header\">\n                    {this.props.header.map((item, i) => <div key={i}>{item}</div>)}\n                  </div>\n                  <div className=\"mtable__content\">\n                    {this.props.mappingFn(item, i).map(cell => <div>{cell}</div>)}\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n          :<Table className={this.props.className} idName={this.props.idName}>\n            <Table.Header>{this.props.header}</Table.Header>\n            <tbody>\n            {\n              filteredData.map((item, i) => (\n                <Table.Row key={item.key || item.id || i}>\n                  {this.props.mappingFn(item, i)}\n                </Table.Row>\n              ))\n            }\n            </tbody>\n          </Table>\n        }\n        {\n          this.props.data.length > this.state.rowsPerPage &&\n          <Pagination\n            pagesCount={Math.ceil(this.props.data.length / this.state.rowsPerPage)}\n            currentPage={this.state.currentPage}\n            onChange={this.onChangePage}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nTableWithPagination.propTypes = {\n  className: PropTypes.string,\n  idName: PropTypes.string,\n  header: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mappingFn: PropTypes.func.isRequired,\n  data: PropTypes.array,\n};\n\nexport default TableWithPagination;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Tooltip.scss';\n\nclass Tooltip extends PureComponent {\n  static defaultProps = {\n    leftOffset: '-5px'\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"tooltip\">\n        {this.props.children}\n        <div className=\"tooltip__content\" style={{marginLeft: this.props.leftOffset}}>{this.props.text}</div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired,\n  leftOffset: PropTypes.string,\n};\n\nexport default Tooltip;","import React from 'react';\nimport './LongText.scss';\n\nfunction LongText({ children }) {\n  return (\n    <div className=\"long-text\" title={children}>{children}</div>\n  );\n}\n\nexport default LongText;\n\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport InputMask from 'react-input-mask';\nimport './Input.scss';\n\nimport { validate } from '../../../utils/validation';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    name: 'input',\n    type: 'text',\n    value: '',\n    defaultValue: '',\n    placeholder: '',\n    onChange: () => { },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: false,\n      error: '',\n      isActivated: false,\n      errorIsHidden: true,\n    };\n  }\n  \n  componentDidMount() {\n    this.input.value = this.props.defaultValue;\n  }\n\n  onChange = () => {\n    const value = this.input.value;\n    const comparingValue = this.props.compareWith;\n    let {isValid, error} = validate(value, this.props.validationType);\n    if (comparingValue) {\n      if (value !== comparingValue) {\n        isValid = false;\n        error = 'Поля не совпадают';\n      }\n    }\n    this.setState({ isValid, error });\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      isValid,\n    })\n  }\n\n  onBlur = () => {\n    this.setState({isActivated: true, errorIsHidden: true});\n  }\n\n  onFocus = () => {\n    if (this.state.isActivated) {\n      this.setState({ errorIsHidden: false });\n    } else {\n      this.onChange();\n    }\n  }\n\n  shouldShowError = () => {\n    return !!this.props.validationType && !this.state.isValid && !this.state.errorIsHidden\n  }\n\n  render() {\n    this.props.compareWith && this.onChange();\n    const cn = classNames(\n      'input',\n      {'input__error': !this.state.isValid && this.state.isActivated},\n      { 'input__success': this.state.isValid && this.state.isActivated},\n    );\n    return (\n      <div className={this.props.icon ? `input-wrapper input-wrapper_${this.props.icon}`: null}>\n      {\n        this.props.mask ?\n        <InputMask\n          className={cn}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          value={this.props.value}\n          mask={this.props.mask}\n          placeholder={this.props.placeholder}\n          alwaysShowMask\n          inputRef={(el) => { this.input = el }}\n        />\n      \n      :<input\n        className={cn}\n        type={this.props.type}\n        name={this.props.name}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        value={this.props.value}\n        placeholder={this.props.placeholder}\n        ref={(el) => {this.input = el}}\n      />\n      }\n        {this.shouldShowError() && <div className=\"input__message\">{this.state.error}</div>}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  validationType: PropTypes.string,\n  compareWith: PropTypes.string,\n  defaultValue: PropTypes.string,\n};\n\nexport default Input;","export function validate (value, type) {\n  if (!type) return true;\n  if (type === 'login') {\n    const regexp = /^(?=.*[A-Za-z0-9]$)[A-Za-z][\\_A-Za-z\\d.-]{3,19}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Длина логина 4-20 символов. Можно использовать латинские буквы, цифры, тире, подчеркивание и точку' };\n  } else if (type === 'password') {\n    const regexp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,14}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Длина пароля 8-14 символов. Пароль должен содеражать заглавную и строчную буквы и цифру' };\n  } else if (type === 'required') {\n    if (value.length) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Заполните поле' };\n  } else if (type === 'phone') {\n    const regexp = /^\\+7 \\([0-9]{3}\\) [0-9]{3} - [0-9]{2} - [0-9]{2}$/;\n    if (regexp.test(value)) {\n      return { isValid: true };\n    }\n    return { isValid: false, error: 'Введите корректный номер телефона' };\n  }\n  console.error('Unknown validation type');\n}","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Index.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Агент', 'Количество клубов', 'Дата создания', ''];\n\nclass Index extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateAgents();\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-agent', { callback: this.props.updateAgents});\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (users) => {\n    return users.filter(user => user.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status, login) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка агента',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} агента? <br/><b>${login}</b></div>`,\n      callback: async () => {\n        let agent;\n        if (status === 'active') {\n          agent = await API.blockUser(id);\n        } else {\n          agent = await API.activateUser(id);\n        }\n        this.props.updateAgents();\n      }\n    });\n  }\n\n  editAgent = (id, name) => () => {\n    this.props.openPopup('edit-user', {\n      title: 'Редактировать агента',\n      login: name,\n      callback: async (login, password) => {\n        const response = await API.changeUser(id, login, password);\n        if (response.isOk) {\n          this.props.openPopup('alert', {\n            type: 'success',\n            title: 'Агент изменен',\n            text: 'Изменения успешно сохранены'\n          });\n          this.props.updateAgents();\n        } else {\n          let error = 'Произошла ошибка';\n          if (response.data.code === 6) {\n            error = 'Такой логин уже зарегистрирован';\n          }\n          this.props.openPopup('alert', {\n            type: 'error',\n            title: 'Ошибка',\n            text: error,\n          });\n        }\n      }\n    });\n  }\n\n  mappingFn = (agent, i) => {\n    const avaClass = cn(`header__avatar_${agent.avatar}`, 'header__avatar_min', 'header__avatar_agent');\n    return [\n      i + 1,\n      <div className={avaClass}>\n        <Link to={`${PAGE_URL.clubs}/${agent.id}`}><LongText>{agent.login}</LongText></Link>\n      </div>,\n      agent.clubsCount,\n      moment(agent.created).format('DD.MM.YYYY HH:mm:ss'),\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editAgent(agent.id, agent.login)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={agent.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(agent.id, agent.status, agent.login)} className={`button-lock ${agent.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.props.removeAgent(agent.id, agent.login)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    ]\n  }\n\n  render() {\n    const filteredAgents = this.filterBySearch(this.props.users);\n    return (\n      <div className=\"page page_index\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление агентами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени агента\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Добавить агента</span>\n          </button>\n        </div>\n        {\n          this.props.users.length\n          ? <TableWithPagination\n              className=\"agents\"\n              header={header}\n              mappingFn={this.mappingFn}\n              data={filteredAgents}\n            />\n          : <div className=\"empty-table\">Список агентов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Index;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Club.scss';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Акция', 'Описание', 'Дата добавления', ''];\n\nclass Club extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      club: {\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClub();\n  }\n\n  fetchClub = async () => {\n    const id = this.props.match.params.id;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onAddPromo = () => {\n    this.props.openPopup('add-promo', { id: this.state.club.id, callback: this.fetchClub});\n  }\n\n  removeClub = (id, name) => () => {\n    const cb = () => this.props.history.push('/');\n    this.props.removeClub(id, name, cb)();\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.setState({\n          club: {\n            ...this.state.club,\n            name: newName,\n          }\n        });\n        this.props.updateClubs(club)\n      }\n    });\n  }\n\n  editPromotion = (id, name, description) => () => {\n    this.props.openPopup('edit-promo', {\n      name,\n      description,\n      callback: async (newName, newDesc) => {\n        const isOk = await API.changePromotion({id, name: newName, description: newDesc});\n        if (isOk) {\n          const promotions = this.state.club.promotions.slice();\n          const promo = promotions.find(promo => promo.id === id);\n          promo.name = newName;\n          promo.description = newDesc;\n          this.setState({\n            club: {\n              ...this.state.club,\n              promotions,\n            }\n          });\n        }\n      }\n    });\n  }\n\n  toggleLockPromotion = (id, status, name) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка акции',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} акцию? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const newStatus = status === 'active' ? 'blocked' : 'active';\n        const isOk = await API.changePromotion({ id, status: newStatus });\n        if (isOk) {\n          const promotions = this.state.club.promotions.slice();\n          const promo = promotions.find(promo => promo.id === id);\n          promo.status = newStatus;\n          this.setState({\n            club: {\n              ...this.state.club,\n              promotions,\n            }\n          });\n        }\n      }\n    });\n  }\n\n  removePromotion = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление акции',\n      content: `<div>Вы действительно хотите удалить акцию? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.changePromotion({ id, status: 'removed' });\n        if (isRemoved) {\n          this.fetchClub();\n        }\n      }\n    });\n  }\n\n  mappingFn = (promo, i) => [\n    i + 1,\n    <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.promotion}/${promo.id}`}><LongText>{promo.name}</LongText></Link>,\n    <LongText>{promo.description}</LongText>,\n    moment(promo.created).format('DD.MM.YYYY HH:mm:ss'),\n    <div>\n      <Tooltip text='Изменить' leftOffset=\"-10px\">\n        <div onClick={this.editPromotion(promo.id, promo.name, promo.description)} className=\"button-edit\" />\n      </Tooltip>\n      <Tooltip text={promo.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n        <div onClick={this.toggleLockPromotion(promo.id, promo.status, promo.name)} className={`button-lock ${promo.status === 'blocked' ? 'button-lock_active' : ''}`} />\n      </Tooltip>\n      <Tooltip text='Удалить'>\n        <div onClick={this.removePromotion(promo.id, promo.name)} className=\"button-remove\" />\n      </Tooltip>\n    </div>\n  ]\n\n  render() {\n    const id = this.props.match.params.id;\n    const buttons = (\n      <div>\n        <Tooltip text='Изменить' leftOffset='5px'>\n          <div onClick={this.editClub(this.state.club.id, this.state.club.name)} className=\"button-edit button-edit_big\" />\n        </Tooltip>\n        <Tooltip text='Удалить' leftOffset='12px'>\n          <div onClick={this.removeClub(this.state.club.id, this.state.club.name)} className=\"button-remove button-remove_big\" />\n        </Tooltip>\n      </div>\n    );\n    return (\n      <div className=\"page page_club\">\n        <div className=\"unit-header unit-header_club\">\n          <div className=\"long-text\" style={{width: '80%'}}>Клуб - {this.state.club.name}</div>\n          <div className=\"unit-header__remove\">\n          {\n            this.state.club.status === 'removed'\n            ? <div className=\"removed-text\">Удален</div>\n            : buttons\n          }\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_club\">\n            <div className=\"unit-info__name\">Название клуба</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.club.name}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Адрес</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.club.address}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Количество клиентов</div>\n            <div className=\"unit-info__text\">{this.state.club.clientsCount}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.club.created).format('DD.MM.YYYY HH:mm:ss')}</div>\n          </div>\n        </div>\n        {Boolean(this.state.club.promotions.length) &&\n          <TableWithPagination \n            className=\"clubs\"\n            header={header}\n            mappingFn={this.mappingFn}\n            data={this.state.club.promotions}\n          />\n        }\n        {this.state.club.status !== 'removed' &&\n          <div className=\"button-wrapper\">\n            <button className=\"button\" type=\"button\" onClick={this.onAddPromo}>\n              <span className=\"button_add\">Создать акцию</span>\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nClub.propTypes = {\n\n};\n\nexport default Club;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport moment from 'moment';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Агент клуба', 'Дата создания', ''];\nconst headerRemoved = ['#', 'Клуб', 'Количество клиентов', 'Агент клуба', 'Дата создания', 'Дата удаления'];\n\nclass Clubs extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      status: 'active',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateClubs();\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.state.status !== props.status) {\n      this.props.updateClubs(null, props.status);\n      this.setState({status: props.status})\n    }\n  }\n\n  getClubs() {\n    const id = this.props.match.params.agentId;\n    if (!id) {\n      return this.props.clubs.filter(club => club.name.includes(this.state.search))\n    }\n    return this.props.clubs.filter(club => club.owner === id && club.name.includes(this.state.search) )\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  toggleLock = (id, status, name) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка клуба',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        let club;\n        if (status === 'active') {\n          club = await API.blockClub(id);\n        } else {\n          club = await API.activateClub(id);\n        }\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  mappingFn = (club, i) => {\n    let lastColumn = (\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editClub(club.id, club.name)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(club.id, club.status, club.name)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    );\n    if (this.props.status === 'removed') {\n      lastColumn = <div>{moment(club.removed).format('DD.MM.YYYY HH:mm:ss')}</div>;\n    }\n    const avaClass = cn(`header__avatar_${club.ownerName.avatar}`, 'header__avatar_min', 'header__avatar_agent');\n    return [\n      i + 1,\n      <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}><LongText>{club.name}</LongText></Link>,\n      club.clientsCount,\n      <div className={avaClass}><LongText>{club.ownerName.login}</LongText></div>,\n      moment(club.created).format('DD.MM.YYYY HH:mm:ss'),\n      lastColumn\n    ]\n  }\n\n  render() {\n    const clubs = this.getClubs();\n    const agentId = this.props.match.params.agentId;\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          {this.props.status === 'removed'\n            ? <div className=\"search-block__title search-block__title_red\">Удаленные клубы</div>\n            : <div className=\"search-block__title\">Управление клубами</div>\n          }\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          {\n            this.props.status !== 'removed'\n            ? <Link to={`${agentId ? agentId + '/' : ''}removed`}><button className=\"button button_remove button_red\">удаленные клубы</button></Link>\n            : <button onClick={this.props.history.goBack} className=\"button button_gray\">Вернуться назад</button>\n          }\n        </div>\n        {this.props.status === 'removed' && <div className=\"crossline\" />}\n        {\n          clubs.length\n            ? <TableWithPagination\n                className=\"clubsall\"\n                header={this.props.status === 'removed' ? headerRemoved : header}\n                mappingFn={this.mappingFn}\n                data={clubs}\n              />\n            : <div className=\"empty-table\">Список клубов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nClubs.propTypes = {\n  \n};\n\nexport default Clubs;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport moment from 'moment';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport LongText from '../UI/LongText/LongText';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\n\nconst header = ['#', 'Оператор', 'Клуб', 'Дата регистрации', ''];\n\nclass Operators extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      operators: [],\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.fetchOps();\n  }\n\n  fetchOps = async () => {\n    const clubId = this.props.match.params.id;\n    const operators = await API.getOperators(clubId);\n    if (operators) {\n      this.setState({ operators });\n    }\n  }\n\n  onAddOperator = () => {\n    const id = this.props.match.params.id;\n    this.props.openPopup('add-operator', { id, callback: this.fetchOps });\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value, currentPage: 1 });\n  }\n\n  filterBySearch = (ops) => {\n    return ops.filter(op => op.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status, login) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка оператора',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} оператора? <br/><b>${login}</b></div>`,\n      callback: async () => {\n        let operator;\n        if (status === 'active') {\n          operator = await API.blockUser(id);\n        } else {\n          operator = await API.activateUser(id);\n        }\n        if (operator) {\n          this.updateOperators(operator);\n        }\n      }\n    });\n  }\n\n  editOperator = (id, name) => () => {\n    this.props.openPopup('edit-user', {\n      title: 'Редактировать оператора',\n      login: name,\n      callback: async (login, password) => {\n        const response = await API.changeUser(id, login, password);\n        if (response.isOk) {\n          this.props.openPopup('alert', {\n            type: 'success',\n            title: 'Оператор изменен',\n            text: 'Изменения успешно сохранены'\n          });\n          this.updateOperators(response.data);\n        } else {\n          let error = 'Произошла ошибка';\n          if (response.data.code === 6) {\n            error = 'Такой логин уже зарегистрирован';\n          }\n          this.props.openPopup('alert', {\n            type: 'error',\n            title: 'Ошибка',\n            text: error,\n          });\n        }\n      }\n    });\n  }\n\n  updateOperators = (newOp) => {\n    const updatedOperators = this.state.operators.map(operator => operator.id === newOp.id ? {...operator, ...newOp} : operator);\n    this.setState({ operators: updatedOperators });\n  }\n\n  removeOperator = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление оператора',\n      content: `<div>Вы действительно хотите удалить оператора? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeOperator(id);\n        if (isRemoved) {\n          const updatedList = this.state.operators.filter(op => op.id !== id);\n          this.setState({ operators: updatedList });\n        }\n      }\n    });\n  }\n\n  mappingFn = (operator, i) => {\n    const avaClass = cn(`header__avatar_${operator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <div className={avaClass}><LongText>{operator.login}</LongText></div>,\n      <LongText>{operator.clubName}</LongText>,\n      moment(operator.created).format('DD.MM.YYYY HH:mm:ss'),\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editOperator(operator.id, operator.login)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text={operator.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n          <div onClick={this.toggleLock(operator.id, operator.status, operator.login)} className={`button-lock ${operator.status === 'blocked' ? 'button-lock_active' : ''}`} />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.removeOperator(operator.id, operator.login)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    ]\n  }\n\n  render() {\n    const opsWithFilter = this.filterBySearch(this.state.operators);\n    return (\n      <div className=\"page page_operators\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление операторами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени оператора\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.onAddOperator}>\n            <span className=\"button_add\">Добавить оператора</span>\n          </button>\n        </div>\n        {\n          this.state.operators.length\n            ? <TableWithPagination\n                className=\"clubs\"\n                header={header}\n                mappingFn={this.mappingFn}\n                data={opsWithFilter}\n              />\n            : <div className=\"empty-table\">Для клуба нет назначенных операторов</div>\n        }\n      </div>\n    );\n  }\n}\n\nOperators.propTypes = {\n  \n};\n\nexport default Operators;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport TableExport from 'tableexport';\nimport cn from 'classnames';\nimport './Clients.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Имя клиента', 'Телефон', 'Акции', 'Добавил', 'Дата регистрации', ''];\nconst headerRemoved = ['#', 'Имя клиента', 'Телефон', 'Акции', 'Добавил', 'Дата регистрации', 'Дата удаления'];\n\nclass Clients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: [],\n      search: '',\n      status: 'active',\n    };\n  }\n\n  tableId = 'datatable'\n\n  componentWillMount() {\n    this.fetchClients();\n  }\n\n  fetchClients = async () => {\n    const clubId = this.props.match.params.id;\n    const clients = await API.getClients(clubId);\n    if (clients) {\n      const status = clients[0] ? clients[0].status : 'active';\n      this.setState({clients, status});\n    }\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (clients) => {\n    return clients.filter(client => client.name.includes(this.state.search) || client.phone.includes(this.state.search) || client.creator.login.includes(this.state.search));\n  }\n\n  editClient = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клиента',\n      input: {\n        name: 'Имя клиента',\n        placeholder: 'Введите имя клиента',\n        value: name,\n        icon: 'login',\n      },\n      callback: async (newName) => {\n        const client = await API.changeClientName(id, newName);\n        this.updateClients(client);\n      }\n    });\n  }\n\n  updateClients = (newClient) => {\n    const updatedClients = this.state.clients.map(client => client.id === newClient.id ? newClient : client);\n    this.setState({ clients: updatedClients });\n  }\n\n  removeClient = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клиента',\n      content: `<div>Вы действительно хотите удалить клиента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClient(id);\n        if (isRemoved) {\n          const updatedClients = this.state.clients.filter(client => client.id !== id);\n          this.setState({ clients: updatedClients });\n        }\n      }\n    });\n  }\n\n  mappingFn = (client, i) => {\n    let lastColumn = (\n      <div>\n        <Tooltip text='Изменить' leftOffset=\"-10px\">\n          <div onClick={this.editClient(client.id, client.name)} className=\"button-edit\" />\n        </Tooltip>\n        <Tooltip text='Удалить'>\n          <div onClick={this.removeClient(client.id, client.name)} className=\"button-remove\" />\n        </Tooltip>\n      </div>\n    );\n    if (this.state.status === 'removed') {\n      lastColumn = <div>{moment(client.removed).format('DD.MM.YYYY HH:mm:ss')}</div>;\n    }\n    const avaClass = cn(`header__avatar_${client.creator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}/${client.id}`}><LongText>{client.name}</LongText></Link>,\n      client.phone,\n      client.promotions.length,\n      <div className={avaClass}><LongText>{client.creator.login}</LongText></div>,\n      moment(client.created).format('DD.MM.YYYY HH:mm:ss'),\n      lastColumn\n    ]\n  };\n\n  downloadClients = (type) => () => {\n    const date = moment().format('YYYY.MM.DD-HH_mm');\n    const table = TableExport(document.getElementById(this.tableId),\n      {\n        ignoreCols: [0, 6],\n        formats: [\"xls\", \"xlsx\", \"csv\"],\n        exportButtons: false,\n        filename: `clients_${date}`,\n        sheetname: \"clients\",\n      }\n    );\n    let data = table.getExportData();\n    data = type === 'xls' ? data[this.tableId].xlsx : data[this.tableId].csv;\n    table.export2file(data.data, data.mimeType, data.filename, data.fileExtension);\n  }\n\n  render() {\n    const filteredClients = this.filterBySearch(this.state.clients);\n    return (\n      <div className=\"page page_clients\">\n        <div className=\"search-block\">\n          {this.state.status === 'removed'\n            ? <div className=\"search-block__title search-block__title_red\">Удаленные клиенты {this.props.clubName}</div>\n            : <div className=\"search-block__title\"><LongText>Список Клиентов {this.props.clubName}</LongText></div>\n          }\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <div className=\"downloads\">\n            <button className=\"button-file button-file__xls\" onClick={this.downloadClients('xls')}></button>\n            <button className=\"button-file button-file__csv\" onClick={this.downloadClients('csv')}></button>\n          </div>\n        </div>\n        {this.state.status === 'removed' && <div className=\"crossline\" />}\n        {\n          this.state.clients.length\n            ? <TableWithPagination\n                className=\"clients\"\n                idName={this.tableId}\n                header={this.state.status === 'removed' ? headerRemoved : header}\n                mappingFn={this.mappingFn}\n                data={filteredClients}\n              />\n            : <div className=\"empty-table\">В клубе нет клиентов</div>\n        }\n      </div>\n    );\n  }\n}\n\nClients.propTypes = {\n  clubName: PropTypes.string.isRequired,\n};\n\nexport default Clients;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './Client.scss';\n\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Акция', 'Добавил', 'Дата'];\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: {\n        creator: {\n          login: '',\n          avatar: 0,\n        },\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClient();\n  }\n\n  fetchClient = async () => {\n    const id = this.props.match.params.clientId;\n    const client = await API.getClient(id);\n    if (client) {\n      this.setState({ client });\n    }\n  }\n\n  removeClient = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клиента',\n      content: `<div>Вы действительно хотите удалить клиента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClient(id);\n        if (isRemoved) {\n          this.props.history.goBack();\n        }\n      }\n    });\n  }\n\n  editClient = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клиента',\n      input: {\n        name: 'Имя клиента',\n        placeholder: 'Введите имя клиента',\n        icon: 'login',\n        value: name,\n      },\n      callback: async (newName) => {\n        const client = await API.changeClientName(id, newName);\n        this.setState({\n          client: {\n            ...this.state.client,\n            name: newName,\n          }\n        });\n      }\n    });\n  }\n\n  mappingFn = (promo, i) => {\n    const avaClass = cn(`header__avatar_${promo.creator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    const status = promo.status === 'removed' ? <span style={{color: '#ff6262', paddingLeft: '20px'}}>(удалена)</span> : '';\n    let promoName = <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.promotion}/${promo.id}`}><LongText>{promo.name}</LongText></Link>;\n    if (promo.status === 'removed') {\n      promoName = <LongText>{promo.name}</LongText>;\n    }\n    return [\n      <span>{i + 1}{status}</span>,\n      promoName,\n      <div className={avaClass}><LongText>{promo.creator.login}</LongText></div>,\n      moment(promo.date).format('DD.MM.YYYY HH:mm:ss')\n    ]\n  }\n\n  render() {\n    const buttons = (\n      <div>\n        <Tooltip text='Изменить' leftOffset='5px'>\n          <div onClick={this.editClient(this.state.client.id, this.state.client.name)} className=\"button-edit button-edit_big\" />\n        </Tooltip>\n        <Tooltip text='Удалить' leftOffset='12px'>\n          <div onClick={this.removeClient(this.state.client.id, this.state.client.name)} className=\"button-remove button-remove_big\" />\n        </Tooltip>\n      </div>\n    );\n    return (\n      <div className=\"page page_client\">\n        <div className=\"unit-header unit-header_client\">\n          <div className=\"long-text\" style={{ width: '80%' }}>Клиент - {this.state.client.name}</div>\n          <div className=\"unit-header__remove\">\n          {\n            this.state.client.status === 'removed'\n            ? <div className=\"removed-text\">Удален</div>\n            : buttons\n          }\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_username\">\n            <div className=\"unit-info__name\">Имя</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.client.name}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Телефон</div>\n            <div className=\"unit-info__text\">{this.state.client.phone}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Добавил</div>\n            <div className=\"unit-info__text\"><LongText>{this.state.client.creator.login}</LongText></div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.client.created).format('DD.MM.YYYY HH:mm:ss')}</div>\n          </div>\n        </div>\n        \n        {Boolean(this.state.client.promotions.length) &&\n          <TableWithPagination\n            className=\"clubs\"\n            header={header}\n            mappingFn={this.mappingFn}\n            data={this.state.client.promotions}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nClient.propTypes = {\n  \n};\n\nexport default Client;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom'\nimport './Breadcrumbs.scss';\n\nimport { parseURL } from '../../utils/url';\n\nclass Breadcrumbs extends PureComponent {\n\n  getLinks = ({page, clubId, url}) => {\n    const clubName = this.props.clubName;\n    const links = {\n      index: { text: 'Главная', url: '/' },\n      club: (id) => ({ text: `Клуб ${clubName}`, url: `/club/${id}/clients` }),\n      clubs: { text: `Клубы агента`, url },\n      clubsRemoved: { text: `Удаленные клубы агента`, url },\n      clubsAll: { text: `Клубы`, url },\n      clubsAllRemoved: { text: `Удаленные клубы`, url },\n      operators: (id) => ({ text: 'Управление операторами', url }),\n      clients: (id) => ({ text: 'Управление клиентами', url: `/club/${id}/clients` }),\n      client: (id) => ({ text: 'Клиент', url }),\n      promo: { text: `Акции клуба`, url },\n      singlePromo: { text: `Просмотр акции`, url },\n      promoLink: (id) => ({ text: 'Акции клуба', url: `/club/${id}` }),\n      agent: (clubId) => {\n        const agentId = this.props.getClubOwner(clubId);\n        return { text: `Клубы агента`, url: `/clubs/${agentId}` }\n      },\n    };\n\n    if (page === 'index') {\n      return [links.index];\n    }\n    if (page === 'clubsAll') {\n      return [links.index, links.clubsAll];\n    }\n    if (page === 'clubsAllRemoved') {\n      return [links.index, links.clubsAllRemoved];\n    }\n    if (page ==='clubs') {\n      return [links.index, links.clubs];\n    }\n    if (page === 'clubsRemoved') {\n      return [links.index, links.clubsRemoved];\n    }\n    if (page === 'club') {\n      return [links.index, links.club(clubId), links.promo];\n    }\n    if (page === 'promotion') {\n      return [links.index, links.club(clubId), links.promoLink(clubId), links.singlePromo];\n    }\n    if (page === 'operators') {\n      return [links.index, links.club(clubId), links.operators(clubId)];\n    }\n    if (page === 'clients' && this.props.user === 'agent') {\n      return [links.index, links.club(clubId)];\n    }\n    if (page === 'clients' && this.props.user === 'admin') {\n      return [links.index, links.agent(clubId), links.club(clubId)];\n    }\n    if (page === 'client') {\n      return [links.index, links.club(clubId), links.client(clubId)];\n    }\n    return [];\n  }\n\n  render() {\n    const currentPage = parseURL(document.location.pathname);\n    const links = this.getLinks(currentPage);\n    if (currentPage.clubId) {\n      this.props.setClubId(currentPage.clubId);\n    }\n    return (\n      <div className=\"breadcrumbs\">\n        {\n          links.map((link, i) => <NavLink exact to={link.url} key={i} className=\"breadcrumb\" activeClassName=\"breadcrumb_active\">{link.text}</NavLink>)\n        }\n      </div>\n    );\n  }\n}\n\nBreadcrumbs.propTypes = {\n  setClubId: PropTypes.func.isRequired,\n  clubName: PropTypes.string.isRequired,\n  user: PropTypes.oneOf(['admin', 'agent']),\n  getClubOwner: PropTypes.func,\n}\n\nexport default Breadcrumbs;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport LongText from '../UI/LongText/LongText';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\nimport { PAGE_URL } from '../../constants';\n\nconst header = ['#', 'Имя', 'Телефон', 'Добавил', 'Дата добавления'];\n\nclass Promotion extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: [],\n    };\n  }\n\n  componentWillMount() {\n    this.fetchPromotion();\n  }\n\n  fetchPromotion = async () => {\n    const id = this.props.match.params.promoId;\n    const promotion = await API.getPromotion(id);\n    if (promotion) {\n      const clients = this.preparedClients(promotion.clients, promotion.id);\n      this.setState({ ...promotion, clients });\n    }\n  }\n\n  editPromotion = (id, name, description) => () => {\n    this.props.openPopup('edit-promo', {\n      name,\n      description,\n      callback: async (newName, newDesc) => {\n        const isOk = await API.changePromotion({id, name: newName, description: newDesc});\n        if (isOk) {\n          this.setState({name: newName});\n        }\n      }\n    });\n  }\n\n  removePromotion = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление акции',\n      content: `<div>Вы действительно хотите удалить акцию? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.changePromotion({id, status: 'removed'});\n        if (isRemoved) {\n          this.props.history.push(`${PAGE_URL.club}/${this.props.match.params.id}`);\n        }\n      }\n    });\n  }\n\n  mappingFn = (client, i) => {\n    const avaClass = cn(`header__avatar_${client.creator.avatar}`, 'header__avatar_min', 'header__avatar_operator');\n    return [\n      i + 1,\n      <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}/${client.id}`}><LongText>{client.name}</LongText></Link>,\n      client.phone,\n      <div className={avaClass}><LongText>{client.creator.login}</LongText></div>,\n      moment(client.date).format('DD.MM.YYYY HH:mm:ss'),\n    ]\n  };\n\n  preparedClients = (clients, promoId) => {\n    const result = [];\n    clients.forEach( client => {\n      const promotions = client.promotions.filter( promo =>  promo.id === promoId).map( promo => ({creator: promo.creator, date: promo.date}));\n      promotions.forEach( (promo, i) => {\n        result.push({...client, ...promo, key: client.id + i});\n      })\n    });\n    return result;\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const buttons = (\n      <div>\n        <Tooltip text='Изменить' leftOffset='5px'>\n          <div onClick={this.editPromotion(this.state.id, this.state.name, this.state.description)} className=\"button-edit button-edit_big\" />\n        </Tooltip>\n        <Tooltip text='Удалить' leftOffset='12px'>\n          <div onClick={this.removePromotion(this.state.id, this.state.name)} className=\"button-remove button-remove_big\" />\n        </Tooltip>\n      </div>\n    );\n    return (\n      <div className=\"page page_club\">\n        <div className=\"unit-header unit-header_club\">\n          <div className=\"long-text\" style={{ width: '80%' }}>Акция - {this.state.name}</div>\n          <div className=\"unit-header__remove\">\n            {\n              this.state.status === 'removed'\n                ? <div className=\"removed-text\">Удалена</div>\n                : buttons\n            }\n          </div>\n        </div>\n        {Boolean(this.state.clients.length)\n          ? <TableWithPagination\n            className=\"clubs\"\n            header={header}\n            mappingFn={this.mappingFn}\n            data={this.state.clients}\n          />\n          : <div className=\"empty-table\">Нет клиентов участвующих в акции</div>\n        }\n      </div>\n    );\n  }\n}\n\nPromotion.propTypes = {\n  \n};\n\nexport default Promotion;","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport MenuAdmin from './components/MenuAdmin/MenuAdmin';\nimport Index from './components/Index/Index';\nimport Club from './components/Club/Club';\nimport Clubs from './components/Clubs/Clubs';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport Promotion from './components/Promotion/Promotion';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AdminRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agents: [],\n      clubs: [],\n      selectedClubId: null,\n      clubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchData();\n    }\n  }\n\n  fetchData = (status = 'active') => {\n    Promise.all([this.fetchClubs('all', status), this.fetchAgents()]).then((responses) => {\n      const clubs = responses[0];\n      const agents = responses[1];\n      const counters = {};\n      clubs.forEach(club => {\n        counters[club.owner] = counters[club.owner] ? counters[club.owner] + 1 : 1;\n      });\n      const updatedAgents = agents.map(agent => ({ ...agent, clubsCount: counters[agent.id] || 0 }));\n      const agentsNames = {};\n      agents.forEach(agent => {\n        agentsNames[agent.id] = {login: agent.login, avatar: agent.avatar};\n      });\n      const updatedClubs = clubs.map(club => ({...club, ownerName: agentsNames[club.owner]}));\n      this.setState({ agents: updatedAgents, clubs: updatedClubs }, () => {\n        if (this.state.selectedClubId) {\n          this.setClubName();\n        }\n      });\n    });\n  }\n\n  fetchAgents = async () => {\n    const agents = await API.getAgents();\n    return agents;\n  }\n\n  fetchClubs = async (id = 'all', status) => {\n    const clubs = await API.getClubs(id, status);\n    return clubs;\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({ clubName: club.name ? `(${club.name.substr(0, 50)})` : ''});\n  }\n\n  updateClubs = (newClub, status) => {\n    if (!newClub) {\n      this.fetchData(status);\n      return;\n    };\n    const updatedClubs = this.state.clubs.map(club => club.id === newClub.id ? {...club, ...newClub} : club);\n    this.setState({ clubs: updatedClubs }, this.setClubName);\n  }\n\n  updateAgents = () => {\n    this.fetchData();\n  }\n\n  removeClub = (id, name, cb) => async () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n          cb && cb();\n        }\n      }\n    });\n  }\n\n  removeAgent = (id, name) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление агента',\n      content: `<div>Вы действительно хотите удалить агента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeAgent(id);\n        if (isRemoved) {\n          const updatedAgents = this.state.agents.filter(agent => agent.id !== id);\n          this.setState({ agents: updatedAgents });\n        }\n      }\n    });\n  }\n\n  getClubOwner = (clubId) => {\n    const club = this.state.clubs.find( club => club.id === clubId);\n    return club ? club.owner : null;\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAdmin} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.clubName} user=\"admin\" getClubOwner={this.getClubOwner}/>} />\n        <Route path={PAGE_URL.index} exact render={(props) => <Index {...props} openPopup={this.props.openPopup} users={this.state.agents} updateAgents={this.updateAgents} removeAgent={this.removeAgent}/>} />\n        <Switch>\n          <Route path={`${PAGE_URL.clubs}/all`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"active\"/>} />\n          <Route path={`${PAGE_URL.clubs}/removed`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"removed\"/>} />\n          <Route path={`${PAGE_URL.clubs}/:agentId/removed`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"removed\"/>} />\n          <Route path={`${PAGE_URL.clubs}/:agentId`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub} status=\"active\"/>} />\n        </Switch>\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub} updateClubs={this.updateClubs}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.promotion}/:promoId`} exact render={(props) => <Promotion {...props} openPopup={this.props.openPopup} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup} clubName={this.state.clubName}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup} />} />\n      </div>\n    );\n  }\n}\n\nAdminRoutes.propTypes = {\n\n};\n\nexport default AdminRoutes;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAgent extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-client\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-client menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-promo\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-promo menu-tab_disabled\"><span>Акции</span></a>\n        }\n      </Menu>\n    );\n  }\n}\n\nexport default MenuAgent;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../Clubs/Clubs.scss';\n\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport LongText from '../UI/LongText/LongText';\nimport { PAGE_URL } from '../../constants';\nimport TableWithPagination from '../UI/TableWithPagination/TableWithPagination';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Дата регистрации', ''];\n\nclass IndexAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateClubs();\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-club', {callback: this.props.updateClubs});\n  }\n\n  onChangeInput = ({value}) => {\n    this.setState({search: value});\n  }\n\n  filterBySearch = (clubs) => {\n    return clubs.filter( club => club.name.includes(this.state.search) );\n  }\n\n  toggleLock = (id, status, name) => () => {\n    const action = status === 'active' ? 'заблокировать' : 'разблокировать';\n    this.props.openPopup('action-confirm', {\n      title: 'Блокировка клуба',\n      button: action,\n      content: `<div>Вы действительно хотите ${action} клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        let club;\n        if (status === 'active') {\n          club = await API.blockClub(id);\n        } else {\n          club = await API.activateClub(id);\n        }\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  editClub = (id, name) => () => {\n    this.props.openPopup('edit-name', {\n      title: 'Редактировать клуб',\n      input: {\n        name: 'Название клуба',\n        placeholder: 'Введите название клуба',\n        icon: 'club',\n        value: name,\n      },\n      callback: async (newName) => {\n        const club = await API.changeClubName(id, newName);\n        this.props.updateClubs(club);\n      }\n    });\n  }\n\n  mappingFn = (club, i) => [\n    i + 1,\n    <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}><LongText>{club.name}</LongText></Link>,\n    club.clientsCount,\n    moment(club.created).format('DD.MM.YYYY HH:mm:ss'),\n    <div>\n      <Tooltip text='Изменить' leftOffset=\"-10px\">\n        <div onClick={this.editClub(club.id, club.name)} className=\"button-edit\" />\n      </Tooltip>\n      <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n        <div onClick={this.toggleLock(club.id, club.status, club.name)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`} />\n      </Tooltip>\n      <Tooltip text='Удалить'>\n        <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\" />\n      </Tooltip>\n    </div>\n  ]\n\n  render() {\n    const filteredClubs = this.filterBySearch(this.props.clubs);\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление клубами</div>\n          <div className=\"search-block__input\">\n            <Input \n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput}/>\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Создать клуб</span>\n          </button>\n        </div>\n        {\n          this.props.clubs.length\n          ? <TableWithPagination\n              className=\"clubs\"\n              header={header}\n              mappingFn={this.mappingFn}\n              data={filteredClubs}\n            />\n            : <div className=\"empty-table\">Нет доступных клубов</div>\n        }\n      </div>\n    );\n  }\n}\n\nIndexAgent.propTypes = {\n\n};\n\nexport default IndexAgent;","import React, { PureComponent } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MenuAgent from './components/MenuAgent/MenuAgent';\nimport IndexAgent from './components/IndexAgent/IndexAgent';\nimport Club from './components/Club/Club';\nimport Promotion from './components/Promotion/Promotion';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AgentRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clubs: [],\n      selectedClubId: null,\n      selectedClubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClubs();\n    }\n  }\n\n  fetchClubs = async () => {\n    const clubs = await API.getClubs();\n    if (clubs) {\n      this.setState({ clubs }, this.setClubName);\n    }\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({\n      selectedClubName: club.name ? `(${club.name.substr(0, 50)})` : '',\n    });\n  }\n\n  updateClubs = (newClub) => {\n    if (!newClub) {\n      this.fetchClubs();\n      return;\n    };\n    const updatedClubs = this.state.clubs.map( club => club.id === newClub.id ? newClub : club);\n    this.setState({ clubs: updatedClubs }, this.setClubName);\n  }\n\n  removeClub = (id, name, cb) => () => {\n    this.props.openPopup('action-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n          cb && cb();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAgent} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.selectedClubName} user=\"agent\"/>}/>\n        <Route path={PAGE_URL.index} exact render={(props) => <IndexAgent {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub}/>} />\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub} updateClubs={this.updateClubs}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.promotion}/:promoId`} exact render={(props) => <Promotion {...props} openPopup={this.props.openPopup}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup} clubName={this.state.selectedClubName}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup}/>} />\n      </div>\n    );\n  }\n}\n\nAgentRoutes.propTypes = {\n  \n};\n\nexport default AgentRoutes;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './MenuOperator.scss';\n\nimport Menu from '../UI/Menu/Menu';\n\nclass MenuOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <Menu><span className=\"menu-operator__text\">Добавить клиента</span></Menu>\n    );\n  }\n}\n\nMenuOperator.propTypes = {\n  \n};\n\nexport default MenuOperator;","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport './IndexOperator.scss';\n\nimport Input from '../UI/Input/Input';\nimport MenuOperator from '../MenuOperator/MenuOperator';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nclass IndexOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promoName: 'Без акции',\n      promoId: '',\n      club: {\n        name: 'Клуб',\n        promotions: [],\n        status: '',\n      },\n      name: '',\n      nameIsValid: '',\n      phone: '',\n      phoneIsValid: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClub();\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  fetchClub = async () => {\n    const id = this.props.club;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onPromoSelect = ({value, label}) => {\n    this.setState({\n      promoId: value,\n      promoName: label,\n    })\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && this.state.phoneIsValid;\n  }\n\n  onSubmit = async () => {\n    const isExist = await API.clientIsExist({ phone: this.state.phone });\n    if (isExist) {\n      this.register();\n    } else {\n      this.sendCode();\n    }\n    \n  }\n\n  sendCode = () => {\n    this.props.openPopup('sms-confirm', { phone: this.state.phone, callback: this.register });\n  }\n\n  register = async (code) => {\n    const response = await API.createClient({\n      name: this.state.name,\n      phone: this.state.phone,\n      promotion: {\n        id: this.state.promoId,\n        name: this.state.promoName,\n      },\n      code,\n    });\n    if (response.isOk) {\n      if (response.data.status === 'promoted') {\n        this.props.openPopup('alert', { type: 'success', text: `Клиент <b>${this.state.name}</b> добавлен к акции <b>${this.state.promoName}</b>` });\n      } else {\n        this.props.openPopup('alert', { type: 'success', text: `Клиент <b>${this.state.name}</b> успешно зарегистрирован` });\n      }\n      this.setState({\n        promoName: 'Без акции',\n        promoId: '',\n        name: '',\n        nameIsValid: '',\n        phone: '',\n        phoneIsValid: '',\n      });\n    } else {\n      let text = 'Произошла ошибка';\n      let title = 'Ошибка';\n      let type = 'error';\n      if (response.data.code === 7) {\n        const { name, phone, created } = response.data.info;\n        title = 'Клиент уже зарегистрирован';\n        text = `Имя клиента - <b>${name}</b><br/>Номер телефона - <b>${phone}</b><br/>Дата регистрации - <b>${moment(created).format('DD.MM.YYYY HH:mm')}</b>`;\n        type = 'info';\n      } else if (response.data.code === 8) {\n        const { name, date } = response.data.info;\n        title = 'Клиент участвовал сегодня в этой акции';\n        text = `Название акции - <b>${name}</b><br/>Дата добавления - <b>${moment(date).format('DD.MM.YYYY HH:mm')}</b>`;\n        type = 'info';\n      } else if (response.data.code === 2) {\n        text = `Этой акции не существует`;\n        type = 'error';\n      } else if (response.data.code === 10) {\n        text = `Неверный код подтверждения`;\n        type = 'error';\n      }\n      this.props.openPopup('alert', { type, title, text });\n    }\n  }\n\n  render() {\n    if (!this.state.club.status) {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n        </div>\n      );\n    }\n    if (this.state.club.status !== 'active') {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n          <div className=\"operator-index__content\">\n            <div className=\"block-alert\">Клуб заблокирован!</div>\n          </div>\n        </div>\n      );\n    }\n\n    const options = this.state.club.promotions.map(promo => ({ value: promo.id, label: promo.name }));\n    options.unshift({ value: '', label: 'Без акции' });\n    const selectedOption = { value: this.state.promoId, label: this.state.promoName };\n    return (\n      <div className=\"page-container operator-index\">\n        <MenuOperator />\n        <div className=\"operator-index__content\">\n          <div className=\"pic\" />\n          <div className=\"inputs-wrapper\">\n            <div className=\"operator-index__title\">Заполните данные клиента</div>\n            <label className=\"label\">\n              <div>Имя</div>\n              <Input\n                name=\"name\"\n                icon=\"login\"\n                type=\"name\"\n                placeholder=\"Введите имя\"\n                validationType=\"required\"\n                value={this.state.name}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Телефон</div>\n              <Input\n                name=\"phone\"\n                icon=\"phone\"\n                mask=\"+7 (999) 999 - 99 - 99\"\n                placeholder=\"Введите телефон\"\n                validationType=\"phone\"\n                value={this.state.phone}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Акция</div>\n              <Select\n                className=\"select\"\n                classNamePrefix=\"select\"\n                isSearchable={false}\n                value={selectedOption}\n                onChange={this.onPromoSelect}\n                options={options}\n              />\n            </label>\n            <button className=\"button\" onClick={this.onSubmit} disabled={!this.isFormValid()}>Отправить</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndexOperator;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport './Login.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\nimport { setPageTitle } from '../../utils/url';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      errorMessage: '',\n    };\n  }\n\n  componentWillMount() {\n    setPageTitle();\n    if (this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid;\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n    const res = await API.login({\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (res.isOk) {\n      this.props.onLogin(res.data);\n      this.props.history.push(PAGE_URL.index);\n    } else {\n      let errorMessage = 'Ошибка авторизации';\n      if (res.data.code === 3) {\n        errorMessage = 'Неверный логин или пароль';\n      } else if (res.data.code === 9) {\n        errorMessage = 'Аккаунт заблокирован';\n      }\n      this.setState({ errorMessage });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-wrapper\">\n          <div className=\"login-block\">\n            <form className=\"login-panel\" onSubmit={this.login}>\n              <div className=\"header-block\">\n                <div className=\"header-block__logo\" />\n                <div className=\"header-block__title\">SlotAdmin<span>Система учета клиентов</span></div>\n              </div>\n              <div className=\"login-panel__header\">Вход в систему учета клиентов</div>\n              <label className=\"label\">\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  icon=\"login\"\n                  placeholder=\"Введите логин\"\n                  validationType=\"required\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label className=\"label\">\n                <div>Пароль</div>\n                <Input\n                  name=\"password\"\n                  icon=\"password\"\n                  type=\"password\"\n                  placeholder=\"Введите пароль\"\n                  validationType=\"required\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <div className={classNames('login-panel__error', { 'login-panel__error_show': this.state.errorMessage})}>\n                {this.state.errorMessage}\n              </div>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>Вход</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { PureComponent } from 'react';\nimport './Root.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Root extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  componentWillMount() {\n    this.checkIfRootExist();\n  }\n\n  checkIfRootExist = async () => {\n    const response = await API.hasRoot();\n    if (response.hasRoot) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({name, value, isValid}) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  createAccount = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'root',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.history.push(PAGE_URL.login);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"root-page\">\n        <div className=\"root-wrapper\">\n          <div className=\"root-block\">\n            <form className=\"root-panel\" onSubmit={this.createAccount}>\n              <div className=\"root-panel__header\">Создание администратора системы</div>\n              <label>\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  icon=\"login\"\n                  placeholder=\"Логин\"\n                  validationType=\"required\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Пароль</div>\n                <Input\n                  type=\"password\"\n                  icon=\"password\"\n                  name=\"password\"\n                  placeholder=\"Пароль\"\n                  validationType=\"required\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Повтор пароля</div>\n                <Input\n                  type=\"password\"\n                  icon=\"password\"\n                  name=\"repeatPassword\"\n                  placeholder=\"Пароль\"\n                  validationType=\"required\"\n                  value={this.state.repeatPassword}\n                  compareWith={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>Создать</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Root;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addAgent = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'agent',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', {type: 'success', text: `Агент <b>${this.state.login}</b> успешно добавлен`});\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить агента</div>\n        <form onSubmit={this.addAgent}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddAgent;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddClub extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      address: '',\n      addressIsValid: false,\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && \n      this.state.addressIsValid && \n      this.state.loginIsValid && \n      this.state.passwordIsValid && \n      this.state.repeatPasswordIsValid;\n  }\n\n  addClub = async (e) => {\n    e.preventDefault();\n    const response = await API.createClub({\n      name: this.state.name,\n      address: this.state.address,\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Клуб <b>${this.state.name}</b> успешно создан` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-club\">\n        <div className=\"popup-content__title\">Создать клуб</div>\n        <form onSubmit={this.addClub}>\n          <label className=\"label\">\n            <div>Название клуба</div>\n            <Input\n              name=\"name\"\n              icon=\"club\"\n              placeholder=\"Введите название\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Адрес</div>\n            <Input\n              name=\"address\"\n              icon=\"location\"\n              placeholder=\"Введите адрес\"\n              validationType=\"required\"\n              value={this.state.address}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <br className=\"stub\"/>\n          <br className=\"stub\"/>\n          <div className=\"popup-content__title\">Создать оператора клуба</div>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Создать</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddClub;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddPromo extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      desc: '',\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  onChangeTextarea = ({ target }) => {\n    this.setState({desc: target.value});\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid;\n  }\n\n  addPromo = async (e) => {\n    e.preventDefault();\n    const clubId = this.props.data.id;\n    const response = await API.createPromotion(clubId, {\n      name: this.state.name,\n      description: this.state.desc,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Акция <b>${this.state.name}</b> успешно добавлена` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      this.props.openPopup('alert', { type: 'error', text: response.data.message });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Создать акцию</div>\n        <form onSubmit={this.addPromo}>\n          <label className=\"label\">\n            <div>Название</div>\n            <Input\n              name=\"name\"\n              icon=\"promo\"\n              placeholder=\"Введите название\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Описание</div>\n            <div className=\"textarea-icon textarea-icon__text\">\n              <textarea\n                className=\"textarea\"\n                name=\"desc\"\n                placeholder=\"Введите описание\"\n                value={this.state.desc}\n                onChange={this.onChangeTextarea}\n              />\n            </div>\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPromo;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addOperator = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'operator',\n      login: this.state.login,\n      password: this.state.password,\n      clubId: this.props.data.id,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Оператор <b>${this.state.login}</b> успешно добавлен` });\n      this.props.data.callback();\n      this.props.close(1);\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить оператора</div>\n        <form onSubmit={this.addOperator}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddOperator;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RemoveConfirm extends PureComponent {\n\n  onAccept = () => {\n    this.props.data.callback();\n    this.props.close();\n  }\n\n  render() {\n    const { title, content, button } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        {content &&\n          <div className=\"popup_alert__alert\">\n            <span className=\"popup_confirm__remove-content\" dangerouslySetInnerHTML={{ __html: content }} />\n          </div>\n        }\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>{button || 'Удалить'}</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRemoveConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n    button: PropTypes.string,\n  })\n};\n\nexport default RemoveConfirm;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SmsConfirm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n    };\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.code);\n    setTimeout(() => this.props.close(1), 100);\n  }\n\n  onChangeInput = ({target}) => {\n    this.setState({code: target.value});\n  }\n\n  render() {\n    const { phone } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\">SMS отправлено</div>\n        <div className=\"popup_confirm__content\">\n          Сообщение отправлено на номер\n          <div className=\"popup_confirm__phone\">{phone}</div>\n          <div className=\"popup_confirm__code\">\n            <span>Код подтверждения</span>\n            <input className=\"input\" maxLength=\"4\" value={this.state.code} onChange={this.onChangeInput} />\n          </div>\n        </div>\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>Подтвердить</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSmsConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    phone: PropTypes.string.isRequired,\n  })\n};\n\nexport default SmsConfirm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends Component {\n  static defaultProps = {\n    data: {\n      type: 'success',\n      text: 'success',\n      title: '',\n    }\n  }\n\n  render() {\n    const {type, text, title} = this.props.data;\n    return (\n      <div className=\"popup-content popup_alert\">\n        {title && <div className=\"popup_alert__title\">{title}</div>}\n        <div className={`popup_alert__alert popup_alert__alert_${type}`}>\n          <span className=\"popup_alert__msg\" dangerouslySetInnerHTML={{__html: text}}/>\n        </div>\n        <button className=\"button\" onClick={this.props.close}>Закрыть</button>\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    type: PropTypes.oneOf(['success', 'error', 'info']).isRequired,\n    text: PropTypes.string.isRequired,\n    title: PropTypes.string,\n  })\n};\n\nexport default Alert;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../../UI/Input/Input';\n\nclass EditName extends PureComponent {\n\n  state = {\n    value: '',\n    isValid: true,\n  }\n\n  onChangeInput = ({value, isValid}) => {\n    this.setState({ value, isValid });\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.value);\n    this.props.close();\n  }\n\n  render() {\n    const { title, input } = this.props.data;\n    return (\n      <div className=\"popup-content popup_edit-name\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        <label className=\"label\">\n          <div>{input.name}</div>\n          <Input\n            name=\"input\"\n            icon={input.icon}\n            placeholder={input.placeholder}\n            validationType=\"required\"\n            defaultValue={input.value}\n            value={this.state.value}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <button className=\"button\" onClick={this.onAccept} disabled={!this.state.isValid}>Изменить</button>\n      </div>\n    );\n  }\n}\n\nEditName.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    input: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      placeholder: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      icon: PropTypes.string.isRequired,\n    })\n  })\n};\n\nexport default EditName;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../../UI/Input/Input';\n\nclass EditUser extends PureComponent {\n\n  state = {\n    login: '',\n    loginIsValid: false,\n    password: '',\n    passwordIsValid: false,\n    repeatPassword: '',\n    repeatPasswordIsValid: false,\n  };\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  onAccept = () => {\n    this.props.close();\n    this.props.data.callback(this.state.login, this.state.password);\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  render() {\n    const { title, login } = this.props.data;\n    return (\n      <div className=\"popup-content popup_edit-user\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        <label className=\"label\">\n          <div>Логин</div>\n          <Input\n            name=\"login\"\n            icon=\"login\"\n            placeholder=\"Введите логин\"\n            validationType=\"login\"\n            defaultValue={login}\n            value={this.state.login}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <label className=\"label\">\n          <div>Пароль</div>\n          <Input\n            name=\"password\"\n            icon=\"password\"\n            type=\"password\"\n            placeholder=\"Введите пароль\"\n            validationType=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <label className=\"label\">\n          <div>Повтор пароля</div>\n          <Input\n            name=\"repeatPassword\"\n            icon=\"password\"\n            type=\"password\"\n            placeholder=\"Повторите пароль\"\n            validationType=\"password\"\n            value={this.state.repeatPassword}\n            compareWith={this.state.password}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <button className=\"button\" onClick={this.onAccept} disabled={!this.isFormValid()}>Изменить</button>\n      </div>\n    );\n  }\n}\n\nEditUser.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string.isRequired,\n  })\n};\n\nexport default EditUser;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../../UI/Input/Input';\n\nclass EditPromo extends PureComponent {\n\n  state = {\n    name: this.props.data.name,\n    nameIsValid: true,\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid;\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.name, this.area.value);\n    this.props.close();\n  }\n\n  render() {\n    const { name, description } = this.props.data;\n    return (\n      <div className=\"popup-content popup_edit-promo\">\n        <div className=\"popup-content__title\">Редактировать акцию</div>\n        <label className=\"label\">\n          <div>Название</div>\n          <Input\n            name=\"name\"\n            icon=\"promo\"\n            placeholder=\"Введите название\"\n            validationType=\"required\"\n            defaultValue={name}\n            value={this.state.name}\n            onChange={this.onChangeInput}\n          />\n        </label>\n        <label className=\"label\">\n          <div>Описание</div>\n          <div className=\"textarea-icon textarea-icon__text\">\n            <textarea\n              className=\"textarea\"\n              name=\"desc\"\n              placeholder=\"Введите описание\"\n              defaultValue={description}\n              ref={el => this.area = el}\n            />\n          </div>\n        </label>\n        <button className=\"button\" onClick={this.onAccept} disabled={!this.isFormValid()}>Изменить</button>\n      </div>\n    );\n  }\n}\n\nEditPromo.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  })\n};\n\nexport default EditPromo;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './Popup.scss';\n\nimport AddAgent from './popups/AddAgent';\nimport AddClub from './popups/AddClub';\nimport AddPromo from './popups/AddPromo';\nimport AddOperator from './popups/AddOperator';\nimport ActionConfirm from './popups/ActionConfirm';\nimport SmsConfirm from './popups/SmsConfirm';\nimport Alert from './popups/Alert';\nimport EditName from './popups/EditName';\nimport EditUser from './popups/EditUser';\nimport EditPromo from './popups/EditPromo';\n\nclass Popup extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  preventClosing = (e) => {\n    e.stopPropagation();\n  }\n\n  onPressEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  render() {\n    if (!this.props.isOpen) {\n      document.removeEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'auto';\n    } else {\n      document.addEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'hidden';\n    }\n\n    let content;\n    const props = {\n      data: this.props.data,\n      openPopup: this.props.open,\n      close: this.props.close,\n    }\n    if (this.props.name === 'add-agent') {\n      content = <AddAgent {...props}/>\n    } else if (this.props.name === 'alert') {\n      content = <Alert {...props}/>\n    } else if (this.props.name === 'add-club') {\n      content = <AddClub {...props}/>\n    } else if(this.props.name === 'add-promo') {\n      content = <AddPromo {...props}/>\n    } else if (this.props.name === 'add-operator') {\n      content = <AddOperator {...props}/>\n    } else if (this.props.name === 'action-confirm') {\n      content = <ActionConfirm {...props}/>\n    } else if (this.props.name === 'sms-confirm') {\n      content = <SmsConfirm {...props}/>\n    } else if (this.props.name === 'edit-name') {\n      content = <EditName {...props}/>\n    } else if (this.props.name === 'edit-user') {\n      content = <EditUser {...props}/>\n    } else if (this.props.name === 'edit-promo') {\n      content = <EditPromo {...props} />\n    }\n\n    const cantClose = this.props.name === 'alert' || this.props.name === 'sms-confirm';\n    return (\n      <ReactCSSTransitionGroup\n        transitionName=\"showpopup\"\n        transitionEnterTimeout={200}\n        transitionLeaveTimeout={150}>\n        {\n          this.props.isOpen && \n          <div className=\"popup-wrapper\" onClick={cantClose ? null : this.props.close}>\n            <div className=\"popup-block\">\n              <div className=\"content-wrapper\" onClick={this.preventClosing}>\n                {!cantClose && <div className=\"close-btn\" onClick={this.props.close} />}\n                {content}\n              </div>\n            </div>\n          </div>\n        }\n      </ReactCSSTransitionGroup>\n      \n    );\n  }\n}\n\nPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Popup;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\n\nimport { PAGE_URL } from './constants';\nimport Header from './components/Header/Header';\nimport AdminRoutes from './AdminRoutes';\nimport AgentRoutes from './AgentRoutes';\nimport IndexOperator from './components/IndexOperator/IndexOperator';\nimport Login from './components/Login/Login';\nimport Root from './components/Root/Root';\nimport Popup from './components/Popup/Popup';\n\nclass App extends Component {\n  state = {\n    popupIsOpen: false,\n    popupName: '',\n    popupData: null,\n    secondPopupIsOpen: false,\n    secondPopupName: '',\n    secondPopupData: null,\n    userName: '',\n    userRole: '',\n    userClub: '',\n    userAvatar: '',\n    hasAuth: false,\n  }\n\n  componentWillMount() {\n    const storedData = sessionStorage.getItem('user');\n    if (storedData) {\n      const user = JSON.parse(storedData);\n      this.setState(user);\n    }\n  }\n\n  saveUser = () => {\n    const user = {\n      userName: this.state.userName,\n      userRole: this.state.userRole,\n      userClub: this.state.userClub,\n      hasAuth: this.state.hasAuth,\n      userAvatar: this.state.userAvatar,\n    }\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  openPopup = (popupName, data) => {\n    if (this.state.popupIsOpen) {\n      this.setState({\n        secondPopupIsOpen: true,\n        secondPopupName: popupName,\n        secondPopupData: data,\n      });\n    } else {\n      this.setState({\n        popupIsOpen: true,\n        popupName,\n        popupData: data,\n      });\n    }\n  }\n\n  closePopup = (popupNumber) => {\n    if (this.state.secondPopupIsOpen && popupNumber !== 1) {\n      this.setState({\n        secondPopupIsOpen: false\n      });\n    } else {\n      this.setState({\n        popupIsOpen: false\n      });\n    }\n  }\n\n  onLogin = (user) => {\n    this.setState({\n      userName: user.login,\n      userRole: user.role,\n      userClub: user.clubId,\n      userAvatar: user.avatar,\n      hasAuth: true,\n    }, this.saveUser);\n  }\n\n  onLogout = () => {\n    this.openPopup('action-confirm', {\n      title: 'Выйти из системы учета клиентов?',\n      button: 'Выйти',\n      callback: this.logout,\n    });\n  }\n\n  logout = () => {\n    this.setState({\n      userName: '',\n      userRole: '',\n      userClub: '',\n      userAvatar: '',\n      hasAuth: false,\n    }, this.saveUser);\n  }\n\n  render() {\n    let routesByRole;\n    if (this.state.userRole === 'operator') {\n      routesByRole = (\n        <Route \n          path={PAGE_URL.index}\n          render={(props) => \n            <IndexOperator\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n              club={this.state.userClub}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'agent') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AgentRoutes\n              {...props}\n              hasAuth={this.state.hasAuth}\n              openPopup={this.openPopup}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'root') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AdminRoutes\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n            />\n          }\n        />\n      );\n    } else {\n      routesByRole = <Redirect to={PAGE_URL.login} />;\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <Route path={PAGE_URL.login} exact render={(props) => <Login {...props} onLogin={this.onLogin} hasAuth={this.state.hasAuth} />} />\n          <Route path={PAGE_URL.root} exact component={Root} />\n          <Route children={(props) =>\n            <>\n              <Header\n                {...props}\n                role={this.state.userRole}\n                name={this.state.userName}\n                avatar={this.state.userAvatar}\n                onLogout={this.onLogout}\n                openPopup={this.openPopup}\n              />\n              {routesByRole}\n              <Popup\n                {...props}\n                isOpen={this.state.popupIsOpen}\n                name={this.state.popupName}\n                data={this.state.popupData}\n                open={this.openPopup}\n                close={this.closePopup}\n              />\n              <Popup\n                {...props}\n                isOpen={this.state.secondPopupIsOpen}\n                name={this.state.secondPopupName}\n                data={this.state.secondPopupData}\n                open={this.openPopup}\n                close={this.closePopup}\n              />\n            </>\n          }/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}