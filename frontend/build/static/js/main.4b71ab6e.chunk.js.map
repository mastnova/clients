{"version":3,"sources":["constants.js","components/Header/Header.jsx","components/UI/Menu/Menu.jsx","components/MenuAdmin/MenuAdmin.jsx","components/UI/Table/Table.jsx","components/UI/Tooltip/Tooltip.jsx","components/UI/Input/Input.jsx","utils/validation.js","API.js","components/Index/Index.jsx","components/Club/Club.jsx","components/Clubs/Clubs.jsx","components/Operators/Operators.jsx","components/Clients/Clients.jsx","components/Client/Client.jsx","components/Breadcrumbs/Breadcrumbs.jsx","AdminRoutes.jsx","components/MenuAgent/MenuAgent.jsx","components/IndexAgent/IndexAgent.jsx","AgentRoutes.jsx","components/MenuOperator/MenuOperator.jsx","components/IndexOperator/IndexOperator.jsx","components/Login/Login.jsx","components/Root/Root.jsx","components/Popup/popups/AddAgent.jsx","components/Popup/popups/AddClub.jsx","components/Popup/popups/AddPromo.jsx","components/Popup/popups/AddOperator.jsx","components/Popup/popups/RemoveConfirm.jsx","components/Popup/popups/SmsConfirm.jsx","components/Popup/popups/Alert.jsx","components/Popup/Popup.jsx","App.jsx","serviceWorker.js","index.js"],"names":["PAGE_URL","index","login","root","clients","client","club","clubs","operators","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","role","avaClass","cn","header__avatar","header__avatar_operator","header__avatar_agent","header__avatar_admin","react_default","a","createElement","className","Link","to","name","onClick","onLogout","PureComponent","Menu","_ref","children","MenuAdmin","UI_Menu_Menu","NavLink","exact","activeClassName","concat","match","params","id","Table","cls","map","cell","i","key","Row","_ref2","Tooltip","style","marginLeft","leftOffset","text","defaultProps","Input","onChange","value","input","comparingValue","compareWith","isValid","type","length","console","error","isInputValid","validationType","setState","onBlur","isActivated","_this2","classNames","input__error","input__success","icon","placeholder","ref","el","API","hasRoot","method","url","createUser","changeUserStatus","getAgents","removeAgent","getClients","getClient","createClient","removeClient","clientIsExist","createClub","getClubs","getClub","removeClub","changeClubStatus","getOperators","removeOperator","createPromotion","request","_callee","data","response","body","_args","arguments","regenerator_default","wrap","_context","prev","next","undefined","headers","Headers","Content-Type","JSON","stringify","fetch","sent","json","t0","abrupt","isOk","status","message","code","sessionStorage","clear","document","location","stop","_callee2","_context2","_callee3","user","_context3","_callee4","logPass","_context4","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","is_exist","_callee12","_context12","_callee13","_args13","_context13","_callee14","_context14","_callee15","_context15","_callee16","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","clubId","_context21","_callee22","_context22","_callee23","promo","_context23","src_API","blockClub","activateClub","blockUser","removeUser","activateUser","header","Index","showPopup","openPopup","callback","updateAgents","onChangeInput","search","filterBySearch","users","filter","includes","toggleLock","asyncToGenerator","mark","filteredAgents","UI_Input_Input","UI_Table_Table","agent","clientsCount","moment","created","format","UI_Tooltip_Tooltip","Club","fetchClub","onAddPromo","history","push","promotions","address","Boolean","description","Clubs","updateClubs","agentId","owner","_this3","ownerName","Operators","fetchOps","onAddOperator","ops","op","operator","updatedOps","title","content","_callback","updatedList","apply","filteredOperators","Clients","fetchClients","phone","creator","updatedClients","filteredClients","Component","Client","fetchClient","clientId","goBack","date","schemas","Agent","regexp","Breadcrumbs","parseURL","test","substr","setClubId","page","find","getLinks","clubName","links","clubsAll","currentPage","pathname","link","AdminRoutes","fetchData","Promise","all","fetchClubs","fetchAgents","then","responses","agents","counters","forEach","updatedAgents","objectSpread","agentsNames","updatedClubs","selectedClubId","setClubName","_args2","newClub","_callback2","hasAuth","Route","path","component","render","components_Breadcrumbs_Breadcrumbs","assign","components_Index_Index","Switch","components_Clubs_Clubs","components_Club_Club","components_Operators_Operators","components_Clients_Clients","components_Client_Client","MenuAgent","IndexAgent","filteredClubs","AgentRoutes","selectedClubName","components_IndexAgent_IndexAgent","MenuOperator","IndexOperator","_this$setState","defineProperty","onPromoSelect","_ref3","target","promoId","promoName","options","selectedIndex","isFormValid","nameIsValid","phoneIsValid","onSubmit","register","sendCode","_ref5","promotion","_x","components_MenuOperator_MenuOperator","disabled","Login","loginIsValid","passwordIsValid","e","res","errorMessage","preventDefault","password","onLogin","login-panel__error_show","Root","checkIfRootExist","repeatPasswordIsValid","createAccount","repeatPassword","AddAgent","addAgent","AddClub","addressIsValid","addClub","AddPromo","onChangeTextarea","desc","addPromo","AddOperator","addOperator","RemoveConfirm","onAccept","close","_this$props$data","dangerouslySetInnerHTML","__html","SmsConfirm","Alert","Popup","preventClosing","stopPropagation","onPressEsc","isOpen","addEventListener","getElementsByTagName","overflow","removeEventListener","popups_AddAgent","open","popups_Alert","popups_AddClub","popups_AddPromo","popups_AddOperator","popups_RemoveConfirm","popups_SmsConfirm","cantClose","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","App","popupIsOpen","popupName","popupData","userName","userRole","userClub","saveUser","setItem","closePopup","storedData","getItem","parse","routesByRole","components_IndexOperator_IndexOperator","src_AgentRoutes","src_AdminRoutes","Redirect","BrowserRouter","components_Login_Login","Fragment","components_Header_Header","components_Popup_Popup","window","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b71ab6e.chunk.js","sourcesContent":["export const PAGE_URL = {\n  index: '/',\n  login: '/login',\n  root: '/root',\n  clients: '/clients',\n  client: '/client',\n  club: '/club',\n  clubs: '/clubs',\n  operators: '/operators',\n}","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nclass Header extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  componentWillMount() {\n    \n  }\n\n  render() {\n    const {role} = this.props;\n    const avaClass = cn({\n      'header__avatar': true,\n      'header__avatar_operator': role === 'operator',\n      'header__avatar_agent': role === 'agent',\n      'header__avatar_admin': role === 'root',\n    });\n    return (\n      <div className=\"header\">\n        <div className=\"header__content\">\n          <Link to={'/'} className=\"header__logo\">\n            <div className=\"header__pic\" />\n            <div className=\"header__title\">SlotAdmin<span>Система учета клиентов</span></div>\n          </Link>\n          <div className=\"header__user\">\n            <span className=\"header__username\">{this.props.name}</span>\n            <div className={avaClass}/>\n            <div className=\"header__exit\" onClick={this.props.onLogout}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  \n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Menu.scss';\n\nfunction Menu({children}) {\n  return (\n    <div className=\"menu\">\n      <div className=\"menu__content\">{children}</div>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  \n};\n\nexport default Menu;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAdmin extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Агенты</span></NavLink>\n        <NavLink exact to={`${PAGE_URL.clubs}/all`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Акции</span></a>\n        }\n        \n      </Menu>\n    );\n  }\n}\n\nexport default MenuAdmin;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Table.scss';\n\nconst TableHeader = ({ children }) => {\n  return (\n    <thead>\n      <tr className=\"table__header\">\n        {\n          children.map((cell, i) => <th key={i}>{cell}</th>)\n        }\n      </tr>\n    </thead>\n  );\n}\n\nconst TableRow = ({ children, key }) => {\n  return (\n    <tr className=\"table__row\">\n      {\n        children.map(cell => <td key={key}>{cell}</td>)\n      }\n    </tr>\n  );\n}\n\nclass Table extends PureComponent {\n\n  static Header = TableHeader;\n\n  static Row = TableRow;\n\n  render() {\n    const cls = cn(['table', this.props.className]);\n    return (\n      <table className={cls}>\n        {this.props.children}\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  className: PropTypes.string,\n};\n\n\n\nexport default Table;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Tooltip.scss';\n\nclass Tooltip extends PureComponent {\n  static defaultProps = {\n    leftOffset: '-5px'\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"tooltip\">\n        {this.props.children}\n        <div className=\"tooltip__content\" style={{marginLeft: this.props.leftOffset}}>{this.props.text}</div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired,\n  leftOffset: PropTypes.string,\n};\n\nexport default Tooltip;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Input.scss';\n\nimport { isValid as isInputValid } from '../../../utils/validation';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    name: 'input',\n    type: 'text',\n    value: '',\n    placeholder: '',\n    onChange: () => { },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: false,\n      isActivated: false,\n    };\n  }\n\n  onChange = () => {\n    const value = this.input.value;\n    const comparingValue = this.props.compareWith;\n    let isValid = isInputValid(value, this.props.validationType);\n    if (comparingValue) {\n      isValid = value === comparingValue ? isValid : false\n    }\n    this.setState({isValid});\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      isValid,\n    })\n  }\n\n  onBlur = () => {\n    this.setState({isActivated: true});\n  }\n\n  render() {\n    this.props.compareWith && this.onChange();\n    const cn = classNames(\n      'input',\n      {'input__error': !this.state.isValid && this.state.isActivated},\n      { 'input__success': this.state.isValid && this.state.isActivated},\n    );\n    return (\n      <div className={this.props.icon ? `input-wrapper input-wrapper_${this.props.icon}`: null}>\n      <input\n        className={cn}\n        type={this.props.type}\n        name={this.props.name}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        value={this.props.value}\n        placeholder={this.props.placeholder}\n        ref={(el) => {this.input = el}}\n      />\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  validationType: PropTypes.string,\n  compareWith: PropTypes.string,\n};\n\nexport default Input;","export function isValid (value, type) {\n  if (!type) return true;\n  if (type === 'login') {\n    if (value.length) {\n      return true;\n    }\n    return false;\n  } else if (type === 'password') {\n    if (value.length > 1) {\n      return true;\n    }\n    return false;\n  } else if (type === 'required') {\n    if (value.length) {\n      return true;\n    }\n    return false;\n  }\n  console.error('Unknown validation type');\n}","import { PAGE_URL } from './constants';\n\nconst API = {\n  hasRoot: {\n    method: 'GET',\n    url: '/api/root',\n  },\n  createUser: {\n    method: 'POST',\n    url: '/api/user',\n  },\n  login: {\n    method: 'POST',\n    url: '/api/login',\n  },\n  changeUserStatus: {\n    method: 'PUT',\n    url: '/api/user',\n  },\n  getAgents: {\n    method: 'GET',\n    url: '/api/agents',\n  },\n  removeAgent: {\n    method: 'DELETE',\n    url: '/api/agent/',\n  },\n  getClients: {\n    method: 'GET',\n    url: '/api/clients/',\n  },\n  getClient: {\n    method: 'GET',\n    url: '/api/client/',\n  },\n  createClient: {\n    method: 'POST',\n    url: '/api/client',\n  },\n  removeClient: {\n    method: 'PUT',\n    url: '/api/client',\n  },\n  clientIsExist: {\n    method: 'POST',\n    url: '/api/client/is_exist',\n  },\n  createClub: {\n    method: 'POST',\n    url: '/api/club',\n  },\n  getClubs: {\n    method: 'GET',\n    url: '/api/clubs/',\n  },\n  getClub: {\n    method: 'GET',\n    url: '/api/club/',\n  },\n  removeClub: {\n    method: 'DELETE',\n    url: '/api/club/',\n  },\n  changeClubStatus: {\n    method: 'PUT',\n    url: '/api/club',\n  },\n  getOperators: {\n    method: 'GET',\n    url: '/api/operators/',\n  },\n  removeOperator: {\n    method: 'DELETE',\n    url: '/api/operator/',\n  },\n  createPromotion: {\n    method: 'POST',\n    url: '/api/promotion/',\n  },\n};\n\nasync function request(url, method = 'GET', data) {\n  const params = {\n    method,\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n  };\n  if (data) {\n    params.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, params);\n  let body;\n  try {\n    body = await response.json();\n  } catch {\n    console.error('request has been finished with error');\n    return { isOk: false, data: {}};\n  }\n  if (response.status !== 200) {\n    console.error(body.message);\n    if (body.code === 4) {\n      sessionStorage.clear();\n      document.location = PAGE_URL.login;\n    }\n    return { isOk: false, data: body };\n  }\n  return { isOk: true, data: body };\n}\n\nasync function hasRoot() {\n  const response = await request(API.hasRoot.url);\n  return response.data;\n}\n\nasync function createUser(user) {\n  const response = await request(API.createUser.url, API.createUser.method, user);\n  return response;\n}\n\nasync function login(logPass) {\n  const response = await request(API.login.url, API.login.method, logPass);\n  return response;\n}\n\nasync function getAgents() {\n  const response = await request(API.getAgents.url);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeAgent(id) {\n  const response = await request(API.removeAgent.url + id, API.removeAgent.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function getClients(id) {\n  const response = await request(API.getClients.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClient(id) {\n  const response = await request(API.getClient.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function createClient(client) {\n  const response = await request(API.createClient.url, API.createClient.method, client);\n  return response;\n}\n\nasync function removeClient(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.removeClient.url, API.removeClient.method, params);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function clientIsExist(client) {\n  const response = await request(API.clientIsExist.url, API.clientIsExist.method, client);\n  return response.data.is_exist;\n}\n\nasync function createClub(club) {\n  const response = await request(API.createClub.url, API.createClub.method, club);\n  return response;\n}\n\nasync function getClubs(id = '') {\n  const response = await request(API.getClubs.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getClub(id) {\n  const response = await request(API.getClub.url + id);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockClub(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeClub(id) {\n  const response = await request(API.removeClub.url + id, API.removeClub.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function activateClub(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeClubStatus.url, API.changeClubStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function blockUser(id) {\n  const params = { id, status: 'blocked' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeUser(id) {\n  const params = { id, status: 'removed' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function activateUser(id) {\n  const params = { id, status: 'active' };\n  const response = await request(API.changeUserStatus.url, API.changeUserStatus.method, params);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function getOperators(clubId) {\n  const response = await request(API.getOperators.url + clubId);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nasync function removeOperator(id) {\n  const response = await request(API.removeOperator.url + id, API.removeOperator.method);\n  if (response.isOk) {\n    return true;\n  }\n  return false;\n}\n\nasync function createPromotion(clubId, promo) {\n  const response = await request(API.createPromotion.url + clubId, API.createPromotion.method, promo);\n  return response;\n}\n\nexport default {\n  hasRoot,\n  createUser,\n  login,\n  getAgents,\n  removeAgent,\n  getClients,\n  getClient,\n  createClient,\n  removeClient,\n  clientIsExist,\n  createClub,\n  getClubs,\n  getClub,\n  blockClub,\n  removeClub,\n  activateClub,\n  blockUser,\n  removeUser,\n  activateUser,\n  getOperators,\n  removeOperator,\n  createPromotion,\n};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Index.scss';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Агент', 'Количество клиентов', 'Дата создания', ''];\n\nclass Index extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-agent', { callback: this.props.updateAgents});\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (users) => {\n    return users.filter(user => user.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status) => async () => {\n    let agent;\n    if (status === 'active') {\n      agent = await API.blockUser(id);\n    } else {\n      agent = await API.activateUser(id);\n    }\n    this.props.updateAgents();\n  }\n\n  render() {\n    const filteredAgents = this.filterBySearch(this.props.users);\n    return (\n      <div className=\"page page_index\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление агентами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени агента\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Добавить агента</span>\n          </button>\n        </div>\n        {\n          this.props.users.length\n          ? <Table className=\"agents\">\n            <Table.Header>{header}</Table.Header>\n            {\n              filteredAgents.map((agent, i) => (\n                <Table.Row key={agent.id}>\n                  {[\n                    i + 1,\n                    <Link to={`${PAGE_URL.clubs}/${agent.id}`}>{agent.login}</Link>,\n                    agent.clientsCount,\n                    moment(agent.created).format('DD.MM.YYYY'),\n                    <div>\n                      <Tooltip text={agent.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n                        <div onClick={this.toggleLock(agent.id, agent.status)} className={`button-lock ${agent.status === 'blocked' ? 'button-lock_active' : ''}`} />\n                      </Tooltip>\n                      <Tooltip text='Удалить'>\n                        <div onClick={this.props.removeAgent(agent.id, agent.login)} className=\"button-remove\" />\n                      </Tooltip>\n                    </div>\n                  ]}\n                </Table.Row>\n              ))\n            }\n          </Table>\n          : <div className=\"empty-table\">Список агентов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  \n};\n\nexport default Index;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './Club.scss';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\n\nimport API from '../../API';\n\nconst header = ['#', 'Акция', 'Описание', 'Дата добавления'];\n\nclass Club extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      club: {\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClub();\n  }\n\n  fetchClub = async () => {\n    const id = this.props.match.params.id;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onAddPromo = () => {\n    this.props.openPopup('add-promo', { id: this.state.club.id, callback: this.fetchClub});\n  }\n\n  removeClub = (id) => () => {\n    this.props.removeClub(id)();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    return (\n      <div className=\"page page_club\">\n        <div className=\"unit-header unit-header_club\">\n          Клуб - {this.state.club.name}\n          <div className=\"unit-header__remove\">\n            <Tooltip text='Удалить' leftOffset='12px'>\n              <div onClick={this.removeClub(this.state.club.id)} className=\"button-remove button-remove_big\" />\n            </Tooltip>\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_club\">\n            <div className=\"unit-info__name\">Название клуба</div>\n            <div className=\"unit-info__text\">{this.state.club.name}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Адрес</div>\n            <div className=\"unit-info__text\">{this.state.club.address}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Количество клиентов</div>\n            <div className=\"unit-info__text\">{this.state.club.clientsCount}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.club.created).format('DD.MM.YYYY')}</div>\n          </div>\n        </div>\n        {Boolean(this.state.club.promotions.length) &&\n          <Table className=\"clubs\">\n            <Table.Header>{header}</Table.Header>\n            {\n              this.state.club.promotions.map((promo, i) => (\n                <Table.Row key={promo.id}>\n                  {[\n                    i + 1,\n                    promo.name,\n                    promo.description,\n                    moment(promo.created).format('DD.MM.YYYY')\n                  ]}\n                </Table.Row>\n              ))\n            }\n          </Table>\n        }\n        <div className=\"button-wrapper\">\n          <button className=\"button\" type=\"button\" onClick={this.onAddPromo}>\n            <span className=\"button_add\">Создать акцию</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nClub.propTypes = {\n\n};\n\nexport default Club;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Агент клуба', 'Дата создания', ''];\n\nclass Clubs extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  getClubs() {\n    const id = this.props.match.params.agentId;\n    if (!id) {\n      return this.props.clubs.filter(club => club.name.includes(this.state.search))\n    }\n    return this.props.clubs.filter(club => club.owner === id && club.name.includes(this.state.search) )\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  toggleLock = (id, status) => async () => {\n    let club;\n    if (status === 'active') {\n      club = await API.blockClub(id);\n    } else {\n      club = await API.activateClub(id);\n    }\n    this.props.updateClubs(club);\n  }\n\n  render() {\n    const clubs = this.getClubs();\n\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление клубами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <p></p>\n        </div>\n        {\n          clubs.length\n            ? <Table className=\"clubsall\">\n              <Table.Header>{header}</Table.Header>\n              {\n                clubs.map((club, i) => (\n                  <Table.Row key={club.id}>\n                    {[\n                      i + 1,\n                      <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}>{club.name}</Link>,\n                      club.clientsCount,\n                      club.ownerName,\n                      moment(club.created).format('DD.MM.YYYY'),\n                      <div>\n                        <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n                          <div onClick={this.toggleLock(club.id, club.status)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`} />\n                        </Tooltip>\n                        <Tooltip text='Удалить'>\n                          <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\" />\n                        </Tooltip>\n                      </div>\n                    ]}\n                  </Table.Row>\n                ))\n              }\n            </Table>\n            : <div className=\"empty-table\">Список клубов пуст</div>\n        }\n      </div>\n    );\n  }\n}\n\nClubs.propTypes = {\n  \n};\n\nexport default Clubs;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport API from '../../API';\n\nconst header = ['#', 'Оператор', 'Дата регистрации', ''];\n\nclass Operators extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      operators: [],\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.fetchOps();\n  }\n\n  fetchOps = async () => {\n    const clubId = this.props.match.params.id;\n    const operators = await API.getOperators(clubId);\n    if (operators) {\n      this.setState({ operators });\n    }\n  }\n\n  onAddOperator = () => {\n    const id = this.props.match.params.id;\n    this.props.openPopup('add-operator', { id, callback: this.fetchOps });\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (ops) => {\n    return ops.filter(op => op.login.includes(this.state.search));\n  }\n\n  toggleLock = (id, status) => async () => {\n    let operator;\n    if (status === 'active') {\n      operator = await API.blockUser(id);\n    } else {\n      operator = await API.activateUser(id);\n    }\n    if (operator) {\n      const updatedOps = this.state.operators.map(op => op.id === operator.id ? operator : op);\n      this.setState({ operators: updatedOps });\n    }\n  }\n\n  removeOperator = (id, name) => () => {\n    this.props.openPopup('remove-confirm', {\n      title: 'Удаление оператора',\n      content: `<div>Вы действительно хотите удалить оператора? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeOperator(id);\n        if (isRemoved) {\n          const updatedList = this.state.operators.filter(op => op.id !== id);\n          this.setState({ operators: updatedList });\n        }\n      }\n    });\n  }\n\n  render() {\n    const filteredOperators = this.filterBySearch(this.state.operators);\n    return (\n      <div className=\"page page_operators\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление операторами</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск по имени оператора\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.onAddOperator}>\n            <span className=\"button_add\">Создать оператора</span>\n          </button>\n        </div>\n        {\n          this.state.operators.length\n            ? <Table className=\"clubs\">\n              <Table.Header>{header}</Table.Header>\n              {\n                filteredOperators.map((operator, i) => (\n                  <Table.Row key={operator.id}>\n                    {[\n                      i + 1,\n                      operator.login,\n                      moment(operator.created).format('DD.MM.YYYY'),\n                      <div>\n                        <Tooltip text={operator.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n                          <div onClick={this.toggleLock(operator.id, operator.status)} className={`button-lock ${operator.status === 'blocked' ? 'button-lock_active' : ''}`} />\n                        </Tooltip>\n                        <Tooltip text='Удалить'>\n                          <div onClick={this.removeOperator(operator.id, operator.login)} className=\"button-remove\" />\n                        </Tooltip>\n                      </div>\n                    ]}\n                  </Table.Row>\n                ))\n              }\n            </Table>\n            : <div className=\"empty-table\">Для клуба нет назначенных операторов</div>\n        }\n      </div>\n    );\n  }\n}\n\nOperators.propTypes = {\n  \n};\n\nexport default Operators;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Clients.scss';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Имя клиента', 'Телефон', 'Акции', 'Добавил', 'Дата регистрации', ''];\n\nclass Clients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: [],\n      search: '',\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClients();\n  }\n\n  fetchClients = async () => {\n    const clubId = this.props.match.params.id;\n    const clients = await API.getClients(clubId);\n    if (clients) {\n      this.setState({clients});\n    }\n  }\n\n  onChangeInput = ({ value }) => {\n    this.setState({ search: value });\n  }\n\n  filterBySearch = (clients) => {\n    return clients.filter(client => client.name.includes(this.state.search) || client.phone.includes(this.state.search) || client.creator.includes(this.state.search));\n  }\n\n  removeClient = (id, name) => () => {\n    this.props.openPopup('remove-confirm', {\n      title: 'Удаление клиента',\n      content: `<div>Вы действительно хотите удалить клиента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClient(id);\n        if (isRemoved) {\n          const updatedClients = this.state.clients.filter(client => client.id !== id);\n          this.setState({ clients: updatedClients });\n        }\n      }\n    });\n  }\n\n  render() {\n    const filteredClients = this.filterBySearch(this.state.clients);\n    return (\n      <div className=\"page page_clients\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Список Клиентов</div>\n          <div className=\"search-block__input\">\n            <Input\n              icon=\"search\"\n              placeholder=\"Поиск\"\n              value={this.state.search}\n              onChange={this.onChangeInput} />\n          </div>\n          <p></p>\n        </div>\n        {\n          this.state.clients.length\n            ? <Table className=\"clients\">\n              <Table.Header>{header}</Table.Header>\n              {\n                filteredClients.map((client, i) => (\n                  <Table.Row>\n                    {[\n                      i + 1,\n                      <Link to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}/${client.id}`}>{client.name}</Link>,\n                      client.phone,\n                      client.promotions.length,\n                      client.creator,\n                      moment(client.created).format('DD.MM.YYYY'),\n                      <div>\n                        <Tooltip text='Удалить'>\n                          <div onClick={this.removeClient(client.id, client.name)} className=\"button-remove\" />\n                        </Tooltip>\n                      </div>\n                    ]}\n                  </Table.Row>\n                ))\n              }\n            </Table>\n            : <div className=\"empty-table\">В клубе нет клиентов</div>\n        }\n      </div>\n    );\n  }\n}\n\nClients.propTypes = {\n  \n};\n\nexport default Clients;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './Client.scss';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport API from '../../API';\nimport { PAGE_URL } from '../../constants';\n\nconst header = ['#', 'Акция', 'Добавил', 'Дата'];\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: {\n        promotions: []\n      },\n    };\n  }\n\n  componentWillMount() {\n    this.fetchClient();\n  }\n\n  fetchClient = async () => {\n    const id = this.props.match.params.clientId;\n    const client = await API.getClient(id);\n    if (client) {\n      this.setState({ client });\n    }\n  }\n\n  removeClient = (id) => async () => {\n    const isRemoved = await API.removeClient(id);\n    if (isRemoved) {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page page_client\">\n        <div className=\"unit-header unit-header_client\">\n          Клиент - {this.state.client.name}\n          <div className=\"unit-header__remove\">\n            <Tooltip text='Удалить' leftOffset='12px'>\n              <div onClick={this.removeClient(this.state.client.id)} className=\"button-remove button-remove_big\" />\n            </Tooltip>\n          </div>\n        </div>\n        <div className=\"unit-info\">\n          <div className=\"unit-info__label unit-info__label_username\">\n            <div className=\"unit-info__name\">Имя</div>\n            <div className=\"unit-info__text\">{this.state.client.name}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_phone\">\n            <div className=\"unit-info__name\">Телефон</div>\n            <div className=\"unit-info__text\">{this.state.client.phone}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_creator\">\n            <div className=\"unit-info__name\">Добавил</div>\n            <div className=\"unit-info__text\">{this.state.client.creator}</div>\n          </div>\n          <div className=\"unit-info__label unit-info__label_created\">\n            <div className=\"unit-info__name\">Дата регистрации</div>\n            <div className=\"unit-info__text\">{moment(this.state.client.created).format('DD.MM.YYYY')}</div>\n          </div>\n        </div>\n        \n        {Boolean(this.state.client.promotions.length) &&\n          <Table className=\"clubs\">\n            <Table.Header>{header}</Table.Header>\n            {\n              this.state.client.promotions.map((promo, i) => (\n                <Table.Row key={promo.id}>\n                  {[\n                    i + 1,\n                    promo.name,\n                    promo.creator,\n                    moment(promo.date).format('DD.MM.YYYY')\n                  ]}\n                </Table.Row>\n              ))\n            }\n          </Table>\n        }\n      </div>\n    );\n  }\n}\n\nClient.propTypes = {\n  \n};\n\nexport default Client;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom'\nimport './Breadcrumbs.scss';\n\nconst schemas = {\n  Agent: [\n    { name: 'index', regexp: /^\\/$/ },\n    { name: 'club', regexp: /^\\/club\\/.{24}$/ },\n    { name: 'clubs', regexp: /^\\/clubs\\/.{24}$/ },\n    { name: 'clubsAll', regexp: /^\\/clubs\\/all$/ },\n    { name: 'clients', regexp: /^\\/club\\/.{24}\\/clients$/ },\n    { name: 'client', regexp: /^\\/club\\/.{24}\\/clients\\/.{24}$/ },\n    { name: 'operators', regexp: /^\\/club\\/.{24}\\/operators$/ },\n  ]\n}\n\nclass Breadcrumbs extends PureComponent {\n  parseURL = (url) => {\n    let clubId = null;\n    if ( /^\\/club\\//.test(url) ) {\n      clubId = url.substr(6, 24);\n      this.props.setClubId(clubId);\n    }\n    \n    const page = schemas.Agent.find( page => page.regexp.test(url)) || {};\n    return { page: page.name, clubId, url };\n  }\n\n  getLinks = ({page, clubId, url}) => {\n    const clubName = this.props.clubName;\n    const links = {\n      index: { text: 'Главная', url: '/' },\n      club: (id) => ({ text: `Клуб ${clubName}`, url: `/club/${id}/clients` }),\n      clubs: { text: `Клубы агента`, url },\n      clubsAll: { text: `Клубы`, url },\n      operators: (id) => ({ text: 'Управление операторами', url }),\n      clients: (id) => ({ text: 'Управление клиентами', url: `/club/${id}/clients` }),\n      client: (id) => ({ text: 'Клиент', url }),\n      promo: { text: `Акции клуба`, url },\n    };\n\n    if (page === 'index') {\n      return [links.index];\n    }\n    if (page === 'clubsAll') {\n      return [links.index, links.clubsAll];\n    }\n    if (page ==='clubs') {\n      return [links.index, links.clubs];\n    }\n    if (page === 'club') {\n      return [links.index, links.club(clubId), links.promo];\n    }\n    if (page === 'operators') {\n      return [links.index, links.club(clubId), links.operators(clubId)];\n    }\n    if (page === 'clients') {\n      return [links.index, links.club(clubId)];\n    }\n    if (page === 'client') {\n      return [links.index, links.club(clubId), links.client(clubId)];\n    }\n    return [];\n  }\n\n  render() {\n    const currentPage = this.parseURL(document.location.pathname);\n    const links = this.getLinks(currentPage);\n    return (\n      <div className=\"breadcrumbs\">\n        {\n          links.map((link, i) => <NavLink exact to={link.url} key={i} className=\"breadcrumb\" activeClassName=\"breadcrumb_active\">{link.text}</NavLink>)\n        }\n      </div>\n    );\n  }\n}\n\nBreadcrumbs.propTypes = {\n  setClubId: PropTypes.func.isRequired,\n  clubName: PropTypes.string.isRequired,\n}\n\nexport default Breadcrumbs;","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport MenuAdmin from './components/MenuAdmin/MenuAdmin';\nimport Index from './components/Index/Index';\nimport Club from './components/Club/Club';\nimport Clubs from './components/Clubs/Clubs';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AdminRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agents: [],\n      clubs: [],\n      selectedClubId: null,\n      clubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    Promise.all([this.fetchClubs(), this.fetchAgents()]).then((responses) => {\n      const clubs = responses[0];\n      const agents = responses[1];\n      const counters = {};\n      clubs.forEach(club => {\n        counters[club.owner] = counters[club.owner] ? counters[club.owner] + club.clientsCount : club.clientsCount;\n      });\n      const updatedAgents = agents.map(agent => ({ ...agent, clientsCount: counters[agent.id] || 0 }));\n      const agentsNames = {};\n      agents.forEach(agent => {\n        agentsNames[agent.id] = agent.login;\n      });\n      const updatedClubs = clubs.map(club => ({...club, ownerName: agentsNames[club.owner]}));\n      this.setState({ agents: updatedAgents, clubs: updatedClubs }, () => {\n        if (this.state.selectedClubId) {\n          this.setClubName();\n        }\n      });\n    });\n  }\n\n  fetchAgents = async () => {\n    const agents = await API.getAgents();\n    return agents;\n  }\n\n  fetchClubs = async (id = 'all') => {\n    const clubs = await API.getClubs(id);\n    return clubs;\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({ clubName: club.name ? `(${club.name})` : ''});\n  }\n\n  updateClubs = (newClub) => {\n    if (!newClub) return;\n    const updatedClubs = this.state.clubs.map(club => (\n      {\n        ...club,\n        status: club.id === newClub.id ? newClub.status : club.status,\n    }));\n    this.setState({ clubs: updatedClubs });\n  }\n\n  updateAgents = () => {\n    this.fetchData();\n  }\n\n  removeClub = (id, name) => async () => {\n    this.props.openPopup('remove-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n        }\n      }\n    });\n  }\n\n  removeAgent = (id, name) => () => {\n    this.props.openPopup('remove-confirm', {\n      title: 'Удаление агента',\n      content: `<div>Вы действительно хотите удалить агента? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeAgent(id);\n        if (isRemoved) {\n          const updatedAgents = this.state.agents.filter(agent => agent.id !== id);\n          this.setState({ agents: updatedAgents });\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAdmin} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.clubName} />} />\n        <Route path={PAGE_URL.index} exact render={(props) => <Index {...props} openPopup={this.props.openPopup} users={this.state.agents} updateAgents={this.updateAgents} removeAgent={this.removeAgent}/>} />\n        <Switch>\n          <Route path={`${PAGE_URL.clubs}/all`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub}/>} />\n          <Route path={`${PAGE_URL.clubs}/:agentId`} exact render={(props) => <Clubs {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub}/>} />\n        </Switch>\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup} />} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup} />} />\n      </div>\n    );\n  }\n}\n\nAdminRoutes.propTypes = {\n\n};\n\nexport default AdminRoutes;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Menu from '../UI/Menu/Menu';\nimport { PAGE_URL } from '../../constants';\n\nclass MenuAgent extends PureComponent {\n\n  render() {\n    return (\n      <Menu>\n        <NavLink exact to={PAGE_URL.index} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-club\"><span>Клубы</span></NavLink>\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.clients}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Клиенты</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Клиенты</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}${PAGE_URL.operators}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Операторы</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Операторы</span></a>\n        }\n        {\n          this.props.match.params.id\n            ? <NavLink exact to={`${PAGE_URL.club}/${this.props.match.params.id}`} activeClassName=\"menu-tab_active\" className=\"menu-tab menu-tab_icon-ops\"><span>Акции</span></NavLink>\n            : <a className=\"menu-tab menu-tab_icon-ops menu-tab_disabled\"><span>Акции</span></a>\n        }\n      </Menu>\n    );\n  }\n}\n\nexport default MenuAgent;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../Clubs/Clubs.scss';\n\nimport Table from '../UI/Table/Table';\nimport Tooltip from '../UI/Tooltip/Tooltip';\nimport Input from '../UI/Input/Input';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nconst header = ['#', 'Клуб', 'Количество клиентов', 'Дата регистрации', ''];\n\nclass IndexAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-club', {callback: this.props.updateClubs});\n  }\n\n  onChangeInput = ({value}) => {\n    this.setState({search: value});\n  }\n\n  filterBySearch = (clubs) => {\n    return clubs.filter( club => club.name.includes(this.state.search) );\n  }\n\n  toggleLock = (id, status) => async () => {\n    let club;\n    if (status === 'active') {\n      club = await API.blockClub(id);\n    } else {\n      club = await API.activateClub(id);\n    }\n    this.props.updateClubs(club);\n  }\n\n  render() {\n    const filteredClubs = this.filterBySearch(this.props.clubs);\n    return (\n      <div className=\"page page_clubs\">\n        <div className=\"search-block\">\n          <div className=\"search-block__title\">Управление клубами</div>\n          <div className=\"search-block__input\">\n            <Input \n              icon=\"search\"\n              placeholder=\"Поиск по названию клуба\"\n              value={this.state.search}\n              onChange={this.onChangeInput}/>\n          </div>\n          <button className=\"button\" type=\"button\" onClick={this.showPopup}>\n            <span className=\"button_add\">Создать клуб</span>\n          </button>\n        </div>\n        {\n          this.props.clubs.length\n          ? <Table className=\"clubs\">\n              <Table.Header>{header}</Table.Header>\n              {\n                filteredClubs.map((club, i) => (\n                  <Table.Row>\n                  {[\n                    i + 1,\n                    <Link to={`${PAGE_URL.club}/${club.id}${PAGE_URL.clients}`}>{club.name}</Link>,\n                    club.clientsCount,\n                    moment(club.created).format('DD.MM.YYYY'),\n                    <div>\n                      <Tooltip text={club.status === 'blocked' ? 'Разблокировать' : 'Заблокировать'} leftOffset=\"-29px\">\n                        <div onClick={this.toggleLock(club.id, club.status)} className={`button-lock ${club.status === 'blocked' ? 'button-lock_active' : ''}`}/>\n                      </Tooltip>\n                      <Tooltip text='Удалить'>\n                        <div onClick={this.props.removeClub(club.id, club.name)} className=\"button-remove\"/>\n                      </Tooltip>\n                    </div>\n                  ]}\n                  </Table.Row> \n                ))\n              }\n            </Table>\n            : <div className=\"empty-table\">Нет доступных клубов</div>\n         }\n      </div>\n    );\n  }\n}\n\nIndexAgent.propTypes = {\n\n};\n\nexport default IndexAgent;","import React, { PureComponent } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MenuAgent from './components/MenuAgent/MenuAgent';\nimport IndexAgent from './components/IndexAgent/IndexAgent';\nimport Club from './components/Club/Club';\nimport Operators from './components/Operators/Operators';\nimport Clients from './components/Clients/Clients';\nimport Client from './components/Client/Client';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { PAGE_URL } from './constants';\nimport API from './API';\n\nclass AgentRoutes extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clubs: [],\n      selectedClubId: null,\n      selectedClubName: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClubs();\n    }\n  }\n\n  fetchClubs = async () => {\n    const clubs = await API.getClubs();\n    if (clubs) {\n      this.setState({ clubs }, this.setClubName);\n    }\n  }\n\n  setClubId = (id) => {\n    this.setState({ selectedClubId: id }, this.setClubName);\n  }\n\n  setClubName = () => {\n    const club = this.state.clubs.find(club => club.id === this.state.selectedClubId) || {};\n    this.setState({\n      selectedClubName: club.name ? `(${club.name})` : '',\n    });\n  }\n\n  updateClubs = (newClub) => {\n    if (!newClub) {\n      this.fetchClubs();\n      return;\n    };\n    const updatedClubs = this.state.clubs.map( club => club.id === newClub.id ? newClub : club);\n    this.setState({clubs: updatedClubs});\n  }\n\n  removeClub = (id, name) => () => {\n    this.props.openPopup('remove-confirm', {\n      title: 'Удаление клуба',\n      content: `<div>Вы действительно хотите удалить клуб? <br/><b>${name}</b></div>`,\n      callback: async () => {\n        const isRemoved = await API.removeClub(id);\n        if (isRemoved) {\n          const updatedClubs = this.state.clubs.filter(club => club.id !== id);\n          this.setState({ clubs: updatedClubs });\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <Route path={[`${PAGE_URL.club}/:id`, PAGE_URL.index]} component={MenuAgent} />\n        <Route render={(props) => <Breadcrumbs {...props} setClubId={this.setClubId} clubName={this.state.selectedClubName}/>}/>\n        <Route path={PAGE_URL.index} exact render={(props) => <IndexAgent {...props} openPopup={this.props.openPopup} clubs={this.state.clubs} updateClubs={this.updateClubs} removeClub={this.removeClub}/>} />\n        <Route path={`${PAGE_URL.club}/:id`} exact render={(props) => <Club {...props} openPopup={this.props.openPopup} removeClub={this.removeClub}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.operators}`} exact render={(props) => <Operators {...props} openPopup={this.props.openPopup}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}`} exact render={(props) => <Clients {...props} openPopup={this.props.openPopup}/>} />\n        <Route path={`${PAGE_URL.club}/:id${PAGE_URL.clients}/:clientId`} exact render={(props) => <Client {...props} openPopup={this.props.openPopup}/>} />\n      </div>\n    );\n  }\n}\n\nAgentRoutes.propTypes = {\n  \n};\n\nexport default AgentRoutes;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './MenuOperator.scss';\n\nimport Menu from '../UI/Menu/Menu';\n\nclass MenuOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <Menu><span className=\"menu-operator__text\">Добавить клиента</span></Menu>\n    );\n  }\n}\n\nMenuOperator.propTypes = {\n  \n};\n\nexport default MenuOperator;","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport './IndexOperator.scss';\n\nimport Input from '../UI/Input/Input';\nimport MenuOperator from '../MenuOperator/MenuOperator';\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\n\nclass IndexOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promoName: '',\n      promoId: '',\n      club: {\n        name: 'Клуб',\n        promotions: [],\n        status: '',\n      },\n      name: '',\n      nameIsValid: '',\n      phone: '',\n      phoneIsValid: '',\n    };\n  }\n\n  componentWillMount() {\n    if (!this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchClub();\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  fetchClub = async () => {\n    const id = this.props.club;\n    const club = await API.getClub(id);\n    if (club) {\n      this.setState({ club });\n    }\n  }\n\n  onPromoSelect = ({target}) => {\n    this.setState({\n      promoId: target.value,\n      promoName: target.options[target.selectedIndex].text,\n    })\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && this.state.phoneIsValid;\n  }\n\n  onSubmit = async () => {\n    const isExist = await API.clientIsExist({ phone: this.state.phone });\n    if (isExist) {\n      this.register();\n    } else {\n      this.sendCode();\n    }\n    \n  }\n\n  sendCode = () => {\n    this.props.openPopup('sms-confirm', { phone: this.state.phone, callback: this.register });\n  }\n\n  register = async (code) => {\n    const response = await API.createClient({\n      name: this.state.name,\n      phone: this.state.phone,\n      promotion: {\n        id: this.state.promoId,\n        name: this.state.promoName,\n      },\n      code,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Клиент <b>${this.state.name}</b> успешно добавлен` });\n    } else {\n      let text = 'Произошла ошибка';\n      if (response.data.code === 7) {\n        text = 'Такой клиент уже зарегистрирован';\n      } else if (response.data.code === 8) {\n        text = 'Клиент уже участвует в акции';\n      }\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    if (!this.state.club.status) {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n        </div>\n      );\n    }\n    if (this.state.club.status === 'blocked') {\n      return (\n        <div className=\"page-container operator-index\">\n          <MenuOperator />\n          <div className=\"operator-index__content\">\n            <div className=\"block-alert\">Клуб заблокирован!</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"page-container operator-index\">\n        <MenuOperator />\n        <div className=\"operator-index__content\">\n          <div className=\"pic\" />\n          <div className=\"inputs-wrapper\">\n            <div className=\"operator-index__title\">Заполните данные клиента</div>\n            <label className=\"label\">\n              <div>Имя</div>\n              <Input\n                name=\"name\"\n                icon=\"login\"\n                type=\"name\"\n                placeholder=\"Введите имя\"\n                validationType=\"required\"\n                value={this.state.name}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Телефон</div>\n              <Input\n                name=\"phone\"\n                icon=\"phone\"\n                placeholder=\"Введите телефон\"\n                validationType=\"required\"\n                value={this.state.phone}\n                onChange={this.onChangeInput}\n              />\n            </label>\n            <label className=\"label\">\n              <div>Акция</div>\n              <select onChange={this.onPromoSelect} value={this.state.promoId}>\n                <option value=\"\">без акции</option>\n                {\n                  this.state.club.promotions.map( promo => <option key={promo.id} value={promo.id}>{promo.name}</option>)\n                }\n              </select>\n            </label>\n            <button className=\"button\" onClick={this.onSubmit} disabled={!this.isFormValid()}>Отправить</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndexOperator;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport './Login.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      errorMessage: '',\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.hasAuth) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid;\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n    const res = await API.login({\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (res.isOk) {\n      this.props.onLogin(res.data);\n      this.props.history.push(PAGE_URL.index);\n    } else {\n      let errorMessage = 'Ошибка авторизации';\n      if (res.data.code === 3) {\n        errorMessage = 'Неверный логин или пароль';\n      } else if (res.data.code === 9) {\n        errorMessage = 'Аккаунт заблокирован';\n      }\n      this.setState({ errorMessage });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-wrapper\">\n          <div className=\"login-block\">\n            <form className=\"login-panel\" onSubmit={this.login}>\n              <div className=\"header-block\">\n                <div className=\"header-block__logo\" />\n                <div className=\"header-block__title\">SlotAdmin<span>Система учета клиентов</span></div>\n              </div>\n              <div className=\"login-panel__header\">Вход в систему учета клиентов</div>\n              <label className=\"label\">\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  icon=\"login\"\n                  placeholder=\"Введите логин\"\n                  validationType=\"login\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label className=\"label\">\n                <div>Пароль</div>\n                <Input\n                  name=\"password\"\n                  icon=\"password\"\n                  type=\"password\"\n                  placeholder=\"Введите пароль\"\n                  validationType=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <div className={classNames('login-panel__error', { 'login-panel__error_show': this.state.errorMessage})}>\n                {this.state.errorMessage}\n              </div>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>Вход</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { PureComponent } from 'react';\nimport './Root.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Root extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  componentWillMount() {\n    this.checkIfRootExist();\n  }\n\n  checkIfRootExist = async () => {\n    const response = await API.hasRoot();\n    if (response.hasRoot) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({name, value, isValid}) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  createAccount = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'root',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.history.push(PAGE_URL.login);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"root-page\">\n        <div className=\"root-wrapper\">\n          <div className=\"root-block\">\n            <form className=\"root-panel\" onSubmit={this.createAccount}>\n              <div className=\"root-panel__header\">Создание администратора системы</div>\n              <label>\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  placeholder=\"Логин\"\n                  validationType=\"login\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Пароль</div>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Пароль\"\n                  validationType=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Повтор пароля</div>\n                <Input\n                  type=\"password\"\n                  name=\"repeatPassword\"\n                  placeholder=\"Пароль\"\n                  validationType=\"password\"\n                  value={this.state.repeatPassword}\n                  compareWith={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>create</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Root;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addAgent = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'agent',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', {type: 'success', text: `Агент <b>${this.state.login}</b> успешно добавлен`});\n      this.props.data.callback();\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить агента</div>\n        <form onSubmit={this.addAgent}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddAgent;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddClub extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      address: '',\n      addressIsValid: false,\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid && \n      this.state.addressIsValid && \n      this.state.loginIsValid && \n      this.state.passwordIsValid && \n      this.state.repeatPasswordIsValid;\n  }\n\n  addClub = async (e) => {\n    e.preventDefault();\n    const response = await API.createClub({\n      name: this.state.name,\n      address: this.state.address,\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Клуб <b>${this.state.name}</b> успешно создан` });\n      this.props.data.callback();\n    } else {\n      this.props.openPopup('alert', { type: 'error', text: 'Произошла ошибка' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-club\">\n        <div className=\"popup-content__title\">Создать клуб</div>\n        <form onSubmit={this.addClub}>\n          <label className=\"label\">\n            <div>Название клуба</div>\n            <Input\n              name=\"name\"\n              icon=\"club\"\n              placeholder=\"Введите название клуба\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Адрес</div>\n            <Input\n              name=\"address\"\n              icon=\"address\"\n              placeholder=\"Введите адрес клуба\"\n              validationType=\"required\"\n              value={this.state.address}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <br/>\n          <br/>\n          <div className=\"popup-content__title\">Создать оператора клуба</div>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Создать</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddClub;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddPromo extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameIsValid: false,\n      desc: '',\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  onChangeTextarea = ({ target }) => {\n    this.setState({desc: target.value});\n  }\n\n  isFormValid = () => {\n    return this.state.nameIsValid;\n  }\n\n  addPromo = async (e) => {\n    e.preventDefault();\n    const clubId = this.props.data.id;\n    const response = await API.createPromotion(clubId, {\n      name: this.state.name,\n      description: this.state.desc,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Акция <b>${this.state.name}</b> успешно добавлена` });\n      this.props.data.callback();\n    } else {\n      this.props.openPopup('alert', { type: 'error', text: response.data.message });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Создать акцию</div>\n        <form onSubmit={this.addPromo}>\n          <label className=\"label\">\n            <div>Название</div>\n            <Input\n              name=\"name\"\n              icon=\"login\"\n              placeholder=\"Введите название\"\n              validationType=\"required\"\n              value={this.state.name}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Описание</div>\n            <textarea\n              className=\"textarea\"\n              name=\"desc\"\n              icon=\"desc\"\n              placeholder=\"Введите описание\"\n              value={this.state.desc}\n              onChange={this.onChangeTextarea}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPromo;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddOperator extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addOperator = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'operator',\n      login: this.state.login,\n      password: this.state.password,\n      clubId: this.props.data.id,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', { type: 'success', text: `Оператор <b>${this.state.login}</b> успешно добавлен` });\n      this.props.data.callback();\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить оператора</div>\n        <form onSubmit={this.addOperator}>\n          <label className=\"label\">\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label className=\"label\">\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddOperator;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RemoveConfirm extends PureComponent {\n\n  onAccept = () => {\n    this.props.data.callback();\n    this.props.close();\n  }\n\n  render() {\n    const { title, content } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\" dangerouslySetInnerHTML={{ __html: title }} />\n        <div className=\"popup_alert__alert\">\n          <span className=\"popup_confirm__remove-content\" dangerouslySetInnerHTML={{ __html: content }} />\n        </div>\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>Удалить</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRemoveConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  })\n};\n\nexport default RemoveConfirm;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SmsConfirm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '3951',\n    };\n  }\n\n  onAccept = () => {\n    this.props.data.callback(this.state.code);\n  }\n\n  onChangeInput = ({target}) => {\n    this.setState({code: target.value});\n  }\n\n  render() {\n    const { phone } = this.props.data;\n    return (\n      <div className=\"popup-content popup_confirm\">\n        <div className=\"popup-content__title\">SMS отправлено</div>\n        <div className=\"popup_confirm__content\">\n          Сообщение отправлено на номер\n          <div className=\"popup_confirm__phone\">{phone}</div>\n          <div className=\"popup_confirm__code\">\n            <span>Код подтверждения</span>\n            <input className=\"input\" value={this.state.code} onChange={this.onChangeInput} />\n          </div>\n        </div>\n        <div className=\"popup_confirm__buttons\">\n          <button className=\"button\" onClick={this.onAccept}>Подтвердить</button>\n          <button className=\"button button_gray\" onClick={this.props.close}>Закрыть</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSmsConfirm.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    callback: PropTypes.func.isRequired,\n    phone: PropTypes.string.isRequired,\n  })\n};\n\nexport default SmsConfirm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends Component {\n  static defaultProps = {\n    data: {\n      type: 'success',\n      text: 'success',\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    const {type, text} = this.props.data;\n    return (\n      <div className=\"popup-content popup_alert\">\n        <div className={`popup_alert__alert popup_alert__alert_${type}`}>\n          <span className=\"popup_alert__msg\" dangerouslySetInnerHTML={{__html: text}}/>\n        </div>\n        <button className=\"button\" onClick={this.props.close}>Закрыть</button>\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    type: PropTypes.oneOf(['success', 'error', 'worning']).isRequired,\n    text: PropTypes.string.isRequired,\n  })\n};\n\nexport default Alert;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './Popup.scss';\n\nimport AddAgent from './popups/AddAgent';\nimport AddClub from './popups/AddClub';\nimport AddPromo from './popups/AddPromo';\nimport AddOperator from './popups/AddOperator';\nimport RemoveConfirm from './popups/RemoveConfirm';\nimport SmsConfirm from './popups/SmsConfirm';\nimport Alert from './popups/Alert';\n\nclass Popup extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  preventClosing = (e) => {\n    e.stopPropagation();\n  }\n\n  onPressEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  render() {\n    if (!this.props.isOpen) {\n      document.removeEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'auto';\n    } else {\n      document.addEventListener('keydown', this.onPressEsc);\n      document.getElementsByTagName('html')[0].style.overflow = 'hidden';\n    }\n\n    let content;\n    if (this.props.name === 'add-agent') {\n      content = <AddAgent data={this.props.data} openPopup={this.props.open}/>\n    } else if (this.props.name === 'alert') {\n      content = <Alert data={this.props.data} close={this.props.close}/>\n    } else if (this.props.name === 'add-club') {\n      content = <AddClub data={this.props.data} openPopup={this.props.open} />\n    } else if(this.props.name === 'add-promo') {\n      content = <AddPromo data={this.props.data} openPopup={this.props.open} />\n    } else if (this.props.name === 'add-operator') {\n      content = <AddOperator data={this.props.data} openPopup={this.props.open} />\n    } else if (this.props.name === 'remove-confirm') {\n      content = <RemoveConfirm data={this.props.data} close={this.props.close}/>\n    } else if (this.props.name === 'sms-confirm') {\n      content = <SmsConfirm data={this.props.data} close={this.props.close} />\n    }\n\n    const cantClose = this.props.name === 'alert' || this.props.name === 'sms-confirm';\n    return (\n      <ReactCSSTransitionGroup\n        transitionName=\"showpopup\"\n        transitionEnterTimeout={200}\n        transitionLeaveTimeout={150}>\n        {\n          this.props.isOpen && \n          <div className=\"popup-wrapper\" onClick={cantClose ? null : this.props.close}>\n            <div className=\"popup-block\">\n              <div className=\"content-wrapper\" onClick={this.preventClosing}>\n                {!cantClose && <div className=\"close-btn\" onClick={this.props.close} />}\n                {content}\n              </div>\n            </div>\n          </div>\n        }\n      </ReactCSSTransitionGroup>\n      \n    );\n  }\n}\n\nPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Popup;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\n\nimport { PAGE_URL } from './constants';\nimport Header from './components/Header/Header';\nimport AdminRoutes from './AdminRoutes';\nimport AgentRoutes from './AgentRoutes';\nimport IndexOperator from './components/IndexOperator/IndexOperator';\nimport Login from './components/Login/Login';\nimport Root from './components/Root/Root';\nimport Popup from './components/Popup/Popup';\n\nclass App extends Component {\n  state = {\n    popupIsOpen: false,\n    popupName: '',\n    popupData: null,\n    userName: '',\n    userRole: '',\n    userClub: '',\n    hasAuth: false,\n  }\n\n  componentWillMount() {\n    const storedData = sessionStorage.getItem('user');\n    if (storedData) {\n      const user = JSON.parse(storedData);\n      this.setState(user);\n    }\n  }\n\n  saveUser = () => {\n    const user = {\n      userName: this.state.userName,\n      userRole: this.state.userRole,\n      userClub: this.state.userClub,\n      hasAuth: this.state.hasAuth,\n    }\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  openPopup = (popupName, data) => {\n    this.setState({\n      popupIsOpen: true,\n      popupName,\n      popupData: data,\n    });\n  }\n\n  closePopup = () => {\n    this.setState({\n      popupIsOpen: false\n    });\n  }\n\n  onLogin = (user) => {\n    this.setState({\n      userName: user.login,\n      userRole: user.role,\n      userClub: user.clubId,\n      hasAuth: true,\n    }, this.saveUser);\n  }\n\n  onLogout = () => {\n    this.setState({\n      userName: '',\n      userRole: '',\n      userClub: '',\n      hasAuth: false,\n    }, () => {\n      this.saveUser();\n    });\n  }\n\n  render() {\n    let routesByRole;\n    if (this.state.userRole === 'operator') {\n      routesByRole = (\n        <Route \n          path={PAGE_URL.index}\n          render={(props) => \n            <IndexOperator\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n              club={this.state.userClub}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'agent') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AgentRoutes\n              {...props}\n              hasAuth={this.state.hasAuth}\n              openPopup={this.openPopup}\n            />\n          }\n        />\n      );\n    } else if (this.state.userRole === 'root') {\n      routesByRole = (\n        <Route\n          path={PAGE_URL.index}\n          render={(props) =>\n            <AdminRoutes\n              {...props}\n              openPopup={this.openPopup}\n              hasAuth={this.state.hasAuth}\n            />\n          }\n        />\n      );\n    } else {\n      routesByRole = <Redirect to={PAGE_URL.login} />;\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <Route path={PAGE_URL.login} exact render={(props) => <Login {...props} onLogin={this.onLogin} hasAuth={this.state.hasAuth} />} />\n          <Route path={PAGE_URL.root} exact component={Root} />\n          <Route children={() =>\n            <>\n              <Header role={this.state.userRole} name={this.state.userName} onLogout={this.onLogout} />\n              {routesByRole}\n              <Popup\n                isOpen={this.state.popupIsOpen}\n                name={this.state.popupName}\n                data={this.state.popupData}\n                open={this.openPopup}\n                close={this.closePopup}\n              />\n            </>\n          }/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}