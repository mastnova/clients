{"version":3,"sources":["constants.js","utils/user.js","API.js","components/Index/Index.jsx","components/UI/Input/Input.jsx","utils/validation.js","components/Login/Login.jsx","components/Root/Root.jsx","components/Popup/popups/AddAgent.jsx","components/Popup/popups/Alert.jsx","components/Popup/Popup.jsx","App.jsx","serviceWorker.js","index.js"],"names":["PAGE_URL","index","login","root","utils_user","sessionStorage","setItem","logout","document","location","API","hasRoot","method","url","createUser","getUsers","request","_callee","data","params","response","body","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","headers","Headers","Content-Type","JSON","stringify","fetch","sent","json","status","console","error","message","code","user","abrupt","isOk","stop","this","_callee2","_context2","_callee3","_context3","_callee4","logPass","_context4","_callee5","_context5","src_API","Index","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchUsers","asyncToGenerator","mark","users","setState","showPopup","openPopup","state","getItem","history","push","react_default","createElement","onClick","map","key","id","role","created","PureComponent","Input","onChange","value","input","comparingValue","compareWith","isValid","type","isInputValid","validationType","name","onBlur","isActivated","_this2","cn","classNames","input__error","input__success","className","icon","concat","placeholder","ref","el","defaultProps","Login","onChangeInput","_ref","_this$setState","defineProperty","isFormValid","loginIsValid","passwordIsValid","_ref2","e","res","errorMessage","preventDefault","password","_x","apply","onSubmit","UI_Input_Input","login-panel__error_show","disabled","Root","checkIfRootExist","repeatPasswordIsValid","createAccount","_ref3","repeatPassword","AddAgent","addAgent","text","Alert","_this$props$data","dangerouslySetInnerHTML","__html","close","Component","Popup","preventClosing","stopPropagation","onPressEsc","content","isOpen","addEventListener","removeEventListener","popups_AddAgent","open","popups_Alert","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","App","popupIsOpen","popupName","popupData","closePopup","BrowserRouter","Route","path","exact","render","components_Index_Index","assign","component","components_Popup_Popup","Boolean","window","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e13dbfe.chunk.js","sourcesContent":["export const PAGE_URL = {\n  index: '/',\n  login: '/login',\n  root: '/root',\n}","import { PAGE_URL } from '../constants';\n\nfunction login() {\n  sessionStorage.setItem('userHasAuth', 'true');\n}\n\nfunction logout () {\n  sessionStorage.setItem('userHasAuth', '');\n  document.location = PAGE_URL.login;\n}\n\nexport default {\n  login,\n  logout,\n};","import user from './utils/user';\n\nconst API = {\n  hasRoot: {\n    method: 'GET',\n    url: '/api/root',\n  },\n  createUser: {\n    method: 'POST',\n    url: '/api/user',\n  },\n  login: {\n    method: 'POST',\n    url: '/api/login',\n  },\n  getUsers: {\n    method: 'GET',\n    url: '/api/users',\n  }\n};\n\nasync function request(url, method = 'GET', data) {\n  const params = {\n    method,\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n  };\n  if (data) {\n    params.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, params);\n  const body = await response.json();\n  if (response.status !== 200) {\n    console.error(body.message);\n    if (body.code === 4) {\n      user.logout();\n    }\n    return { isOk: false, data: body };\n  }\n  return { isOk: true, data: body };\n}\n\nasync function hasRoot() {\n  const response = await request(API.hasRoot.url);\n  return response.data;\n}\n\nasync function createUser(user) {\n  const response = await request(API.createUser.url, API.createUser.method, user);\n  return response;\n}\n\nasync function login(logPass) {\n  const response = await request(API.login.url, API.login.method, logPass);\n  if (response.isOk) {\n    user.login();\n  }\n  return response;\n}\n\nasync function getUsers() {\n  const response = await request(API.getUsers.url);\n  if (response.isOk) {\n    return response.data;\n  }\n  return null;\n}\n\nexport default {\n  hasRoot,\n  createUser,\n  login,\n  getUsers,\n};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PAGE_URL } from '../../constants';\nimport API from '../../API';\nimport user from '../../utils/user';\n\nclass Index extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  componentWillMount() {\n    const hasAuth = sessionStorage.getItem('userHasAuth');\n    if (!hasAuth) {\n      this.props.history.push(PAGE_URL.login)\n    } else {\n      this.fetchUsers();\n    }\n  }\n\n  fetchUsers = async () => {\n    const users = await API.getUsers();\n    if (users) {\n      this.setState({ users });\n    }\n  }\n\n  showPopup = () => {\n    this.props.openPopup('add-agent');\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Index page <button onClick={user.logout}>logout</button></p>\n        <ul>\n        {\n          this.state.users.map(user => <li key={user.id}>{user.login} - {user.role} - {user.created}</li>)\n        }\n        </ul>\n        <button onClick={this.showPopup}>add agent</button>\n      </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  \n};\n\nexport default Index;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Input.scss';\n\nimport { isValid as isInputValid } from '../../../utils/validation';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    name: 'input',\n    type: 'text',\n    value: '',\n    placeholder: '',\n    onChange: () => { },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValid: false,\n      isActivated: false,\n    };\n  }\n\n  onChange = () => {\n    const value = this.input.value;\n    const comparingValue = this.props.compareWith;\n    let isValid = isInputValid(value, this.props.validationType);\n    if (comparingValue) {\n      isValid = value === comparingValue ? isValid : false\n    }\n    this.setState({isValid});\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      isValid,\n    })\n  }\n\n  onBlur = () => {\n    this.setState({isActivated: true});\n  }\n\n  render() {\n    this.props.compareWith && this.onChange();\n    const cn = classNames(\n      'input',\n      {'input__error': !this.state.isValid && this.state.isActivated},\n      { 'input__success': this.state.isValid && this.state.isActivated},\n    );\n    return (\n      <div className={this.props.icon ? `input-wrapper input-wrapper_${this.props.icon}`: null}>\n      <input\n        className={cn}\n        type={this.props.type}\n        name={this.props.name}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        value={this.props.value}\n        placeholder={this.props.placeholder}\n        ref={(el) => {this.input = el}}\n      />\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  validationType: PropTypes.string,\n  compareWith: PropTypes.string,\n};\n\nexport default Input;","export function isValid (value, type) {\n  if (!type) return true;\n  if (type === 'login') {\n    if (value.length) {\n      return true;\n    }\n    return false;\n  } else if (type === 'password') {\n    if (value.length > 1) {\n      return true;\n    }\n    return false;\n  }\n  console.error('Unknown validation type');\n}","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport './Login.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      errorMessage: '',\n    };\n  }\n\n  componentWillMount() {\n    const hasAuth = sessionStorage.getItem('userHasAuth');\n    if (hasAuth) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid;\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n    const res = await API.login({\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (res.isOk) {\n      this.props.history.push(PAGE_URL.index);\n    } else {\n      const errorMessage = res.data.code === 3 ? 'Неверный логин или пароль' : 'Ошибка авторизации';\n      this.setState({ errorMessage });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-wrapper\">\n          <div className=\"login-block\">\n            <form className=\"login-panel\" onSubmit={this.login}>\n              <div className=\"header-block\">\n                <div className=\"header-block__logo\" />\n                <div className=\"header-block__title\">SlotAdmin<span>Система учета клиентов</span></div>\n              </div>\n              <div className=\"login-panel__header\">Вход в систему учета клиентов</div>\n              <label>\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  icon=\"login\"\n                  placeholder=\"Введите логин\"\n                  validationType=\"login\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Пароль</div>\n                <Input\n                  name=\"password\"\n                  icon=\"password\"\n                  type=\"password\"\n                  placeholder=\"Введите пароль\"\n                  validationType=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <div className={classNames('login-panel__error', { 'login-panel__error_show': this.state.errorMessage})}>\n                {this.state.errorMessage}\n              </div>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>Вход</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { PureComponent } from 'react';\nimport './Root.scss';\n\nimport Input from '../UI/Input/Input';\nimport API from '../../API'; \nimport { PAGE_URL } from '../../constants';\n\nclass Root extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  componentWillMount() {\n    this.checkIfRootExist();\n  }\n\n  checkIfRootExist = async () => {\n    const response = await API.hasRoot();\n    if (response.hasRoot) {\n      this.props.history.push(PAGE_URL.index);\n    }\n  }\n\n  onChangeInput = ({name, value, isValid}) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  createAccount = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'root',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.history.push(PAGE_URL.login);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"root-page\">\n        <div className=\"root-wrapper\">\n          <div className=\"root-block\">\n            <form className=\"root-panel\" onSubmit={this.createAccount}>\n              <div className=\"root-panel__header\">Создание администратора системы</div>\n              <label>\n                <div>Логин</div>\n                <Input\n                  name=\"login\"\n                  placeholder=\"Логин\"\n                  validationType=\"login\"\n                  value={this.state.login}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Пароль</div>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Пароль\"\n                  validationType=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <label>\n                <div>Повтор пароля</div>\n                <Input\n                  type=\"password\"\n                  name=\"repeatPassword\"\n                  placeholder=\"Пароль\"\n                  validationType=\"password\"\n                  value={this.state.repeatPassword}\n                  compareWith={this.state.password}\n                  onChange={this.onChangeInput}\n                />\n              </label>\n              <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>create</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Root;","import React, { PureComponent } from 'react';\n\nimport Input from '../../UI/Input/Input';\nimport API from '../../../API';\n\nclass AddAgent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      loginIsValid: false,\n      password: '',\n      passwordIsValid: false,\n      repeatPassword: '',\n      repeatPasswordIsValid: false,\n    };\n  }\n\n  onChangeInput = ({ name, value, isValid }) => {\n    this.setState({\n      [name]: value,\n      [`${name}IsValid`]: isValid,\n    });\n  }\n\n  isFormValid = () => {\n    return this.state.loginIsValid && this.state.passwordIsValid && this.state.repeatPasswordIsValid;\n  }\n\n  addAgent = async (e) => {\n    e.preventDefault();\n    const response = await API.createUser({\n      role: 'agent',\n      login: this.state.login,\n      password: this.state.password,\n    });\n    if (response.isOk) {\n      this.props.openPopup('alert', {type: 'success', text: `Агент <b>${this.state.login}</b> успешно добавлен`});\n    } else {\n      const text = response.data.code === 6 ? 'Такой логин уже зарегистрирован' : 'Произошла ошибка';\n      this.props.openPopup('alert', { type: 'error', text });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"popup-content popup_add-agent\">\n        <div className=\"popup-content__title\">Добавить агента</div>\n        <form onSubmit={this.addAgent}>\n          <label>\n            <div>Логин</div>\n            <Input\n              name=\"login\"\n              icon=\"login\"\n              placeholder=\"Введите логин\"\n              validationType=\"login\"\n              value={this.state.login}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label>\n            <div>Пароль</div>\n            <Input\n              name=\"password\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              validationType=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <label>\n            <div>Повтор пароля</div>\n            <Input\n              name=\"repeatPassword\"\n              icon=\"password\"\n              type=\"password\"\n              placeholder=\"Повторите пароль\"\n              validationType=\"password\"\n              value={this.state.repeatPassword}\n              compareWith={this.state.password}\n              onChange={this.onChangeInput}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" disabled={!this.isFormValid()}>\n            <span className=\"button_add\">Добавить</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddAgent;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends Component {\n  static defaultProps = {\n    data: {\n      type: 'success',\n      text: 'success',\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    const {type, text} = this.props.data;\n    return (\n      <div className=\"popup-content popup_alert\">\n        <div className={`popup_alert__alert popup_alert__alert_${type}`}>\n          <span className=\"popup_alert__msg\" dangerouslySetInnerHTML={{__html: text}}/>\n        </div>\n        <button className=\"button\" onClick={this.props.close}>Закрыть</button>\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  close: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    type: PropTypes.oneOf(['success', 'error', 'worning']).isRequired,\n    text: PropTypes.string.isRequired,\n  })\n};\n\nexport default Alert;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './Popup.scss';\n\nimport AddAgent from './popups/AddAgent';\nimport Alert from './popups/Alert';\n\nclass Popup extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  preventClosing = (e) => {\n    e.stopPropagation();\n  }\n\n  onPressEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  render() {\n    if (!this.props.isOpen) {\n      document.removeEventListener('keydown', this.onPressEsc);\n    } else {\n      document.addEventListener('keydown', this.onPressEsc);\n    }\n\n    let content;\n    if (this.props.name === 'add-agent') {\n      content = <AddAgent openPopup={this.props.open}/>\n    } else if (this.props.name === 'alert') {\n      content = <Alert data={this.props.data} close={this.props.close}/>\n    }\n\n    return (\n      <ReactCSSTransitionGroup\n        transitionName=\"showpopup\"\n        transitionEnterTimeout={200}\n        transitionLeaveTimeout={150}>\n        {\n          this.props.isOpen && \n          <div className=\"popup-wrapper\" onClick={this.props.name === 'alert' ? null : this.props.close}>\n            <div className=\"popup-block\">\n              <div className=\"content-wrapper\" onClick={this.preventClosing}>\n                { this.props.name !== 'alert' && <div className=\"close-btn\" onClick={this.props.close} />}\n                {content}\n              </div>\n            </div>\n          </div>\n        }\n      </ReactCSSTransitionGroup>\n      \n    );\n  }\n}\n\nPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Popup;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport { PAGE_URL } from './constants';\nimport Index from './components/Index/Index';\nimport Login from './components/Login/Login';\nimport Root from './components/Root/Root';\nimport Popup from './components/Popup/Popup';\n\nclass App extends Component {\n  state = {\n    popupIsOpen: false,\n    popupName: '',\n    popupData: null,\n  }\n\n  openPopup = (popupName, data) => {\n    this.setState({\n      popupIsOpen: true,\n      popupName,\n      popupData: data,\n    });\n  }\n\n  closePopup = () => {\n    this.setState({\n      popupIsOpen: false\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"router\">\n          <Route path={PAGE_URL.index} exact render={(props) => <Index {...props} openPopup={this.openPopup} />} />\n          <Route path={PAGE_URL.login} exact component={Login} />\n          <Route path={PAGE_URL.root} exact component={Root} />\n          <Popup \n            isOpen={this.state.popupIsOpen}\n            name={this.state.popupName}\n            data={this.state.popupData}\n            open={this.openPopup}\n            close={this.closePopup}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}